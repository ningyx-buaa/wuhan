!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e(t.qtek={})}(this,function(t){"use strict";function e(t,e,i){"object"==typeof e&&(i=e,e=null);var a,o=this;if(!(t instanceof Function)){a=[];for(var s in t)t.hasOwnProperty(s)&&a.push(s)}var u=function(e){if(o.apply(this,arguments),t instanceof Function?r(this,t.call(this,e)):n(this,t,a),this.constructor===u)for(var i=u.__initializers__,s=0;s<i.length;s++)i[s].apply(this,arguments)};u.__super__=o,o.__initializers__?u.__initializers__=o.__initializers__.slice():u.__initializers__=[],e&&u.__initializers__.push(e);var l=function(){};return l.prototype=o.prototype,u.prototype=new l,u.prototype.constructor=u,r(u.prototype,i),u.extend=o.extend,u.derive=o.extend,u}function r(t,e){if(e)for(var r in e)e.hasOwnProperty(r)&&(t[r]=e[r])}function n(t,e,r){for(var n=0;n<r.length;n++){var i=r[n];t[i]=e[i]}}function i(t,e){this.action=t,this.context=e}function a(){}function o(t,e){return t[e]}function s(t,e,r){t[e]=r}function u(t,e,r){return(e-t)*r+t}function l(t,e,r,n,i){var a=t.length;if(1==i)for(var o=0;o<a;o++)n[o]=u(t[o],e[o],r);else for(var s=t[0].length,o=0;o<a;o++)for(var l=0;l<s;l++)n[o][l]=u(t[o][l],e[o][l],r)}function h(t){return void 0!==t&&("string"!=typeof t&&"number"==typeof t.length)}function c(t){if(h(t)){var e=t.length;if(h(t[0])){for(var r=[],n=0;n<e;n++)r.push(Pt.call(t[n]));return r}return Pt.call(t)}return t}function f(t,e,r,n,i,a,o,s,u){var l=t.length;if(1==u)for(var h=0;h<l;h++)s[h]=d(t[h],e[h],r[h],n[h],i,a,o);else for(var c=t[0].length,h=0;h<l;h++)for(var f=0;f<c;f++)s[h][f]=d(t[h][f],e[h][f],r[h][f],n[h][f],i,a,o)}function d(t,e,r,n,i,a,o){var s=.5*(r-t),u=.5*(n-e);return(2*(e-r)+s+u)*o+(-3*(e-r)-2*s-u)*a+s*i+e}function _(t,e,r){var n=t.length,i=e.length;if(n!==i){if(n>i)t.length=i;else for(var a=n;a<i;a++)t.push(1===r?e[a]:Pt.call(e[a]))}for(var o=t[0]&&t[0].length,a=0;a<t.length;a++)if(1===r)isNaN(t[a])&&(t[a]=e[a]);else for(var s=0;s<o;s++)isNaN(t[a][s])&&(t[a][s]=e[a][s])}function m(t,e,r){if(t===e)return!0;var n=t.length;if(n!==e.length)return!1;if(1===r){for(var i=0;i<n;i++)if(t[i]!==e[i])return!1}else for(var a=t[0].length,i=0;i<n;i++)for(var o=0;o<a;o++)if(t[i][o]!==e[i][o])return!1;return!0}function p(t,e,r,n,i,a){var o=t._getter,s=t._setter,c="spline"===e,p=n.length;if(p){var v=n[0].value,g=h(v),y=g&&h(v[0])?2:1;n.sort(function(t,e){return t.time-e.time});for(var x=n[p-1].time,T=[],E=[],b=n[0].value,S=!0,A=0;A<p;A++){T.push(n[A].time/x);var N=n[A].value;g&&m(N,b,y)||!g&&N===b||(S=!1),b=N,E.push(N)}if(!S){for(var M=E[p-1],A=0;A<p-1;A++)g?_(E[A],M,y):isNaN(E[A])&&!isNaN(M)&&(E[A]=M);g&&_(o(t._target,i),M,y);var w,A,R,C,L,P,D,I=0,O=0,k=function(t,e){if(e<O){for(w=Math.min(I+1,p-1),A=w;A>=0&&!(T[A]<=e);A--);A=Math.min(A,p-2)}else{for(A=I;A<p&&!(T[A]>e);A++);A=Math.min(A-1,p-2)}I=A,O=e;var r=T[A+1]-T[A];0!==r&&(R=(e-T[A])/r,c?(L=E[A],C=E[0===A?A:A-1],P=E[A>p-2?p-1:A+1],D=E[A>p-3?p-1:A+2],a?s(t,i,a(o(t,i),C,L,P,D,R)):g?f(C,L,P,D,R,R*R,R*R*R,o(t,i),y):s(t,i,d(C,L,P,D,R,R*R,R*R*R))):a?s(t,i,a(o(t,i),E[A],E[A+1],R)):g?l(E[A],E[A+1],R,o(t,i),y):s(t,i,u(E[A],E[A+1],R)))},U=new Lt({target:t._target,life:x,loop:t._loop,delay:t._delay,onframe:k,onfinish:r});return e&&"spline"!==e&&U.setEasing(e),U}}}function v(t,e,r,n,i){this._tracks={},this._target=t,this._loop=e||!1,this._getter=r||o,this._setter=n||s,this._interpolater=i||null,this._delay=0,this._doneList=[],this._onframeList=[],this._clipList=[]}function g(t){var e,r,n,i,a,o,s=Number.POSITIVE_INFINITY,u=Number.POSITIVE_INFINITY,l=Number.NEGATIVE_INFINITY,h=Number.NEGATIVE_INFINITY;for(e=t.length;e--;)t[e][0]<s&&(s=t[e][0]),t[e][0]>l&&(l=t[e][0]),t[e][1]<u&&(u=t[e][1]),t[e][1]>h&&(h=t[e][1]);return r=l-s,n=h-u,i=Math.max(r,n),a=s+.5*r,o=u+.5*n,[[a-20*i,o-i],[a,o+20*i],[a+20*i,o-i]]}function y(t,e,r,n){var i,a,o,s,u,l,h,c,f,d,_=t[e][0],m=t[e][1],p=t[r][0],v=t[r][1],g=t[n][0],y=t[n][1],x=Math.abs(m-v),T=Math.abs(v-y);if(x<Ut&&T<Ut)throw new Error("Eek! Coincident points!");return x<Ut?(s=-(g-p)/(y-v),l=(p+g)/2,c=(v+y)/2,i=(p+_)/2,a=s*(i-l)+c):T<Ut?(o=-(p-_)/(v-m),u=(_+p)/2,h=(m+v)/2,i=(g+p)/2,a=o*(i-u)+h):(o=-(p-_)/(v-m),s=-(g-p)/(y-v),u=(_+p)/2,l=(p+g)/2,h=(m+v)/2,c=(v+y)/2,i=(o*u-s*l+c-h)/(o-s),a=x>T?o*(i-u)+h:s*(i-l)+c),f=p-i,d=v-a,{i:e,j:r,k:n,x:i,y:a,r:f*f+d*d}}function x(t){var e,r,n,i,a,o;for(r=t.length;r;)for(i=t[--r],n=t[--r],e=r;e;)if(o=t[--e],a=t[--e],n===a&&i===o||n===o&&i===a){t.splice(r,2),t.splice(e,2);break}}function T(t,e){return t.time-e.time}function E(t,e,r,n,i,a){var o=e[i],s=e[i+1],u=e[i+2];return t[0]=o+n*(r[a]-o),t[1]=s+n*(r[a+1]-s),t[2]=u+n*(r[a+2]-u),t}function b(t,e,r,n,i,a){var o,s,u,l,h,c=e[0+i],f=e[1+i],d=e[2+i],_=e[3+i],m=r[0+a],p=r[1+a],v=r[2+a],g=r[3+a];return s=c*m+f*p+d*v+_*g,s<0&&(s=-s,m=-m,p=-p,v=-v,g=-g),1-s>1e-6?(o=Math.acos(s),u=Math.sin(o),l=Math.sin((1-n)*o)/u,h=Math.sin(n*o)/u):(l=1-n,h=n),t[0]=l*c+h*m,t[1]=l*f+h*p,t[2]=l*d+h*v,t[3]=l*_+h*g,t}function S(t){var e=new XMLHttpRequest;e.open("get",t.url),e.responseType=t.responseType||"text",t.onprogress&&(e.onprogress=function(e){if(e.lengthComputable){var r=e.loaded/e.total;t.onprogress(r,e.loaded,e.total)}else t.onprogress(null)}),e.onload=function(r){e.status>=400?t.onerror&&t.onerror():t.onload&&t.onload(e.response)},t.onerror&&(e.onerror=t.onerror),e.send(null)}function A(t,e){var r=new te;return $t.get({url:t,responseType:e,onload:function(t){r.resolve(t)},onerror:function(t){r.reject(t)}}),r}function N(t,e,r){return t<e?e:t>r?r:t}function M(t){this.ctor=t,this._data=[],this._size=0}function w(){this.vertices=[Ze(),Ze(),Ze()],this.color=Ze(),this.depth=0}function R(){this.vertices=[Ze()],this.color=Ze(),this.depth=0}function C(){this.vertices=[Ze(),Ze()],this.color=Ze(),this.depth=0,this.lineWidth=1}function L(t,e){return e.depth-t.depth}function P(t){return"rgb("+Je(255*t[0])+","+Je(255*t[1])+","+Je(255*t[2])+")"}function D(t){return"rgba("+Je(255*t[0])+","+Je(255*t[1])+","+Je(255*t[2])+","+t[3]+")"}function I(t){wt.defaultsWithPropList(t,ur,lr),O(t);for(var e="",r=0;r<lr.length;r++){e+=t[lr[r]].toString()}return e}function O(t){var e=k(t.width,t.height);t.format===je.DEPTH_COMPONENT&&(t.useMipmap=!1),e&&t.useMipmap||(t.minFilter==je.NEAREST_MIPMAP_NEAREST||t.minFilter==je.NEAREST_MIPMAP_LINEAR?t.minFilter=je.NEAREST:t.minFilter!=je.LINEAR_MIPMAP_LINEAR&&t.minFilter!=je.LINEAR_MIPMAP_NEAREST||(t.minFilter=je.LINEAR)),e||(t.wrapS=je.CLAMP_TO_EDGE,t.wrapT=je.CLAMP_TO_EDGE)}function k(t,e){return 0==(t&t-1)&&0==(e&e-1)}function U(t){return"CANVAS"===t.nodeName||"VIDEO"===t.nodeName||t.complete}function F(t){return{byte:Tr.Int8Array,ubyte:Tr.Uint8Array,short:Tr.Int16Array,ushort:Tr.Uint16Array}[t]||Tr.Float32Array}function B(t){return"attr_"+t}function H(t,e,r,n){switch(this.name=t,this.type=e,this.size=r,this.semantic=n||"",this.value=null,r){case 1:this.get=function(t){return this.value[t]},this.set=function(t,e){this.value[t]=e},this.copy=function(t,e){this.value[t]=this.value[t]};break;case 2:this.get=function(t,e){var r=this.value;return e[0]=r[2*t],e[1]=r[2*t+1],e},this.set=function(t,e){var r=this.value;r[2*t]=e[0],r[2*t+1]=e[1]},this.copy=function(t,e){var r=this.value;e*=2,t*=2,r[t]=r[e],r[t+1]=r[e+1]};break;case 3:this.get=function(t,e){var r=3*t,n=this.value;return e[0]=n[r],e[1]=n[r+1],e[2]=n[r+2],e},this.set=function(t,e){var r=3*t,n=this.value;n[r]=e[0],n[r+1]=e[1],n[r+2]=e[2]},this.copy=function(t,e){var r=this.value;e*=3,t*=3,r[t]=r[e],r[t+1]=r[e+1],r[t+2]=r[e+2]};break;case 4:this.get=function(t,e){var r=this.value,n=4*t;return e[0]=r[n],e[1]=r[n+1],e[2]=r[n+2],e[3]=r[n+3],e},this.set=function(t,e){var r=this.value,n=4*t;r[n]=e[0],r[n+1]=e[1],r[n+2]=e[2],r[n+3]=e[3]},this.copy=function(t,e){var r=this.value;e*=4,t*=4,r[t]=r[e],r[t+1]=r[e+1],r[t+2]=r[e+2],r[t+3]=r[e+3]}}}function G(t,e,r,n,i){this.name=t,this.type=e,this.buffer=r,this.size=n,this.semantic=i,this.symbol="",this.needsRemove=!1}function W(t){this.buffer=t,this.count=0}function V(){return{locations:{},attriblocations:{}}}function q(t,e,r){if(!t.getShaderParameter(e,t.COMPILE_STATUS))return[t.getShaderInfoLog(e),z(r)].join("\n")}function z(t){for(var e=t.split("\n"),r=0,n=e.length;r<n;r++)e[r]=r+1+": "+e[r];return e.join("\n")}function X(t,e,r){this.availableAttributes=t,this.availableAttributeSymbols=e,this.indicesBuffer=r,this.vao=null}function j(t){function e(e){var n=t.getExtension(e);n||(n=t.getExtension("MOZ_"+e)),n||(n=t.getExtension("WEBKIT_"+e)),r[e]=n}for(var r={},n={},i=0;i<sn.length;i++){e(sn[i])}for(var i=0;i<un.length;i++){var a=un[i];n[a]=t.getParameter(t[a])}this.getExtension=function(t){return t in r||e(t),r[t]},this.getParameter=function(t){return n[t]}}function Y(){this._pool={}}function K(t,e,r){cn[t]={vertex:e,fragment:r}}function Q(t){var e=document.createElement("canvas");e.width=e.height=1;var r=e.getContext("2d");return r.fillStyle=t||"#000",r.fillRect(0,0,1,1),e}function Z(t,e,r,n,i){var a=t.gl;e.setUniform(a,"1i",r,i),a.activeTexture(a.TEXTURE0+i),n.isRenderable()?n.bind(t):n.unbind(t)}function J(t,e,r){var n,i,a;return function(o,s,u){if(!a||a.__standardMat!==o.__standardMat){var l,h,c,f=o.__standardMat,d=o.material,_=f.shader.isDefined("fragment","USE_ROUGHNESS"),m=f.shader.isDefined("fragment","DOUBLE_SIDED");_?(l=1-f.get("roughness"),h=f.get("roughnessMap"),c=f.shader.getDefine("fragment","ROUGHNESS_CHANNEL")):(l=f.get("glossiness"),h=f.get("glossinessMap"),c=f.shader.getDefine("fragment","GLOSSINESS_CHANNEL"));var p=!!h,v=f.get("normalMap")||e,g=f.get("uvRepeat"),y=f.get("uvOffset");h=h||r,s!==d?(d.set("glossiness",l),d.set("normalMap",v),d.set("roughGlossMap",h),d.set("useRoughGlossMap",+p),d.set("useRoughness",+_),d.set("doubleSided",+m),d.set("roughGlossChannel",+c||0),d.set("uvRepeat",g),d.set("uvOffset",y)):(d.shader.setUniform(t,"1f","glossiness",l),n!==v&&Z(this,d.shader,"normalMap",v,0),i!==h&&Z(this,d.shader,"roughGlossMap",h,1),d.shader.setUniform(t,"1i","useRoughGlossMap",+p),d.shader.setUniform(t,"1i","useRoughness",+_),d.shader.setUniform(t,"1i","doubleSided",+m),d.shader.setUniform(t,"1i","roughGlossChannel",+c||0),null!=g&&d.shader.setUniform(t,"2f","uvRepeat",g),null!=y&&d.shader.setUniform(t,"2f","uvOffset",y)),n=v,i=h,a=o}}}function $(t,e,r){var n,i,a;return function(o,s,u){if(!i||i.__standardMat!==o.__standardMat){var l=o.__standardMat,h=o.material,c=l.get("color"),f=l.get("metalness"),d=l.get("diffuseMap"),_=l.get("metalnessMap"),m=l.get("uvRepeat"),p=l.get("uvOffset"),v=!!_;d=d||e,_=_||r,s!==h?(h.set("color",c),h.set("metalness",f),h.set("diffuseMap",d),h.set("metalnessMap",_),h.set("useMetalnessMap",+v),h.set("uvRepeat",m),h.set("uvOffset",p),h.set("linear",+l.linear)):(h.shader.setUniform(t,"1f","metalness",f),h.shader.setUniform(t,"3f","color",c),n!==d&&Z(this,h.shader,"diffuseMap",d,0),a!==_&&Z(this,h.shader,"metalnessMap",_,1),h.shader.setUniform(t,"1i","useMetalnessMap",+v),h.shader.setUniform(t,"2f","uvRepeat",m),h.shader.setUniform(t,"2f","uvOffset",p),h.shader.setUniform(t,"1i","linear",+l.linear)),n=d,a=_,i=o}}}function tt(t,e,r){Pn.identity();var n=new wr({widthSegments:e,heightSegments:r});switch(t){case"px":ge.translate(Pn,Pn,ie.POSITIVE_X),ge.rotateY(Pn,Pn,Math.PI/2);break;case"nx":ge.translate(Pn,Pn,ie.NEGATIVE_X),ge.rotateY(Pn,Pn,-Math.PI/2);break;case"py":ge.translate(Pn,Pn,ie.POSITIVE_Y),ge.rotateX(Pn,Pn,-Math.PI/2);break;case"ny":ge.translate(Pn,Pn,ie.NEGATIVE_Y),ge.rotateX(Pn,Pn,Math.PI/2);break;case"pz":ge.translate(Pn,Pn,ie.POSITIVE_Z);break;case"nz":ge.translate(Pn,Pn,ie.NEGATIVE_Z),ge.rotateY(Pn,Pn,Math.PI)}return n.applyTransform(Pn),n}function et(t,e){if(e.castShadow&&!t.castShadow)return!0}function rt(t){return t.charCodeAt(0)+(t.charCodeAt(1)<<8)+(t.charCodeAt(2)<<16)+(t.charCodeAt(3)<<24)}function nt(t,e,r,n){if(t[3]>0){var i=Math.pow(2,t[3]-128-8+n);e[r+0]=t[0]*i,e[r+1]=t[1]*i,e[r+2]=t[2]*i}else e[r+0]=0,e[r+1]=0,e[r+2]=0;return e[r+3]=1,e}function it(t,e,r){for(var n="",i=e;i<r;i++)n+=Yn(t[i]);return n}function at(t,e){e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3]}function ot(t,e,r,n){for(var i=0,a=0,o=n;o>0;)if(t[a][0]=e[r++],t[a][1]=e[r++],t[a][2]=e[r++],t[a][3]=e[r++],1===t[a][0]&&1===t[a][1]&&1===t[a][2]){for(var s=t[a][3]<<i>>>0;s>0;s--)at(t[a-1],t[a]),a++,o--;i+=8}else a++,o--,i=0;return r}function st(t,e,r,n){if(n<Kn|n>Qn)return ot(t,e,r,n);var i=e[r++];if(2!=i)return ot(t,e,r-1,n);if(t[0][1]=e[r++],t[0][2]=e[r++],i=e[r++],(t[0][2]<<8>>>0|i)>>>0!==n)return null;for(var i=0;i<4;i++)for(var a=0;a<n;){var o=e[r++];if(o>128){o=(127&o)>>>0;for(var s=e[r++];o--;)t[a++][i]=s}else for(;o--;)t[a++][i]=e[r++]}return r}function ut(t,e){return function(r){var n=r.getDevicePixelRatio(),i=r.getWidth(),a=r.getHeight(),o=e(i,a,n);this.setParameter(t,o)}}function lt(t,e){return function(t){var r=t.getDevicePixelRatio(),n=t.getWidth(),i=t.getHeight();return e(n,i,r)}}function ht(t){var e=/^expr\((.*)\)$/.exec(t);if(e)try{var r=new Function("width","height","dpr","return "+e[1]);return r(1,1),r}catch(t){throw new Error("Invalid expression.")}}function ct(t,e,r){var n=e;n+=256*r.roughnessChannel,n+=1024*r.metalnessChannel;for(var i=0;i<t.length;i++)n+=yi[t[i]];for(var i=0;i<vi.length;i++){var a=vi[i];r[a]&&(n+=yi[a])}return n}function ft(t,e,r,n){var i=ct(e,r,n);di[t.__GUID__]||(di[t.__GUID__]={});var a=fi[i];return a||(a=new Wr({vertex:Wr.source("qtek.standard.vertex"),fragment:Wr.source("qtek.standard.fragment")}),a.enableTexture(e),a.define("fragment","USE_METALNESS"),a.define("fragment","USE_ROUGHNESS"),a.define("ROUGHNESS_CHANNEL",n.roughnessChannel),a.define("METALNESS_CHANNEL",n.metalnessChannel),r&&(a.define("vertex","SKINNING"),a.define("vertex","JOINT_COUNT",r)),n.environmentMapPrefiltered&&a.define("fragment","ENVIRONMENTMAP_PREFILTER"),n.linear&&a.define("fragment","SRGB_DECODE"),n.encodeRGBM&&a.define("fragment","RGBM_ENCODE"),n.decodeRGBM&&a.define("fragment","RGBM_DECODE"),n.parallaxCorrected&&a.define("fragment","PARALLAX_CORRECTED"),n.doubleSided&&a.define("fragment","DOUBLE_SIDED"),n.alphaTest&&a.define("fragment","ALPHA_TEST"),fi[i]=a),di[t.__GUID__][i]||(di[t.__GUID__][i]=0),di[t.__GUID__][i]++,a.__key__=i,a}function dt(t,e){var r=t.__key__;fi[r]&&(--di[e.__GUID__][r]||e&&t.dispose(e))}function _t(t,e,r,n){var i=t.accessors[r],a=e.bufferViews[i.bufferView],o=i.byteOffset||0,s=Ni[i.componentType]||Tr.Float32Array,u=Mi[i.type];null==u&&n&&(u=1);var l=new s(a,o,u*i.count),h=i.extensions&&i.extensions.WEB3D_quantized_attributes;if(h){for(var c,f,d=new Tr.Float32Array(u*i.count),_=h.decodeMatrix,c=new Array(u),f=new Array(u),m=0;m<u;m++)c[m]=_[u*(u+1)+m],f[m]=_[m*(u+1)+m];for(var p=0;p<i.count;p++)for(var m=0;m<u;m++)d[p*u+m]=l[p*u+m]*f[m]+c[m];l=d}return l}function mt(t){var e=t>>16,r=t-(e<<8)>>8;return[e,r,t-(e<<16)-(r<<8)]}function pt(t,e,r){return(t<<16)+(e<<8)+r}function vt(t){var e=t[1][0]-t[0][0],r=t[1][1]-t[0][1];return Math.sqrt(e*e+r*r)}function gt(t){return[(t[0][0]+t[1][0])/2,(t[0][1]+t[1][1])/2]}function yt(t){return Array.isArray(t)||(t=[t,t]),t}function xt(t,e){var r=t[0],n=t[1],i=t[2];return 0===e?1:1===e?r:2===e?n:3===e?i:4===e?r*i:5===e?n*i:6===e?r*n:7===e?3*i*i-1:r*r-n*n}function Tt(t,e,r,n){for(var i=new Tr.Float32Array(27),a=va.create(),o=va.create(),s=va.create(),u=0;u<9;u++){for(var l=va.create(),h=0;h<ya.length;h++){for(var c=e[ya[h]],f=va.create(),d=0,_=0,m=xa[ya[h]],p=0;p<n;p++)for(var v=0;v<r;v++){a[0]=v/(r-1)*2-1,a[1]=p/(n-1)*2-1,a[2]=-1,va.normalize(a,a),s[0]=a[m[0]]*m[3],s[1]=a[m[1]]*m[4],s[2]=a[m[2]]*m[5],o[0]=c[_++]/255,o[1]=c[_++]/255,o[2]=c[_++]/255;var g=c[_++]/255*51.5;o[0]*=g,o[1]*=g,o[2]*=g,va.scaleAndAdd(f,f,o,xt(s,u)*-a[2]),d+=-a[2]}va.scaleAndAdd(l,l,f,1/d)}i[3*u]=l[0]/6,i[3*u+1]=l[1]/6,i[3*u+2]=l[2]/6}return i}function Et(t,e,r){return t*(1-r)+e*r}var bt={extend:e,derive:e},St={trigger:function(t){if(this.hasOwnProperty("__handlers__")&&this.__handlers__.hasOwnProperty(t)){var e=this.__handlers__[t],r=e.length,n=-1,i=arguments;switch(i.length){case 1:for(;++n<r;)e[n].action.call(e[n].context);return;case 2:for(;++n<r;)e[n].action.call(e[n].context,i[1]);return;case 3:for(;++n<r;)e[n].action.call(e[n].context,i[1],i[2]);return;case 4:for(;++n<r;)e[n].action.call(e[n].context,i[1],i[2],i[3]);return;case 5:for(;++n<r;)e[n].action.call(e[n].context,i[1],i[2],i[3],i[4]);return;default:for(;++n<r;)e[n].action.apply(e[n].context,Array.prototype.slice.call(i,1));return}}},on:function(t,e,r){if(t&&e){var n=this.__handlers__||(this.__handlers__={});if(n[t]){if(this.has(t,e))return}else n[t]=[];var a=new i(e,r||this);return n[t].push(a),this}},once:function(t,e,r){function n(){i.off(t,n),e.apply(this,arguments)}if(t&&e){var i=this;return this.on(t,n,r)}},before:function(t,e,r){if(t&&e)return t="before"+t,this.on(t,e,r)},after:function(t,e,r){if(t&&e)return t="after"+t,this.on(t,e,r)},success:function(t,e){return this.once("success",t,e)},error:function(t,e){return this.once("error",t,e)},off:function(t,e){var r=this.__handlers__||(this.__handlers__={});if(!e)return void(r[t]=[]);if(r[t]){for(var n=r[t],i=[],a=0;a<n.length;a++)e&&n[a].action!==e&&i.push(n[a]);r[t]=i}return this},has:function(t,e){var r=this.__handlers__;if(!r||!r[t])return!1;for(var n=r[t],i=0;i<n.length;i++)if(n[i].action===e)return!0}},At=0,Nt=Array.prototype,Mt=Nt.forEach,wt={genGUID:function(){return++At},relative2absolute:function(t,e){if(!e||t.match(/^\//))return t;for(var r=t.split("/"),n=e.split("/"),i=r[0];"."===i||".."===i;)".."===i&&n.pop(),r.shift(),i=r[0];return n.join("/")+"/"+r.join("/")},extend:function(t,e){if(e)for(var r in e)e.hasOwnProperty(r)&&(t[r]=e[r]);return t},defaults:function(t,e){if(e)for(var r in e)void 0===t[r]&&(t[r]=e[r]);return t},extendWithPropList:function(t,e,r){if(e)for(var n=0;n<r.length;n++){var i=r[n];t[i]=e[i]}return t},defaultsWithPropList:function(t,e,r){if(e)for(var n=0;n<r.length;n++){var i=r[n];null==t[i]&&(t[i]=e[i])}return t},each:function(t,e,r){if(t&&e)if(t.forEach&&t.forEach===Mt)t.forEach(e,r);else if(t.length===+t.length)for(var n=0,i=t.length;n<i;n++)e.call(r,t[n],n,t);else for(var a in t)t.hasOwnProperty(a)&&e.call(r,t[a],a,t)},isObject:function(t){return t===Object(t)},isArray:function(t){return Array.isArray(t)},isArrayLike:function(t){return!!t&&t.length===+t.length},clone:function(t){if(wt.isObject(t)){if(wt.isArray(t))return t.slice();if(wt.isArrayLike(t)){for(var e=new t.constructor(t.length),r=0;r<t.length;r++)e[r]=t[r];return e}return wt.extend({},t)}return t}},Rt=function(){this.__GUID__=wt.genGUID()};Rt.__initializers__=[function(t){wt.extend(this,t)}],wt.extend(Rt,bt),wt.extend(Rt.prototype,St);var Ct={linear:function(t){return t},quadraticIn:function(t){return t*t},quadraticOut:function(t){return t*(2-t)},quadraticInOut:function(t){return(t*=2)<1?.5*t*t:-.5*(--t*(t-2)-1)},cubicIn:function(t){return t*t*t},cubicOut:function(t){return--t*t*t+1},cubicInOut:function(t){return(t*=2)<1?.5*t*t*t:.5*((t-=2)*t*t+2)},quarticIn:function(t){return t*t*t*t},quarticOut:function(t){return 1- --t*t*t*t},quarticInOut:function(t){return(t*=2)<1?.5*t*t*t*t:-.5*((t-=2)*t*t*t-2)},quinticIn:function(t){return t*t*t*t*t},quinticOut:function(t){return--t*t*t*t*t+1},quinticInOut:function(t){return(t*=2)<1?.5*t*t*t*t*t:.5*((t-=2)*t*t*t*t+2)},sinusoidalIn:function(t){return 1-Math.cos(t*Math.PI/2)},sinusoidalOut:function(t){return Math.sin(t*Math.PI/2)},sinusoidalInOut:function(t){return.5*(1-Math.cos(Math.PI*t))},exponentialIn:function(t){return 0===t?0:Math.pow(1024,t-1)},exponentialOut:function(t){return 1===t?1:1-Math.pow(2,-10*t)},exponentialInOut:function(t){return 0===t?0:1===t?1:(t*=2)<1?.5*Math.pow(1024,t-1):.5*(2-Math.pow(2,-10*(t-1)))},circularIn:function(t){return 1-Math.sqrt(1-t*t)},circularOut:function(t){return Math.sqrt(1- --t*t)},circularInOut:function(t){return(t*=2)<1?-.5*(Math.sqrt(1-t*t)-1):.5*(Math.sqrt(1-(t-=2)*t)+1)},elasticIn:function(t){var e,r=.1;return 0===t?0:1===t?1:(!r||r<1?(r=1,e=.1):e=.4*Math.asin(1/r)/(2*Math.PI),-r*Math.pow(2,10*(t-=1))*Math.sin((t-e)*(2*Math.PI)/.4))},elasticOut:function(t){var e,r=.1;return 0===t?0:1===t?1:(!r||r<1?(r=1,e=.1):e=.4*Math.asin(1/r)/(2*Math.PI),r*Math.pow(2,-10*t)*Math.sin((t-e)*(2*Math.PI)/.4)+1)},elasticInOut:function(t){var e,r=.1;return 0===t?0:1===t?1:(!r||r<1?(r=1,e=.1):e=.4*Math.asin(1/r)/(2*Math.PI),(t*=2)<1?r*Math.pow(2,10*(t-=1))*Math.sin((t-e)*(2*Math.PI)/.4)*-.5:r*Math.pow(2,-10*(t-=1))*Math.sin((t-e)*(2*Math.PI)/.4)*.5+1)},backIn:function(t){var e=1.70158;return t*t*((e+1)*t-e)},backOut:function(t){var e=1.70158;return--t*t*((e+1)*t+e)+1},backInOut:function(t){var e=2.5949095;return(t*=2)<1?t*t*((e+1)*t-e)*.5:.5*((t-=2)*t*((e+1)*t+e)+2)},bounceIn:function(t){return 1-Ct.bounceOut(1-t)},bounceOut:function(t){return t<1/2.75?7.5625*t*t:t<2/2.75?7.5625*(t-=1.5/2.75)*t+.75:t<2.5/2.75?7.5625*(t-=2.25/2.75)*t+.9375:7.5625*(t-=2.625/2.75)*t+.984375},bounceInOut:function(t){return t<.5?.5*Ct.bounceIn(2*t):.5*Ct.bounceOut(2*t-1)+.5}},Lt=function(t){t=t||{},this.name=t.name||"",this.target=t.target,this.life=t.life||1e3,this.delay=t.delay||0,this.gap=t.gap||0,this.playbackRate=t.playbackRate||1,this._initialized=!1,this._elapsedTime=0,this._loop=null!=t.loop&&t.loop,this.setLoop(this._loop),null!=t.easing&&this.setEasing(t.easing),this.onframe=t.onframe||a,this.onfinish=t.onfinish||a,this.onrestart=t.onrestart||a,this._paused=!1};Lt.prototype={gap:0,life:0,delay:0,setLoop:function(t){this._loop=t,t&&(this._loopRemained="number"==typeof t?t:1e8)},setEasing:function(t){"string"==typeof t&&(t=Ct[t]),this.easing=t},step:function(t,e,r){if(this._initialized||(this._startTime=t+this.delay,this._initialized=!0),null!=this._currentTime&&(e=t-this._currentTime),this._currentTime=t,this._paused)return"paused";if(!(t<this._startTime)){this._elapse(t,e);var n=Math.min(this._elapsedTime/this.life,1);if(!(n<0)){var i;return i=this.easing?this.easing(n):n,r||this.fire("frame",i),1===n?this._loop&&this._loopRemained>0?(this._restartInLoop(t),this._loopRemained--,"restart"):(this._needsRemove=!0,"finish"):null}}},setTime:function(t){return this.step(t+this._startTime)},restart:function(t){var e=0;t&&(this._elapse(t),e=this._elapsedTime%this.life),t=t||Date.now(),this._startTime=t-e+this.delay,this._elapsedTime=0,this._needsRemove=!1,this._paused=!1},getElapsedTime:function(){return this._elapsedTime},_restartInLoop:function(t){this._startTime=t+this.gap,this._elapsedTime=0},_elapse:function(t,e){this._elapsedTime+=e*this.playbackRate},fire:function(t,e){var r="on"+t;this[r]&&this[r](this.target,e)},clone:function(){var t=new this.constructor;return t.name=this.name,t._loop=this._loop,t._loopRemained=this._loopRemained,t.life=this.life,t.gap=this.gap,t.delay=this.delay,t},pause:function(){this._paused=!0},resume:function(){this._paused=!1}},Lt.prototype.constructor=Lt;var Pt=Array.prototype.slice;v.prototype={constructor:v,when:function(t,e){for(var r in e)this._tracks[r]||(this._tracks[r]=[],0!==t&&this._tracks[r].push({time:0,value:c(this._getter(this._target,r))})),this._tracks[r].push({time:parseInt(t),value:e[r]});return this},during:function(t){return this._onframeList.push(t),this},_doneCallback:function(){this._tracks={},this._clipList.length=0;for(var t=this._doneList,e=t.length,r=0;r<e;r++)t[r].call(this)},start:function(t){var e,r=this,n=0,i=function(){0===--n&&r._doneCallback()};for(var a in this._tracks){var o=p(this,t,i,this._tracks[a],a,r._interpolater);o&&(this._clipList.push(o),n++,this.animation&&this.animation.addClip(o),e=o)}if(e){var s=e.onframe;e.onframe=function(t,e){s(t,e);for(var n=0;n<r._onframeList.length;n++)r._onframeList[n](t,e)}}return n||this._doneCallback(),this},stop:function(){for(var t=0;t<this._clipList.length;t++){var e=this._clipList[t];this.animation.removeClip(e)}this._clipList=[]},delay:function(t){return this._delay=t,this},done:function(t){return t&&this._doneList.push(t),this},getClips:function(){return this._clipList}};var Dt=window.requestAnimationFrame||window.msRequestAnimationFrame||window.mozRequestAnimationFrame||window.webkitRequestAnimationFrame||function(t){setTimeout(t,16)},It=Rt.extend(function(){return{stage:null,_clips:[],_running:!1,_time:0,_paused:!1,_pausedTime:0}},{addAnimator:function(t){t.animation=this;for(var e=t.getClips(),r=0;r<e.length;r++)this.addClip(e[r])},addClip:function(t){this._clips.indexOf(t)<0&&this._clips.push(t)},removeClip:function(t){var e=this._clips.indexOf(t);e>=0&&this._clips.splice(e,1)},removeAnimator:function(t){for(var e=t.getClips(),r=0;r<e.length;r++)this.removeClip(e[r]);t.animation=null},_update:function(){for(var t=Date.now()-this._pausedTime,e=t-this._time,r=this._clips,n=r.length,i=[],a=[],o=0;o<n;o++){var s=r[o],u=s.step(t,e,!1);u&&(i.push(u),a.push(s))}for(var o=0;o<n;)r[o]._needsRemove?(r[o]=r[n-1],r.pop(),n--):o++;n=i.length;for(var o=0;o<n;o++)a[o].fire(i[o]);this._time=t,this.trigger("frame",e),this.stage&&this.stage.render&&this.stage.render()},start:function(){function t(){e._running&&(Dt(t),e._paused||e._update())}var e=this;this._running=!0,this._time=Date.now(),this._pausedTime=0,Dt(t)},stop:function(){this._running=!1},pause:function(){this._paused||(this._pauseStart=Date.now(),this._paused=!0)},resume:function(){this._paused&&(this._pausedTime+=Date.now()-this._pauseStart,this._paused=!1)},removeClipsAll:function(){this._clips=[]},animate:function(t,e){e=e||{};var r=new v(t,e.loop,e.getter,e.setter,e.interpolater);return r.animation=this,r}}),Ot=function(t,e){return t.position<e.position},kt=function(t){t=t||{},Lt.call(this,t),this.output=t.output||null,this.inputs=t.inputs||[],this.position=0,this._cacheKey=0,this._cachePosition=-1/0,this.inputs.sort(Ot)};kt.prototype=new Lt,kt.prototype.constructor=kt,kt.prototype.addInput=function(t,e,r){var n={position:t,clip:e,offset:r||0};if(this.life=Math.max(e.life,this.life),!this.inputs.length)return this.inputs.push(n),n;var i=this.inputs.length;if(this.inputs[0].position>t)this.inputs.unshift(n);else if(this.inputs[i-1].position<=t)this.inputs.push(n);else{var a=this._findKey(t);this.inputs.splice(a,n)}return n},kt.prototype.step=function(t,e,r){var n=Lt.prototype.step.call(this,t);return"finish"!==n&&this.setTime(this.getElapsedTime()),r||"paused"===n||this.fire("frame"),n},kt.prototype.setTime=function(t){var e=this.position,r=this.inputs,n=r.length,i=r[0].position,a=r[n-1].position;if(e<=i||e>=a){var o=e<=i?r[0]:r[n-1],s=o.clip,u=o.offset;s.setTime((t+u)%s.life),s.output instanceof Lt?this.output.copy(s.output):this.output.copy(s)}else{var l=this._findKey(e),h=r[l],c=r[l+1],f=h.clip,d=c.clip;f.setTime((t+h.offset)%f.life),d.setTime((t+c.offset)%d.life);var _=(this.position-h.position)/(c.position-h.position),m=f.output instanceof Lt?f.output:f,p=d.output instanceof Lt?d.output:d;this.output.blend1D(m,p,_)}},kt.prototype.clone=function(t){var e=Lt.prototype.clone.call(this);e.output=this.output.clone();for(var r=0;r<this.inputs.length;r++){var n=t?this.inputs[r].clip.clone(!0):this.inputs[r].clip;e.addInput(this.inputs[r].position,n,this.inputs[r].offset)}return e},kt.prototype._findKey=function(t){var e=-1,r=this.inputs,n=r.length;if(this._cachePosition<t)for(var i=this._cacheKey;i<n-1;i++)t>=r[i].position&&t<r[i+1].position&&(e=i);else for(var a=Math.min(n-2,this._cacheKey),i=a;i>=0;i--)t>=r[i].position&&t<r[i+1].position&&(e=i);return e>=0&&(this._cacheKey=e,this._cachePosition=t),e};var Ut=1/1048576,Ft={triangulate:function(t,e){var r,n,i,a,o,s,u,l,h,c,f,d,_=t.length;if(_<3)return[];if(t=t.slice(0),e)for(r=_;r--;)t[r]=t[r][e];for(i=new Array(_),r=_;r--;)i[r]=r;for(i.sort(function(e,r){var n=t[r][0]-t[e][0];return 0!==n?n:e-r}),a=g(t),t.push(a[0],a[1],a[2]),o=[y(t,_+0,_+1,_+2)],s=[],u=[],r=i.length;r--;u.length=0){for(d=i[r],n=o.length;n--;)l=t[d][0]-o[n].x,l>0&&l*l>o[n].r?(s.push(o[n]),o.splice(n,1)):(h=t[d][1]-o[n].y,l*l+h*h-o[n].r>Ut||(u.push(o[n].i,o[n].j,o[n].j,o[n].k,o[n].k,o[n].i),o.splice(n,1)));for(x(u),n=u.length;n;)f=u[--n],c=u[--n],o.push(y(t,c,f,d))}for(r=o.length;r--;)s.push(o[r]);for(o.length=0,r=s.length;r--;)s[r].i<_&&s[r].j<_&&s[r].k<_&&o.push(s[r].i,s[r].j,s[r].k);return o},contains:function(t,e){if(e[0]<t[0][0]&&e[0]<t[1][0]&&e[0]<t[2][0]||e[0]>t[0][0]&&e[0]>t[1][0]&&e[0]>t[2][0]||e[1]<t[0][1]&&e[1]<t[1][1]&&e[1]<t[2][1]||e[1]>t[0][1]&&e[1]>t[1][1]&&e[1]>t[2][1])return null;var r=t[1][0]-t[0][0],n=t[2][0]-t[0][0],i=t[1][1]-t[0][1],a=t[2][1]-t[0][1],o=r*a-n*i;if(0===o)return null;var s=(a*(e[0]-t[0][0])-n*(e[1]-t[0][1]))/o,u=(r*(e[1]-t[0][1])-i*(e[0]-t[0][0]))/o;return s<0||u<0||s+u>1?null:[s,u]}},Bt=("undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self&&self,function(t,e){return e={exports:{}},t(e,e.exports),e.exports}(function(t,e){!function(t){var r={};r.exports=e,function(t){if(!e)var e=1e-6;if(!r)var r="undefined"!=typeof Float32Array?Float32Array:Array;if(!n)var n=Math.random;var i={};i.setMatrixArrayType=function(t){r=t},void 0!==t&&(t.glMatrix=i);var a=Math.PI/180;i.toRadian=function(t){return t*a};var o={};o.create=function(){var t=new r(2);return t[0]=0,t[1]=0,t},o.clone=function(t){var e=new r(2);return e[0]=t[0],e[1]=t[1],e},o.fromValues=function(t,e){var n=new r(2);return n[0]=t,n[1]=e,n},o.copy=function(t,e){return t[0]=e[0],t[1]=e[1],t},o.set=function(t,e,r){return t[0]=e,t[1]=r,t},o.add=function(t,e,r){return t[0]=e[0]+r[0],t[1]=e[1]+r[1],t},o.subtract=function(t,e,r){return t[0]=e[0]-r[0],t[1]=e[1]-r[1],t},o.sub=o.subtract,o.multiply=function(t,e,r){return t[0]=e[0]*r[0],t[1]=e[1]*r[1],t},o.mul=o.multiply,o.divide=function(t,e,r){return t[0]=e[0]/r[0],t[1]=e[1]/r[1],t},o.div=o.divide,o.min=function(t,e,r){return t[0]=Math.min(e[0],r[0]),t[1]=Math.min(e[1],r[1]),t},o.max=function(t,e,r){return t[0]=Math.max(e[0],r[0]),t[1]=Math.max(e[1],r[1]),t},o.scale=function(t,e,r){return t[0]=e[0]*r,t[1]=e[1]*r,t},o.scaleAndAdd=function(t,e,r,n){return t[0]=e[0]+r[0]*n,t[1]=e[1]+r[1]*n,t},o.distance=function(t,e){var r=e[0]-t[0],n=e[1]-t[1];return Math.sqrt(r*r+n*n)},o.dist=o.distance,o.squaredDistance=function(t,e){var r=e[0]-t[0],n=e[1]-t[1];return r*r+n*n},o.sqrDist=o.squaredDistance,o.length=function(t){var e=t[0],r=t[1];return Math.sqrt(e*e+r*r)},o.len=o.length,o.squaredLength=function(t){var e=t[0],r=t[1];return e*e+r*r},o.sqrLen=o.squaredLength,o.negate=function(t,e){return t[0]=-e[0],t[1]=-e[1],t},o.inverse=function(t,e){return t[0]=1/e[0],t[1]=1/e[1],t},o.normalize=function(t,e){var r=e[0],n=e[1],i=r*r+n*n;return i>0&&(i=1/Math.sqrt(i),t[0]=e[0]*i,t[1]=e[1]*i),t},o.dot=function(t,e){return t[0]*e[0]+t[1]*e[1]},o.cross=function(t,e,r){var n=e[0]*r[1]-e[1]*r[0];return t[0]=t[1]=0,t[2]=n,t},o.lerp=function(t,e,r,n){var i=e[0],a=e[1];return t[0]=i+n*(r[0]-i),t[1]=a+n*(r[1]-a),t},o.random=function(t,e){e=e||1;var r=2*n()*Math.PI;return t[0]=Math.cos(r)*e,t[1]=Math.sin(r)*e,t},o.transformMat2=function(t,e,r){var n=e[0],i=e[1];return t[0]=r[0]*n+r[2]*i,t[1]=r[1]*n+r[3]*i,t},o.transformMat2d=function(t,e,r){var n=e[0],i=e[1];return t[0]=r[0]*n+r[2]*i+r[4],t[1]=r[1]*n+r[3]*i+r[5],t},o.transformMat3=function(t,e,r){var n=e[0],i=e[1];return t[0]=r[0]*n+r[3]*i+r[6],t[1]=r[1]*n+r[4]*i+r[7],t},o.transformMat4=function(t,e,r){var n=e[0],i=e[1];return t[0]=r[0]*n+r[4]*i+r[12],t[1]=r[1]*n+r[5]*i+r[13],t},o.forEach=function(){var t=o.create();return function(e,r,n,i,a,o){var s,u;for(r||(r=2),n||(n=0),u=i?Math.min(i*r+n,e.length):e.length,s=n;s<u;s+=r)t[0]=e[s],t[1]=e[s+1],a(t,t,o),e[s]=t[0],e[s+1]=t[1];return e}}(),o.str=function(t){return"vec2("+t[0]+", "+t[1]+")"},void 0!==t&&(t.vec2=o);var s={};s.create=function(){var t=new r(3);return t[0]=0,t[1]=0,t[2]=0,t},s.clone=function(t){var e=new r(3);return e[0]=t[0],e[1]=t[1],e[2]=t[2],e},s.fromValues=function(t,e,n){var i=new r(3);return i[0]=t,i[1]=e,i[2]=n,i},s.copy=function(t,e){return t[0]=e[0],t[1]=e[1],t[2]=e[2],t},s.set=function(t,e,r,n){return t[0]=e,t[1]=r,t[2]=n,t},s.add=function(t,e,r){return t[0]=e[0]+r[0],t[1]=e[1]+r[1],t[2]=e[2]+r[2],t},s.subtract=function(t,e,r){return t[0]=e[0]-r[0],t[1]=e[1]-r[1],t[2]=e[2]-r[2],t},s.sub=s.subtract,s.multiply=function(t,e,r){
return t[0]=e[0]*r[0],t[1]=e[1]*r[1],t[2]=e[2]*r[2],t},s.mul=s.multiply,s.divide=function(t,e,r){return t[0]=e[0]/r[0],t[1]=e[1]/r[1],t[2]=e[2]/r[2],t},s.div=s.divide,s.min=function(t,e,r){return t[0]=Math.min(e[0],r[0]),t[1]=Math.min(e[1],r[1]),t[2]=Math.min(e[2],r[2]),t},s.max=function(t,e,r){return t[0]=Math.max(e[0],r[0]),t[1]=Math.max(e[1],r[1]),t[2]=Math.max(e[2],r[2]),t},s.scale=function(t,e,r){return t[0]=e[0]*r,t[1]=e[1]*r,t[2]=e[2]*r,t},s.scaleAndAdd=function(t,e,r,n){return t[0]=e[0]+r[0]*n,t[1]=e[1]+r[1]*n,t[2]=e[2]+r[2]*n,t},s.distance=function(t,e){var r=e[0]-t[0],n=e[1]-t[1],i=e[2]-t[2];return Math.sqrt(r*r+n*n+i*i)},s.dist=s.distance,s.squaredDistance=function(t,e){var r=e[0]-t[0],n=e[1]-t[1],i=e[2]-t[2];return r*r+n*n+i*i},s.sqrDist=s.squaredDistance,s.length=function(t){var e=t[0],r=t[1],n=t[2];return Math.sqrt(e*e+r*r+n*n)},s.len=s.length,s.squaredLength=function(t){var e=t[0],r=t[1],n=t[2];return e*e+r*r+n*n},s.sqrLen=s.squaredLength,s.negate=function(t,e){return t[0]=-e[0],t[1]=-e[1],t[2]=-e[2],t},s.inverse=function(t,e){return t[0]=1/e[0],t[1]=1/e[1],t[2]=1/e[2],t},s.normalize=function(t,e){var r=e[0],n=e[1],i=e[2],a=r*r+n*n+i*i;return a>0&&(a=1/Math.sqrt(a),t[0]=e[0]*a,t[1]=e[1]*a,t[2]=e[2]*a),t},s.dot=function(t,e){return t[0]*e[0]+t[1]*e[1]+t[2]*e[2]},s.cross=function(t,e,r){var n=e[0],i=e[1],a=e[2],o=r[0],s=r[1],u=r[2];return t[0]=i*u-a*s,t[1]=a*o-n*u,t[2]=n*s-i*o,t},s.lerp=function(t,e,r,n){var i=e[0],a=e[1],o=e[2];return t[0]=i+n*(r[0]-i),t[1]=a+n*(r[1]-a),t[2]=o+n*(r[2]-o),t},s.random=function(t,e){e=e||1;var r=2*n()*Math.PI,i=2*n()-1,a=Math.sqrt(1-i*i)*e;return t[0]=Math.cos(r)*a,t[1]=Math.sin(r)*a,t[2]=i*e,t},s.transformMat4=function(t,e,r){var n=e[0],i=e[1],a=e[2],o=r[3]*n+r[7]*i+r[11]*a+r[15];return o=o||1,t[0]=(r[0]*n+r[4]*i+r[8]*a+r[12])/o,t[1]=(r[1]*n+r[5]*i+r[9]*a+r[13])/o,t[2]=(r[2]*n+r[6]*i+r[10]*a+r[14])/o,t},s.transformMat3=function(t,e,r){var n=e[0],i=e[1],a=e[2];return t[0]=n*r[0]+i*r[3]+a*r[6],t[1]=n*r[1]+i*r[4]+a*r[7],t[2]=n*r[2]+i*r[5]+a*r[8],t},s.transformQuat=function(t,e,r){var n=e[0],i=e[1],a=e[2],o=r[0],s=r[1],u=r[2],l=r[3],h=l*n+s*a-u*i,c=l*i+u*n-o*a,f=l*a+o*i-s*n,d=-o*n-s*i-u*a;return t[0]=h*l+d*-o+c*-u-f*-s,t[1]=c*l+d*-s+f*-o-h*-u,t[2]=f*l+d*-u+h*-s-c*-o,t},s.rotateX=function(t,e,r,n){var i=[],a=[];return i[0]=e[0]-r[0],i[1]=e[1]-r[1],i[2]=e[2]-r[2],a[0]=i[0],a[1]=i[1]*Math.cos(n)-i[2]*Math.sin(n),a[2]=i[1]*Math.sin(n)+i[2]*Math.cos(n),t[0]=a[0]+r[0],t[1]=a[1]+r[1],t[2]=a[2]+r[2],t},s.rotateY=function(t,e,r,n){var i=[],a=[];return i[0]=e[0]-r[0],i[1]=e[1]-r[1],i[2]=e[2]-r[2],a[0]=i[2]*Math.sin(n)+i[0]*Math.cos(n),a[1]=i[1],a[2]=i[2]*Math.cos(n)-i[0]*Math.sin(n),t[0]=a[0]+r[0],t[1]=a[1]+r[1],t[2]=a[2]+r[2],t},s.rotateZ=function(t,e,r,n){var i=[],a=[];return i[0]=e[0]-r[0],i[1]=e[1]-r[1],i[2]=e[2]-r[2],a[0]=i[0]*Math.cos(n)-i[1]*Math.sin(n),a[1]=i[0]*Math.sin(n)+i[1]*Math.cos(n),a[2]=i[2],t[0]=a[0]+r[0],t[1]=a[1]+r[1],t[2]=a[2]+r[2],t},s.forEach=function(){var t=s.create();return function(e,r,n,i,a,o){var s,u;for(r||(r=3),n||(n=0),u=i?Math.min(i*r+n,e.length):e.length,s=n;s<u;s+=r)t[0]=e[s],t[1]=e[s+1],t[2]=e[s+2],a(t,t,o),e[s]=t[0],e[s+1]=t[1],e[s+2]=t[2];return e}}(),s.angle=function(t,e){var r=s.fromValues(t[0],t[1],t[2]),n=s.fromValues(e[0],e[1],e[2]);s.normalize(r,r),s.normalize(n,n);var i=s.dot(r,n);return i>1?0:Math.acos(i)},s.str=function(t){return"vec3("+t[0]+", "+t[1]+", "+t[2]+")"},void 0!==t&&(t.vec3=s);var u={};u.create=function(){var t=new r(4);return t[0]=0,t[1]=0,t[2]=0,t[3]=0,t},u.clone=function(t){var e=new r(4);return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e},u.fromValues=function(t,e,n,i){var a=new r(4);return a[0]=t,a[1]=e,a[2]=n,a[3]=i,a},u.copy=function(t,e){return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t},u.set=function(t,e,r,n,i){return t[0]=e,t[1]=r,t[2]=n,t[3]=i,t},u.add=function(t,e,r){return t[0]=e[0]+r[0],t[1]=e[1]+r[1],t[2]=e[2]+r[2],t[3]=e[3]+r[3],t},u.subtract=function(t,e,r){return t[0]=e[0]-r[0],t[1]=e[1]-r[1],t[2]=e[2]-r[2],t[3]=e[3]-r[3],t},u.sub=u.subtract,u.multiply=function(t,e,r){return t[0]=e[0]*r[0],t[1]=e[1]*r[1],t[2]=e[2]*r[2],t[3]=e[3]*r[3],t},u.mul=u.multiply,u.divide=function(t,e,r){return t[0]=e[0]/r[0],t[1]=e[1]/r[1],t[2]=e[2]/r[2],t[3]=e[3]/r[3],t},u.div=u.divide,u.min=function(t,e,r){return t[0]=Math.min(e[0],r[0]),t[1]=Math.min(e[1],r[1]),t[2]=Math.min(e[2],r[2]),t[3]=Math.min(e[3],r[3]),t},u.max=function(t,e,r){return t[0]=Math.max(e[0],r[0]),t[1]=Math.max(e[1],r[1]),t[2]=Math.max(e[2],r[2]),t[3]=Math.max(e[3],r[3]),t},u.scale=function(t,e,r){return t[0]=e[0]*r,t[1]=e[1]*r,t[2]=e[2]*r,t[3]=e[3]*r,t},u.scaleAndAdd=function(t,e,r,n){return t[0]=e[0]+r[0]*n,t[1]=e[1]+r[1]*n,t[2]=e[2]+r[2]*n,t[3]=e[3]+r[3]*n,t},u.distance=function(t,e){var r=e[0]-t[0],n=e[1]-t[1],i=e[2]-t[2],a=e[3]-t[3];return Math.sqrt(r*r+n*n+i*i+a*a)},u.dist=u.distance,u.squaredDistance=function(t,e){var r=e[0]-t[0],n=e[1]-t[1],i=e[2]-t[2],a=e[3]-t[3];return r*r+n*n+i*i+a*a},u.sqrDist=u.squaredDistance,u.length=function(t){var e=t[0],r=t[1],n=t[2],i=t[3];return Math.sqrt(e*e+r*r+n*n+i*i)},u.len=u.length,u.squaredLength=function(t){var e=t[0],r=t[1],n=t[2],i=t[3];return e*e+r*r+n*n+i*i},u.sqrLen=u.squaredLength,u.negate=function(t,e){return t[0]=-e[0],t[1]=-e[1],t[2]=-e[2],t[3]=-e[3],t},u.inverse=function(t,e){return t[0]=1/e[0],t[1]=1/e[1],t[2]=1/e[2],t[3]=1/e[3],t},u.normalize=function(t,e){var r=e[0],n=e[1],i=e[2],a=e[3],o=r*r+n*n+i*i+a*a;return o>0&&(o=1/Math.sqrt(o),t[0]=e[0]*o,t[1]=e[1]*o,t[2]=e[2]*o,t[3]=e[3]*o),t},u.dot=function(t,e){return t[0]*e[0]+t[1]*e[1]+t[2]*e[2]+t[3]*e[3]},u.lerp=function(t,e,r,n){var i=e[0],a=e[1],o=e[2],s=e[3];return t[0]=i+n*(r[0]-i),t[1]=a+n*(r[1]-a),t[2]=o+n*(r[2]-o),t[3]=s+n*(r[3]-s),t},u.random=function(t,e){return e=e||1,t[0]=n(),t[1]=n(),t[2]=n(),t[3]=n(),u.normalize(t,t),u.scale(t,t,e),t},u.transformMat4=function(t,e,r){var n=e[0],i=e[1],a=e[2],o=e[3];return t[0]=r[0]*n+r[4]*i+r[8]*a+r[12]*o,t[1]=r[1]*n+r[5]*i+r[9]*a+r[13]*o,t[2]=r[2]*n+r[6]*i+r[10]*a+r[14]*o,t[3]=r[3]*n+r[7]*i+r[11]*a+r[15]*o,t},u.transformQuat=function(t,e,r){var n=e[0],i=e[1],a=e[2],o=r[0],s=r[1],u=r[2],l=r[3],h=l*n+s*a-u*i,c=l*i+u*n-o*a,f=l*a+o*i-s*n,d=-o*n-s*i-u*a;return t[0]=h*l+d*-o+c*-u-f*-s,t[1]=c*l+d*-s+f*-o-h*-u,t[2]=f*l+d*-u+h*-s-c*-o,t},u.forEach=function(){var t=u.create();return function(e,r,n,i,a,o){var s,u;for(r||(r=4),n||(n=0),u=i?Math.min(i*r+n,e.length):e.length,s=n;s<u;s+=r)t[0]=e[s],t[1]=e[s+1],t[2]=e[s+2],t[3]=e[s+3],a(t,t,o),e[s]=t[0],e[s+1]=t[1],e[s+2]=t[2],e[s+3]=t[3];return e}}(),u.str=function(t){return"vec4("+t[0]+", "+t[1]+", "+t[2]+", "+t[3]+")"},void 0!==t&&(t.vec4=u);var l={};l.create=function(){var t=new r(4);return t[0]=1,t[1]=0,t[2]=0,t[3]=1,t},l.clone=function(t){var e=new r(4);return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e},l.copy=function(t,e){return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t},l.identity=function(t){return t[0]=1,t[1]=0,t[2]=0,t[3]=1,t},l.transpose=function(t,e){if(t===e){var r=e[1];t[1]=e[2],t[2]=r}else t[0]=e[0],t[1]=e[2],t[2]=e[1],t[3]=e[3];return t},l.invert=function(t,e){var r=e[0],n=e[1],i=e[2],a=e[3],o=r*a-i*n;return o?(o=1/o,t[0]=a*o,t[1]=-n*o,t[2]=-i*o,t[3]=r*o,t):null},l.adjoint=function(t,e){var r=e[0];return t[0]=e[3],t[1]=-e[1],t[2]=-e[2],t[3]=r,t},l.determinant=function(t){return t[0]*t[3]-t[2]*t[1]},l.multiply=function(t,e,r){var n=e[0],i=e[1],a=e[2],o=e[3],s=r[0],u=r[1],l=r[2],h=r[3];return t[0]=n*s+a*u,t[1]=i*s+o*u,t[2]=n*l+a*h,t[3]=i*l+o*h,t},l.mul=l.multiply,l.rotate=function(t,e,r){var n=e[0],i=e[1],a=e[2],o=e[3],s=Math.sin(r),u=Math.cos(r);return t[0]=n*u+a*s,t[1]=i*u+o*s,t[2]=n*-s+a*u,t[3]=i*-s+o*u,t},l.scale=function(t,e,r){var n=e[0],i=e[1],a=e[2],o=e[3],s=r[0],u=r[1];return t[0]=n*s,t[1]=i*s,t[2]=a*u,t[3]=o*u,t},l.str=function(t){return"mat2("+t[0]+", "+t[1]+", "+t[2]+", "+t[3]+")"},l.frob=function(t){return Math.sqrt(Math.pow(t[0],2)+Math.pow(t[1],2)+Math.pow(t[2],2)+Math.pow(t[3],2))},l.LDU=function(t,e,r,n){return t[2]=n[2]/n[0],r[0]=n[0],r[1]=n[1],r[3]=n[3]-t[2]*r[1],[t,e,r]},void 0!==t&&(t.mat2=l);var h={};h.create=function(){var t=new r(6);return t[0]=1,t[1]=0,t[2]=0,t[3]=1,t[4]=0,t[5]=0,t},h.clone=function(t){var e=new r(6);return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e},h.copy=function(t,e){return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t},h.identity=function(t){return t[0]=1,t[1]=0,t[2]=0,t[3]=1,t[4]=0,t[5]=0,t},h.invert=function(t,e){var r=e[0],n=e[1],i=e[2],a=e[3],o=e[4],s=e[5],u=r*a-n*i;return u?(u=1/u,t[0]=a*u,t[1]=-n*u,t[2]=-i*u,t[3]=r*u,t[4]=(i*s-a*o)*u,t[5]=(n*o-r*s)*u,t):null},h.determinant=function(t){return t[0]*t[3]-t[1]*t[2]},h.multiply=function(t,e,r){var n=e[0],i=e[1],a=e[2],o=e[3],s=e[4],u=e[5],l=r[0],h=r[1],c=r[2],f=r[3],d=r[4],_=r[5];return t[0]=n*l+a*h,t[1]=i*l+o*h,t[2]=n*c+a*f,t[3]=i*c+o*f,t[4]=n*d+a*_+s,t[5]=i*d+o*_+u,t},h.mul=h.multiply,h.rotate=function(t,e,r){var n=e[0],i=e[1],a=e[2],o=e[3],s=e[4],u=e[5],l=Math.sin(r),h=Math.cos(r);return t[0]=n*h+a*l,t[1]=i*h+o*l,t[2]=n*-l+a*h,t[3]=i*-l+o*h,t[4]=s,t[5]=u,t},h.scale=function(t,e,r){var n=e[0],i=e[1],a=e[2],o=e[3],s=e[4],u=e[5],l=r[0],h=r[1];return t[0]=n*l,t[1]=i*l,t[2]=a*h,t[3]=o*h,t[4]=s,t[5]=u,t},h.translate=function(t,e,r){var n=e[0],i=e[1],a=e[2],o=e[3],s=e[4],u=e[5],l=r[0],h=r[1];return t[0]=n,t[1]=i,t[2]=a,t[3]=o,t[4]=n*l+a*h+s,t[5]=i*l+o*h+u,t},h.str=function(t){return"mat2d("+t[0]+", "+t[1]+", "+t[2]+", "+t[3]+", "+t[4]+", "+t[5]+")"},h.frob=function(t){return Math.sqrt(Math.pow(t[0],2)+Math.pow(t[1],2)+Math.pow(t[2],2)+Math.pow(t[3],2)+Math.pow(t[4],2)+Math.pow(t[5],2)+1)},void 0!==t&&(t.mat2d=h);var c={};c.create=function(){var t=new r(9);return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=1,t[5]=0,t[6]=0,t[7]=0,t[8]=1,t},c.fromMat4=function(t,e){return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[4],t[4]=e[5],t[5]=e[6],t[6]=e[8],t[7]=e[9],t[8]=e[10],t},c.clone=function(t){var e=new r(9);return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e},c.copy=function(t,e){return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[8]=e[8],t},c.identity=function(t){return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=1,t[5]=0,t[6]=0,t[7]=0,t[8]=1,t},c.transpose=function(t,e){if(t===e){var r=e[1],n=e[2],i=e[5];t[1]=e[3],t[2]=e[6],t[3]=r,t[5]=e[7],t[6]=n,t[7]=i}else t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8];return t},c.invert=function(t,e){var r=e[0],n=e[1],i=e[2],a=e[3],o=e[4],s=e[5],u=e[6],l=e[7],h=e[8],c=h*o-s*l,f=-h*a+s*u,d=l*a-o*u,_=r*c+n*f+i*d;return _?(_=1/_,t[0]=c*_,t[1]=(-h*n+i*l)*_,t[2]=(s*n-i*o)*_,t[3]=f*_,t[4]=(h*r-i*u)*_,t[5]=(-s*r+i*a)*_,t[6]=d*_,t[7]=(-l*r+n*u)*_,t[8]=(o*r-n*a)*_,t):null},c.adjoint=function(t,e){var r=e[0],n=e[1],i=e[2],a=e[3],o=e[4],s=e[5],u=e[6],l=e[7],h=e[8];return t[0]=o*h-s*l,t[1]=i*l-n*h,t[2]=n*s-i*o,t[3]=s*u-a*h,t[4]=r*h-i*u,t[5]=i*a-r*s,t[6]=a*l-o*u,t[7]=n*u-r*l,t[8]=r*o-n*a,t},c.determinant=function(t){var e=t[0],r=t[1],n=t[2],i=t[3],a=t[4],o=t[5],s=t[6],u=t[7],l=t[8];return e*(l*a-o*u)+r*(-l*i+o*s)+n*(u*i-a*s)},c.multiply=function(t,e,r){var n=e[0],i=e[1],a=e[2],o=e[3],s=e[4],u=e[5],l=e[6],h=e[7],c=e[8],f=r[0],d=r[1],_=r[2],m=r[3],p=r[4],v=r[5],g=r[6],y=r[7],x=r[8];return t[0]=f*n+d*o+_*l,t[1]=f*i+d*s+_*h,t[2]=f*a+d*u+_*c,t[3]=m*n+p*o+v*l,t[4]=m*i+p*s+v*h,t[5]=m*a+p*u+v*c,t[6]=g*n+y*o+x*l,t[7]=g*i+y*s+x*h,t[8]=g*a+y*u+x*c,t},c.mul=c.multiply,c.translate=function(t,e,r){var n=e[0],i=e[1],a=e[2],o=e[3],s=e[4],u=e[5],l=e[6],h=e[7],c=e[8],f=r[0],d=r[1];return t[0]=n,t[1]=i,t[2]=a,t[3]=o,t[4]=s,t[5]=u,t[6]=f*n+d*o+l,t[7]=f*i+d*s+h,t[8]=f*a+d*u+c,t},c.rotate=function(t,e,r){var n=e[0],i=e[1],a=e[2],o=e[3],s=e[4],u=e[5],l=e[6],h=e[7],c=e[8],f=Math.sin(r),d=Math.cos(r);return t[0]=d*n+f*o,t[1]=d*i+f*s,t[2]=d*a+f*u,t[3]=d*o-f*n,t[4]=d*s-f*i,t[5]=d*u-f*a,t[6]=l,t[7]=h,t[8]=c,t},c.scale=function(t,e,r){var n=r[0],i=r[1];return t[0]=n*e[0],t[1]=n*e[1],t[2]=n*e[2],t[3]=i*e[3],t[4]=i*e[4],t[5]=i*e[5],t[6]=e[6],t[7]=e[7],t[8]=e[8],t},c.fromMat2d=function(t,e){return t[0]=e[0],t[1]=e[1],t[2]=0,t[3]=e[2],t[4]=e[3],t[5]=0,t[6]=e[4],t[7]=e[5],t[8]=1,t},c.fromQuat=function(t,e){var r=e[0],n=e[1],i=e[2],a=e[3],o=r+r,s=n+n,u=i+i,l=r*o,h=n*o,c=n*s,f=i*o,d=i*s,_=i*u,m=a*o,p=a*s,v=a*u;return t[0]=1-c-_,t[3]=h-v,t[6]=f+p,t[1]=h+v,t[4]=1-l-_,t[7]=d-m,t[2]=f-p,t[5]=d+m,t[8]=1-l-c,t},c.normalFromMat4=function(t,e){var r=e[0],n=e[1],i=e[2],a=e[3],o=e[4],s=e[5],u=e[6],l=e[7],h=e[8],c=e[9],f=e[10],d=e[11],_=e[12],m=e[13],p=e[14],v=e[15],g=r*s-n*o,y=r*u-i*o,x=r*l-a*o,T=n*u-i*s,E=n*l-a*s,b=i*l-a*u,S=h*m-c*_,A=h*p-f*_,N=h*v-d*_,M=c*p-f*m,w=c*v-d*m,R=f*v-d*p,C=g*R-y*w+x*M+T*N-E*A+b*S;return C?(C=1/C,t[0]=(s*R-u*w+l*M)*C,t[1]=(u*N-o*R-l*A)*C,t[2]=(o*w-s*N+l*S)*C,t[3]=(i*w-n*R-a*M)*C,t[4]=(r*R-i*N+a*A)*C,t[5]=(n*N-r*w-a*S)*C,t[6]=(m*b-p*E+v*T)*C,t[7]=(p*x-_*b-v*y)*C,t[8]=(_*E-m*x+v*g)*C,t):null},c.str=function(t){return"mat3("+t[0]+", "+t[1]+", "+t[2]+", "+t[3]+", "+t[4]+", "+t[5]+", "+t[6]+", "+t[7]+", "+t[8]+")"},c.frob=function(t){return Math.sqrt(Math.pow(t[0],2)+Math.pow(t[1],2)+Math.pow(t[2],2)+Math.pow(t[3],2)+Math.pow(t[4],2)+Math.pow(t[5],2)+Math.pow(t[6],2)+Math.pow(t[7],2)+Math.pow(t[8],2))},void 0!==t&&(t.mat3=c);var f={};f.create=function(){var t=new r(16);return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=1,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=1,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t},f.clone=function(t){var e=new r(16);return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e[9]=t[9],e[10]=t[10],e[11]=t[11],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15],e},f.copy=function(t,e){return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[8]=e[8],t[9]=e[9],t[10]=e[10],t[11]=e[11],t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15],t},f.identity=function(t){return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=1,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=1,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t},f.transpose=function(t,e){if(t===e){var r=e[1],n=e[2],i=e[3],a=e[6],o=e[7],s=e[11];t[1]=e[4],t[2]=e[8],t[3]=e[12],t[4]=r,t[6]=e[9],t[7]=e[13],t[8]=n,t[9]=a,t[11]=e[14],t[12]=i,t[13]=o,t[14]=s}else t[0]=e[0],t[1]=e[4],t[2]=e[8],t[3]=e[12],t[4]=e[1],t[5]=e[5],t[6]=e[9],t[7]=e[13],t[8]=e[2],t[9]=e[6],t[10]=e[10],t[11]=e[14],t[12]=e[3],t[13]=e[7],t[14]=e[11],t[15]=e[15];return t},f.invert=function(t,e){var r=e[0],n=e[1],i=e[2],a=e[3],o=e[4],s=e[5],u=e[6],l=e[7],h=e[8],c=e[9],f=e[10],d=e[11],_=e[12],m=e[13],p=e[14],v=e[15],g=r*s-n*o,y=r*u-i*o,x=r*l-a*o,T=n*u-i*s,E=n*l-a*s,b=i*l-a*u,S=h*m-c*_,A=h*p-f*_,N=h*v-d*_,M=c*p-f*m,w=c*v-d*m,R=f*v-d*p,C=g*R-y*w+x*M+T*N-E*A+b*S;return C?(C=1/C,t[0]=(s*R-u*w+l*M)*C,t[1]=(i*w-n*R-a*M)*C,t[2]=(m*b-p*E+v*T)*C,t[3]=(f*E-c*b-d*T)*C,t[4]=(u*N-o*R-l*A)*C,t[5]=(r*R-i*N+a*A)*C,t[6]=(p*x-_*b-v*y)*C,t[7]=(h*b-f*x+d*y)*C,t[8]=(o*w-s*N+l*S)*C,t[9]=(n*N-r*w-a*S)*C,t[10]=(_*E-m*x+v*g)*C,t[11]=(c*x-h*E-d*g)*C,t[12]=(s*A-o*M-u*S)*C,t[13]=(r*M-n*A+i*S)*C,t[14]=(m*y-_*T-p*g)*C,t[15]=(h*T-c*y+f*g)*C,t):null},f.adjoint=function(t,e){var r=e[0],n=e[1],i=e[2],a=e[3],o=e[4],s=e[5],u=e[6],l=e[7],h=e[8],c=e[9],f=e[10],d=e[11],_=e[12],m=e[13],p=e[14],v=e[15];return t[0]=s*(f*v-d*p)-c*(u*v-l*p)+m*(u*d-l*f),t[1]=-(n*(f*v-d*p)-c*(i*v-a*p)+m*(i*d-a*f)),t[2]=n*(u*v-l*p)-s*(i*v-a*p)+m*(i*l-a*u),t[3]=-(n*(u*d-l*f)-s*(i*d-a*f)+c*(i*l-a*u)),t[4]=-(o*(f*v-d*p)-h*(u*v-l*p)+_*(u*d-l*f)),t[5]=r*(f*v-d*p)-h*(i*v-a*p)+_*(i*d-a*f),t[6]=-(r*(u*v-l*p)-o*(i*v-a*p)+_*(i*l-a*u)),t[7]=r*(u*d-l*f)-o*(i*d-a*f)+h*(i*l-a*u),t[8]=o*(c*v-d*m)-h*(s*v-l*m)+_*(s*d-l*c),t[9]=-(r*(c*v-d*m)-h*(n*v-a*m)+_*(n*d-a*c)),t[10]=r*(s*v-l*m)-o*(n*v-a*m)+_*(n*l-a*s),t[11]=-(r*(s*d-l*c)-o*(n*d-a*c)+h*(n*l-a*s)),t[12]=-(o*(c*p-f*m)-h*(s*p-u*m)+_*(s*f-u*c)),t[13]=r*(c*p-f*m)-h*(n*p-i*m)+_*(n*f-i*c),t[14]=-(r*(s*p-u*m)-o*(n*p-i*m)+_*(n*u-i*s)),t[15]=r*(s*f-u*c)-o*(n*f-i*c)+h*(n*u-i*s),t},f.determinant=function(t){var e=t[0],r=t[1],n=t[2],i=t[3],a=t[4],o=t[5],s=t[6],u=t[7],l=t[8],h=t[9],c=t[10],f=t[11],d=t[12],_=t[13],m=t[14],p=t[15];return(e*o-r*a)*(c*p-f*m)-(e*s-n*a)*(h*p-f*_)+(e*u-i*a)*(h*m-c*_)+(r*s-n*o)*(l*p-f*d)-(r*u-i*o)*(l*m-c*d)+(n*u-i*s)*(l*_-h*d)},f.multiply=function(t,e,r){var n=e[0],i=e[1],a=e[2],o=e[3],s=e[4],u=e[5],l=e[6],h=e[7],c=e[8],f=e[9],d=e[10],_=e[11],m=e[12],p=e[13],v=e[14],g=e[15],y=r[0],x=r[1],T=r[2],E=r[3];return t[0]=y*n+x*s+T*c+E*m,t[1]=y*i+x*u+T*f+E*p,t[2]=y*a+x*l+T*d+E*v,t[3]=y*o+x*h+T*_+E*g,y=r[4],x=r[5],T=r[6],E=r[7],t[4]=y*n+x*s+T*c+E*m,t[5]=y*i+x*u+T*f+E*p,t[6]=y*a+x*l+T*d+E*v,t[7]=y*o+x*h+T*_+E*g,y=r[8],x=r[9],T=r[10],E=r[11],t[8]=y*n+x*s+T*c+E*m,t[9]=y*i+x*u+T*f+E*p,t[10]=y*a+x*l+T*d+E*v,t[11]=y*o+x*h+T*_+E*g,y=r[12],x=r[13],T=r[14],E=r[15],t[12]=y*n+x*s+T*c+E*m,t[13]=y*i+x*u+T*f+E*p,t[14]=y*a+x*l+T*d+E*v,t[15]=y*o+x*h+T*_+E*g,t},f.multiplyAffine=function(t,e,r){var n=e[0],i=e[1],a=e[2],o=e[4],s=e[5],u=e[6],l=e[8],h=e[9],c=e[10],f=e[12],d=e[13],_=e[14],m=r[0],p=r[1],v=r[2];return t[0]=m*n+p*o+v*l,t[1]=m*i+p*s+v*h,t[2]=m*a+p*u+v*c,m=r[4],p=r[5],v=r[6],t[4]=m*n+p*o+v*l,t[5]=m*i+p*s+v*h,t[6]=m*a+p*u+v*c,m=r[8],p=r[9],v=r[10],t[8]=m*n+p*o+v*l,t[9]=m*i+p*s+v*h,t[10]=m*a+p*u+v*c,m=r[12],p=r[13],v=r[14],t[12]=m*n+p*o+v*l+f,t[13]=m*i+p*s+v*h+d,t[14]=m*a+p*u+v*c+_,t},f.mul=f.multiply,f.mulAffine=f.multiplyAffine,f.translate=function(t,e,r){var n,i,a,o,s,u,l,h,c,f,d,_,m=r[0],p=r[1],v=r[2];return e===t?(t[12]=e[0]*m+e[4]*p+e[8]*v+e[12],t[13]=e[1]*m+e[5]*p+e[9]*v+e[13],t[14]=e[2]*m+e[6]*p+e[10]*v+e[14],t[15]=e[3]*m+e[7]*p+e[11]*v+e[15]):(n=e[0],i=e[1],a=e[2],o=e[3],s=e[4],u=e[5],l=e[6],h=e[7],c=e[8],f=e[9],d=e[10],_=e[11],t[0]=n,t[1]=i,t[2]=a,t[3]=o,t[4]=s,t[5]=u,t[6]=l,t[7]=h,t[8]=c,t[9]=f,t[10]=d,t[11]=_,t[12]=n*m+s*p+c*v+e[12],t[13]=i*m+u*p+f*v+e[13],t[14]=a*m+l*p+d*v+e[14],t[15]=o*m+h*p+_*v+e[15]),t},f.scale=function(t,e,r){var n=r[0],i=r[1],a=r[2];return t[0]=e[0]*n,t[1]=e[1]*n,t[2]=e[2]*n,t[3]=e[3]*n,t[4]=e[4]*i,t[5]=e[5]*i,t[6]=e[6]*i,t[7]=e[7]*i,t[8]=e[8]*a,t[9]=e[9]*a,t[10]=e[10]*a,t[11]=e[11]*a,t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15],t},f.rotate=function(t,r,n,i){var a,o,s,u,l,h,c,f,d,_,m,p,v,g,y,x,T,E,b,S,A,N,M,w,R=i[0],C=i[1],L=i[2],P=Math.sqrt(R*R+C*C+L*L);return Math.abs(P)<e?null:(P=1/P,R*=P,C*=P,L*=P,a=Math.sin(n),o=Math.cos(n),s=1-o,u=r[0],l=r[1],h=r[2],c=r[3],f=r[4],d=r[5],_=r[6],m=r[7],p=r[8],v=r[9],g=r[10],y=r[11],x=R*R*s+o,T=C*R*s+L*a,E=L*R*s-C*a,b=R*C*s-L*a,S=C*C*s+o,A=L*C*s+R*a,N=R*L*s+C*a,M=C*L*s-R*a,w=L*L*s+o,t[0]=u*x+f*T+p*E,t[1]=l*x+d*T+v*E,t[2]=h*x+_*T+g*E,t[3]=c*x+m*T+y*E,t[4]=u*b+f*S+p*A,t[5]=l*b+d*S+v*A,t[6]=h*b+_*S+g*A,t[7]=c*b+m*S+y*A,t[8]=u*N+f*M+p*w,t[9]=l*N+d*M+v*w,t[10]=h*N+_*M+g*w,t[11]=c*N+m*M+y*w,r!==t&&(t[12]=r[12],t[13]=r[13],t[14]=r[14],t[15]=r[15]),t)},f.rotateX=function(t,e,r){var n=Math.sin(r),i=Math.cos(r),a=e[4],o=e[5],s=e[6],u=e[7],l=e[8],h=e[9],c=e[10],f=e[11];return e!==t&&(t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15]),t[4]=a*i+l*n,t[5]=o*i+h*n,t[6]=s*i+c*n,t[7]=u*i+f*n,t[8]=l*i-a*n,t[9]=h*i-o*n,t[10]=c*i-s*n,t[11]=f*i-u*n,t},f.rotateY=function(t,e,r){var n=Math.sin(r),i=Math.cos(r),a=e[0],o=e[1],s=e[2],u=e[3],l=e[8],h=e[9],c=e[10],f=e[11];return e!==t&&(t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15]),t[0]=a*i-l*n,t[1]=o*i-h*n,t[2]=s*i-c*n,t[3]=u*i-f*n,t[8]=a*n+l*i,t[9]=o*n+h*i,t[10]=s*n+c*i,t[11]=u*n+f*i,t},f.rotateZ=function(t,e,r){var n=Math.sin(r),i=Math.cos(r),a=e[0],o=e[1],s=e[2],u=e[3],l=e[4],h=e[5],c=e[6],f=e[7];return e!==t&&(t[8]=e[8],t[9]=e[9],t[10]=e[10],t[11]=e[11],t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15]),t[0]=a*i+l*n,t[1]=o*i+h*n,t[2]=s*i+c*n,t[3]=u*i+f*n,t[4]=l*i-a*n,t[5]=h*i-o*n,t[6]=c*i-s*n,t[7]=f*i-u*n,t},f.fromRotationTranslation=function(t,e,r){var n=e[0],i=e[1],a=e[2],o=e[3],s=n+n,u=i+i,l=a+a,h=n*s,c=n*u,f=n*l,d=i*u,_=i*l,m=a*l,p=o*s,v=o*u,g=o*l;return t[0]=1-(d+m),t[1]=c+g,t[2]=f-v,t[3]=0,t[4]=c-g,t[5]=1-(h+m),t[6]=_+p,t[7]=0,t[8]=f+v,t[9]=_-p,t[10]=1-(h+d),t[11]=0,t[12]=r[0],t[13]=r[1],t[14]=r[2],t[15]=1,t},f.fromQuat=function(t,e){var r=e[0],n=e[1],i=e[2],a=e[3],o=r+r,s=n+n,u=i+i,l=r*o,h=n*o,c=n*s,f=i*o,d=i*s,_=i*u,m=a*o,p=a*s,v=a*u;return t[0]=1-c-_,t[1]=h+v,t[2]=f-p,t[3]=0,t[4]=h-v,t[5]=1-l-_,t[6]=d+m,t[7]=0,t[8]=f+p,t[9]=d-m,t[10]=1-l-c,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t},f.frustum=function(t,e,r,n,i,a,o){var s=1/(r-e),u=1/(i-n),l=1/(a-o);return t[0]=2*a*s,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=2*a*u,t[6]=0,t[7]=0,t[8]=(r+e)*s,t[9]=(i+n)*u,t[10]=(o+a)*l,t[11]=-1,t[12]=0,t[13]=0,t[14]=o*a*2*l,t[15]=0,t},f.perspective=function(t,e,r,n,i){var a=1/Math.tan(e/2),o=1/(n-i);return t[0]=a/r,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=a,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=(i+n)*o,t[11]=-1,t[12]=0,t[13]=0,t[14]=2*i*n*o,t[15]=0,t},f.ortho=function(t,e,r,n,i,a,o){var s=1/(e-r),u=1/(n-i),l=1/(a-o);return t[0]=-2*s,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=-2*u,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=2*l,t[11]=0,t[12]=(e+r)*s,t[13]=(i+n)*u,t[14]=(o+a)*l,t[15]=1,t},f.lookAt=function(t,r,n,i){var a,o,s,u,l,h,c,d,_,m,p=r[0],v=r[1],g=r[2],y=i[0],x=i[1],T=i[2],E=n[0],b=n[1],S=n[2];return Math.abs(p-E)<e&&Math.abs(v-b)<e&&Math.abs(g-S)<e?f.identity(t):(c=p-E,d=v-b,_=g-S,m=1/Math.sqrt(c*c+d*d+_*_),c*=m,d*=m,_*=m,a=x*_-T*d,o=T*c-y*_,s=y*d-x*c,m=Math.sqrt(a*a+o*o+s*s),m?(m=1/m,a*=m,o*=m,s*=m):(a=0,o=0,s=0),u=d*s-_*o,l=_*a-c*s,h=c*o-d*a,m=Math.sqrt(u*u+l*l+h*h),m?(m=1/m,u*=m,l*=m,h*=m):(u=0,l=0,h=0),t[0]=a,t[1]=u,t[2]=c,t[3]=0,t[4]=o,t[5]=l,t[6]=d,t[7]=0,t[8]=s,t[9]=h,t[10]=_,t[11]=0,t[12]=-(a*p+o*v+s*g),t[13]=-(u*p+l*v+h*g),t[14]=-(c*p+d*v+_*g),t[15]=1,t)},f.str=function(t){return"mat4("+t[0]+", "+t[1]+", "+t[2]+", "+t[3]+", "+t[4]+", "+t[5]+", "+t[6]+", "+t[7]+", "+t[8]+", "+t[9]+", "+t[10]+", "+t[11]+", "+t[12]+", "+t[13]+", "+t[14]+", "+t[15]+")"},f.frob=function(t){return Math.sqrt(Math.pow(t[0],2)+Math.pow(t[1],2)+Math.pow(t[2],2)+Math.pow(t[3],2)+Math.pow(t[4],2)+Math.pow(t[5],2)+Math.pow(t[6],2)+Math.pow(t[7],2)+Math.pow(t[8],2)+Math.pow(t[9],2)+Math.pow(t[10],2)+Math.pow(t[11],2)+Math.pow(t[12],2)+Math.pow(t[13],2)+Math.pow(t[14],2)+Math.pow(t[15],2))},void 0!==t&&(t.mat4=f);var d={};d.create=function(){var t=new r(4);return t[0]=0,t[1]=0,t[2]=0,t[3]=1,t},d.rotationTo=function(){var t=s.create(),e=s.fromValues(1,0,0),r=s.fromValues(0,1,0);return function(n,i,a){var o=s.dot(i,a);return o<-.999999?(s.cross(t,e,i),s.length(t)<1e-6&&s.cross(t,r,i),s.normalize(t,t),d.setAxisAngle(n,t,Math.PI),n):o>.999999?(n[0]=0,n[1]=0,n[2]=0,n[3]=1,n):(s.cross(t,i,a),n[0]=t[0],n[1]=t[1],n[2]=t[2],n[3]=1+o,d.normalize(n,n))}}(),d.setAxes=function(){var t=c.create();return function(e,r,n,i){return t[0]=n[0],t[3]=n[1],t[6]=n[2],t[1]=i[0],t[4]=i[1],t[7]=i[2],t[2]=-r[0],t[5]=-r[1],t[8]=-r[2],d.normalize(e,d.fromMat3(e,t))}}(),d.clone=u.clone,d.fromValues=u.fromValues,d.copy=u.copy,d.set=u.set,d.identity=function(t){return t[0]=0,t[1]=0,t[2]=0,t[3]=1,t},d.setAxisAngle=function(t,e,r){r*=.5;var n=Math.sin(r);return t[0]=n*e[0],t[1]=n*e[1],t[2]=n*e[2],t[3]=Math.cos(r),t},d.add=u.add,d.multiply=function(t,e,r){var n=e[0],i=e[1],a=e[2],o=e[3],s=r[0],u=r[1],l=r[2],h=r[3];return t[0]=n*h+o*s+i*l-a*u,t[1]=i*h+o*u+a*s-n*l,t[2]=a*h+o*l+n*u-i*s,t[3]=o*h-n*s-i*u-a*l,t},d.mul=d.multiply,d.scale=u.scale,d.rotateX=function(t,e,r){r*=.5;var n=e[0],i=e[1],a=e[2],o=e[3],s=Math.sin(r),u=Math.cos(r);return t[0]=n*u+o*s,t[1]=i*u+a*s,t[2]=a*u-i*s,t[3]=o*u-n*s,t},d.rotateY=function(t,e,r){r*=.5;var n=e[0],i=e[1],a=e[2],o=e[3],s=Math.sin(r),u=Math.cos(r);return t[0]=n*u-a*s,t[1]=i*u+o*s,t[2]=a*u+n*s,t[3]=o*u-i*s,t},d.rotateZ=function(t,e,r){r*=.5;var n=e[0],i=e[1],a=e[2],o=e[3],s=Math.sin(r),u=Math.cos(r);return t[0]=n*u+i*s,t[1]=i*u-n*s,t[2]=a*u+o*s,t[3]=o*u-a*s,t},d.calculateW=function(t,e){var r=e[0],n=e[1],i=e[2];return t[0]=r,t[1]=n,t[2]=i,t[3]=Math.sqrt(Math.abs(1-r*r-n*n-i*i)),t},d.dot=u.dot,d.lerp=u.lerp,d.slerp=function(t,e,r,n){var i,a,o,s,u,l=e[0],h=e[1],c=e[2],f=e[3],d=r[0],_=r[1],m=r[2],p=r[3];return a=l*d+h*_+c*m+f*p,a<0&&(a=-a,d=-d,_=-_,m=-m,p=-p),1-a>1e-6?(i=Math.acos(a),o=Math.sin(i),s=Math.sin((1-n)*i)/o,u=Math.sin(n*i)/o):(s=1-n,u=n),t[0]=s*l+u*d,t[1]=s*h+u*_,t[2]=s*c+u*m,t[3]=s*f+u*p,t},d.invert=function(t,e){var r=e[0],n=e[1],i=e[2],a=e[3],o=r*r+n*n+i*i+a*a,s=o?1/o:0;return t[0]=-r*s,t[1]=-n*s,t[2]=-i*s,t[3]=a*s,t},d.conjugate=function(t,e){return t[0]=-e[0],t[1]=-e[1],t[2]=-e[2],t[3]=e[3],t},d.length=u.length,d.len=d.length,d.squaredLength=u.squaredLength,d.sqrLen=d.squaredLength,d.normalize=u.normalize,d.fromMat3=function(t,e){var r,n=e[0]+e[4]+e[8];if(n>0)r=Math.sqrt(n+1),t[3]=.5*r,r=.5/r,t[0]=(e[5]-e[7])*r,t[1]=(e[6]-e[2])*r,t[2]=(e[1]-e[3])*r;else{var i=0;e[4]>e[0]&&(i=1),e[8]>e[3*i+i]&&(i=2);var a=(i+1)%3,o=(i+2)%3;r=Math.sqrt(e[3*i+i]-e[3*a+a]-e[3*o+o]+1),t[i]=.5*r,r=.5/r,t[3]=(e[3*a+o]-e[3*o+a])*r,t[a]=(e[3*a+i]+e[3*i+a])*r,t[o]=(e[3*o+i]+e[3*i+o])*r}return t},d.str=function(t){return"quat("+t[0]+", "+t[1]+", "+t[2]+", "+t[3]+")"},void 0!==t&&(t.quat=d)}(r.exports)}()})),Ht=Bt.vec2,Gt=function(t,e){t=t||0,e=e||0,this._array=Ht.fromValues(t,e),this._dirty=!0};if(Gt.prototype={constructor:Gt,add:function(t){return Ht.add(this._array,this._array,t._array),this._dirty=!0,this},set:function(t,e){return this._array[0]=t,this._array[1]=e,this._dirty=!0,this},setArray:function(t){return this._array[0]=t[0],this._array[1]=t[1],this._dirty=!0,this},clone:function(){return new Gt(this.x,this.y)},copy:function(t){return Ht.copy(this._array,t._array),this._dirty=!0,this},cross:function(t,e){return Ht.cross(t._array,this._array,e._array),t._dirty=!0,this},dist:function(t){return Ht.dist(this._array,t._array)},distance:function(t){return Ht.distance(this._array,t._array)},div:function(t){return Ht.div(this._array,this._array,t._array),this._dirty=!0,this},divide:function(t){return Ht.divide(this._array,this._array,t._array),this._dirty=!0,this},dot:function(t){return Ht.dot(this._array,t._array)},len:function(){return Ht.len(this._array)},length:function(){return Ht.length(this._array)},lerp:function(t,e,r){return Ht.lerp(this._array,t._array,e._array,r),this._dirty=!0,this},min:function(t){return Ht.min(this._array,this._array,t._array),this._dirty=!0,this},max:function(t){return Ht.max(this._array,this._array,t._array),this._dirty=!0,this},mul:function(t){return Ht.mul(this._array,this._array,t._array),this._dirty=!0,this},multiply:function(t){return Ht.multiply(this._array,this._array,t._array),this._dirty=!0,this},negate:function(){return Ht.negate(this._array,this._array),this._dirty=!0,this},normalize:function(){return Ht.normalize(this._array,this._array),this._dirty=!0,this},random:function(t){return Ht.random(this._array,t),this._dirty=!0,this},scale:function(t){return Ht.scale(this._array,this._array,t),this._dirty=!0,this},scaleAndAdd:function(t,e){return Ht.scaleAndAdd(this._array,this._array,t._array,e),this._dirty=!0,this},sqrDist:function(t){return Ht.sqrDist(this._array,t._array)},squaredDistance:function(t){return Ht.squaredDistance(this._array,t._array)},sqrLen:function(){return Ht.sqrLen(this._array)},squaredLength:function(){return Ht.squaredLength(this._array)},sub:function(t){return Ht.sub(this._array,this._array,t._array),this._dirty=!0,this},subtract:function(t){return Ht.subtract(this._array,this._array,t._array),this._dirty=!0,this},transformMat2:function(t){return Ht.transformMat2(this._array,this._array,t._array),this._dirty=!0,this},transformMat2d:function(t){return Ht.transformMat2d(this._array,this._array,t._array),this._dirty=!0,this},transformMat3:function(t){return Ht.transformMat3(this._array,this._array,t._array),this._dirty=!0,this},transformMat4:function(t){return Ht.transformMat4(this._array,this._array,t._array),this._dirty=!0,this},toString:function(){return"["+Array.prototype.join.call(this._array,",")+"]"},toArray:function(){return Array.prototype.slice.call(this._array)}},Object.defineProperty){var Wt=Gt.prototype;Object.defineProperty(Wt,"x",{get:function(){return this._array[0]},set:function(t){this._array[0]=t,this._dirty=!0}}),Object.defineProperty(Wt,"y",{get:function(){return this._array[1]},set:function(t){this._array[1]=t,this._dirty=!0}})}Gt.add=function(t,e,r){return Ht.add(t._array,e._array,r._array),t._dirty=!0,t},Gt.set=function(t,e,r){return Ht.set(t._array,e,r),t._dirty=!0,t},Gt.copy=function(t,e){return Ht.copy(t._array,e._array),t._dirty=!0,t},Gt.cross=function(t,e,r){return Ht.cross(t._array,e._array,r._array),t._dirty=!0,t},Gt.dist=function(t,e){return Ht.distance(t._array,e._array)},Gt.distance=Gt.dist,Gt.div=function(t,e,r){return Ht.divide(t._array,e._array,r._array),t._dirty=!0,t},Gt.divide=Gt.div,Gt.dot=function(t,e){return Ht.dot(t._array,e._array)},Gt.len=function(t){return Ht.length(t._array)},Gt.lerp=function(t,e,r,n){return Ht.lerp(t._array,e._array,r._array,n),t._dirty=!0,t},Gt.min=function(t,e,r){return Ht.min(t._array,e._array,r._array),t._dirty=!0,t},Gt.max=function(t,e,r){return Ht.max(t._array,e._array,r._array),t._dirty=!0,t},Gt.mul=function(t,e,r){return Ht.multiply(t._array,e._array,r._array),t._dirty=!0,t},Gt.multiply=Gt.mul,Gt.negate=function(t,e){return Ht.negate(t._array,e._array),t._dirty=!0,t},Gt.normalize=function(t,e){return Ht.normalize(t._array,e._array),t._dirty=!0,t},Gt.random=function(t,e){return Ht.random(t._array,e),t._dirty=!0,t},Gt.scale=function(t,e,r){return Ht.scale(t._array,e._array,r),t._dirty=!0,t},Gt.scaleAndAdd=function(t,e,r,n){return Ht.scaleAndAdd(t._array,e._array,r._array,n),t._dirty=!0,t},Gt.sqrDist=function(t,e){return Ht.sqrDist(t._array,e._array)},Gt.squaredDistance=Gt.sqrDist,Gt.sqrLen=function(t){return Ht.sqrLen(t._array)},Gt.squaredLength=Gt.sqrLen,Gt.sub=function(t,e,r){return Ht.subtract(t._array,e._array,r._array),t._dirty=!0,t},Gt.subtract=Gt.sub,Gt.transformMat2=function(t,e,r){return Ht.transformMat2(t._array,e._array,r._array),t._dirty=!0,t},Gt.transformMat2d=function(t,e,r){return Ht.transformMat2d(t._array,e._array,r._array),t._dirty=!0,t},Gt.transformMat3=function(t,e,r){return Ht.transformMat3(t._array,e._array,r._array),t._dirty=!0,t},Gt.transformMat4=function(t,e,r){return Ht.transformMat4(t._array,e._array,r._array),t._dirty=!0,t};var Vt=function(t){t=t||{},Lt.call(this,t),this.output=t.output||null,this.inputs=t.inputs||[],this.position=new Gt,this._cacheTriangle=null,this._triangles=[],this._updateTriangles()};Vt.prototype=new Lt,Vt.prototype.constructor=Vt,Vt.prototype.addInput=function(t,e,r){var n={position:t,clip:e,offset:r||0};return this.inputs.push(n),this.life=Math.max(e.life,this.life),this._updateTriangles(),n},Vt.prototype._updateTriangles=function(){var t=this.inputs.map(function(t){return t.position});this._triangles=Ft.triangulate(t,"_array")},Vt.prototype.step=function(t,e,r){var n=Lt.prototype.step.call(this,t);return"finish"!==n&&this.setTime(this.getElapsedTime()),r||"paused"===n||this.fire("frame"),n},Vt.prototype.setTime=function(t){var e=this._findTriangle(this.position);if(e){var r=e[1],n=e[2],i=e[0],a=this.inputs[i.indices[0]],o=this.inputs[i.indices[1]],s=this.inputs[i.indices[2]],u=a.clip,l=o.clip,h=s.clip;u.setTime((t+a.offset)%u.life),l.setTime((t+o.offset)%l.life),h.setTime((t+s.offset)%h.life);var c=u.output instanceof Lt?u.output:u,f=l.output instanceof Lt?l.output:l,d=h.output instanceof Lt?h.output:h;this.output.blend2D(c,f,d,r,n)}},Vt.prototype.clone=function(t){var e=Lt.prototype.clone.call(this);e.output=this.output.clone();for(var r=0;r<this.inputs.length;r++){var n=t?this.inputs[r].clip.clone(!0):this.inputs[r].clip;e.addInput(this.inputs[r].position,n,this.inputs[r].offset)}return e},Vt.prototype._findTriangle=function(t){if(this._cacheTriangle){var e=Ft.contains(this._cacheTriangle.vertices,t._array);if(e)return[this._cacheTriangle,e[0],e[1]]}for(var r=0;r<this._triangles.length;r++){var n=this._triangles[r],e=Ft.contains(n.vertices,this.position._array);if(e)return this._cacheTriangle=n,[n,e[0],e[1]]}};var qt=Bt.quat,zt=Bt.vec3,Xt=function(t){this.name=t.name||"",this.keyFrames=[],t.keyFrames&&this.addKeyFrames(t.keyFrames),this.position=zt.create(),this.rotation=qt.create(),this.scale=zt.fromValues(1,1,1),this._cacheKey=0,this._cacheTime=0};Xt.prototype=Object.create(Lt.prototype),
Xt.prototype.constructor=Xt,Xt.prototype.step=function(t,e,r){var n=Lt.prototype.step.call(this,t,e,!0);return"finish"!==n&&this.setTime(this.getElapsedTime()),r||"paused"===n||this.fire("frame"),n},Xt.prototype.setTime=function(t){this._interpolateField(t,"position"),this._interpolateField(t,"rotation"),this._interpolateField(t,"scale")},Xt.prototype.getMaxTime=function(){var t=this.keyFrames[this.keyFrames.length-1];return t?t.time:0},Xt.prototype.addKeyFrame=function(t){for(var e=0;e<this.keyFrames.length-1;e++){var r=this.keyFrames[e],n=this.keyFrames[e+1];if(r.time<=t.time&&n.time>=t.time)return this.keyFrames.splice(e,0,t),e}this.life=t.time,this.keyFrames.push(t)},Xt.prototype.addKeyFrames=function(t){for(var e=0;e<t.length;e++)this.keyFrames.push(t[e]);this.keyFrames.sort(T),this.life=this.keyFrames[this.keyFrames.length-1].time},Xt.prototype._interpolateField=function(t,e){var r,n,i=this.keyFrames,a=i.length;if(i.length&&!(t<i[0].time||t>i[i.length-1].time)){if(t<this._cacheTime){for(var o=this._cacheKey>=a-1?a-1:this._cacheKey+1,s=o;s>=0;s--)if(i[s].time<=t&&i[s][e])r=i[s],this._cacheKey=s,this._cacheTime=t;else if(i[s][e]){n=i[s];break}}else for(var s=this._cacheKey;s<a;s++)if(i[s].time<=t&&i[s][e])r=i[s],this._cacheKey=s,this._cacheTime=t;else if(i[s][e]){n=i[s];break}if(r&&n){var u=(t-r.time)/(n.time-r.time);u=Math.max(Math.min(u,1),0),"rotation"===e?qt.slerp(this[e],r[e],n[e],u):zt.lerp(this[e],r[e],n[e],u)}else this._cacheKey=0,this._cacheTime=0}},Xt.prototype.blend1D=function(t,e,r){zt.lerp(this.position,t.position,e.position,r),zt.lerp(this.scale,t.scale,e.scale,r),qt.slerp(this.rotation,t.rotation,e.rotation,r)},Xt.prototype.blend2D=function(){var t=qt.create(),e=qt.create();return function(r,n,i,a,o){var s=1-a-o;this.position[0]=r.position[0]*s+n.position[0]*a+i.position[0]*o,this.position[1]=r.position[1]*s+n.position[1]*a+i.position[1]*o,this.position[2]=r.position[2]*s+n.position[2]*a+i.position[2]*o,this.scale[0]=r.scale[0]*s+n.scale[0]*a+i.scale[0]*o,this.scale[1]=r.scale[1]*s+n.scale[1]*a+i.scale[1]*o,this.scale[2]=r.scale[2]*s+n.scale[2]*a+i.scale[2]*o;var u=a+o;0===u?qt.copy(this.rotation,r.rotation):(qt.slerp(t,r.rotation,n.rotation,u),qt.slerp(e,r.rotation,c3.rotation,u),qt.slerp(this.rotation,t,e,o/u))}}(),Xt.prototype.additiveBlend=function(t,e){zt.add(this.position,t.position,e.position),zt.add(this.scale,t.scale,e.scale),qt.multiply(this.rotation,e.rotation,t.rotation)},Xt.prototype.subtractiveBlend=function(t,e){zt.sub(this.position,t.position,e.position),zt.sub(this.scale,t.scale,e.scale),qt.invert(this.rotation,e.rotation),qt.multiply(this.rotation,this.rotation,t.rotation)},Xt.prototype.getSubClip=function(t,e){console.warn("TODO")},Xt.prototype.clone=function(){var t=Xt.prototype.clone.call(this);return t.keyFrames=this.keyFrames,zt.copy(t.position,this.position),qt.copy(t.rotation,this.rotation),zt.copy(t.scale,this.scale),t};var jt=Bt.quat,Yt=Bt.vec3,Kt=function(t){t=t||{},this.name=t.name||"",this.target=t.target||null,this.position=Yt.create(),this.rotation=jt.create(),this.scale=Yt.fromValues(1,1,1),this.channels={time:null,position:null,rotation:null,scale:null},this._cacheKey=0,this._cacheTime=0};Kt.prototype.setTime=function(t){if(this.channels.time){var e=this.channels,r=e.time.length,n=-1;if(1===r)return e.rotation&&jt.copy(this.rotation,e.rotation),e.position&&Yt.copy(this.position,e.position),void(e.scale&&Yt.copy(this.scale,e.scale));if(t<=e.time[0])t=e.time[0],n=0;else if(t>=e.time[r-1])t=e.time[r-1],n=r-2;else if(t<this._cacheTime){for(var i=Math.min(r-1,this._cacheKey+1),a=i;a>=0;a--)if(e.time[a-1]<=t&&e.time[a]>t){n=a-1;break}}else for(var a=this._cacheKey;a<r-1;a++)if(e.time[a]<=t&&e.time[a+1]>t){n=a;break}if(n>-1){this._cacheKey=n,this._cacheTime=t;var o=n,s=n+1,u=e.time[o],l=e.time[s],h=l-u,c=0===h?0:(t-u)/h;e.rotation&&b(this.rotation,e.rotation,e.rotation,c,4*o,4*s),e.position&&E(this.position,e.position,e.position,c,3*o,3*s),e.scale&&E(this.scale,e.scale,e.scale,c,3*o,3*s)}n==r-2&&(this._cacheKey=0,this._cacheTime=0),this.updateTarget()}},Kt.prototype.updateTarget=function(){var t=this.channels;this.target&&(t.position&&this.target.position.setArray(this.position),t.rotation&&this.target.rotation.setArray(this.rotation),t.scale&&this.target.scale.setArray(this.scale))},Kt.prototype.getMaxTime=function(){return this.channels.time[this.channels.time.length-1]},Kt.prototype.getSubTrack=function(t,e){var r=new Kt({name:this.name}),n=this.channels.time[0];t=Math.min(Math.max(t,n),this.life),e=Math.min(Math.max(e,n),this.life);var i=this._findRange(t),a=this._findRange(e),o=a[0]-i[0]+1;0===i[1]&&0===a[1]&&(o-=1),this.channels.rotation&&(r.channels.rotation=new Float32Array(4*o)),this.channels.position&&(r.channels.position=new Float32Array(3*o)),this.channels.scale&&(r.channels.scale=new Float32Array(3*o)),this.channels.time&&(r.channels.time=new Float32Array(o)),this.setTime(t);for(var s=0;s<3;s++)r.channels.rotation[s]=this.rotation[s],r.channels.position[s]=this.position[s],r.channels.scale[s]=this.scale[s];r.channels.time[0]=0,r.channels.rotation[3]=this.rotation[3];for(var s=1;s<o-1;s++){for(var u,l=0;l<3;l++)u=i[0]+s,r.channels.rotation[4*s+l]=this.channels.rotation[4*u+l],r.channels.position[3*s+l]=this.channels.position[3*u+l],r.channels.scale[3*s+l]=this.channels.scale[3*u+l];r.channels.time[s]=this.channels.time[u]-t,r.channels.rotation[4*s+3]=this.channels.rotation[4*u+3]}this.setTime(e);for(var s=0;s<3;s++)r.channels.rotation[4*(o-1)+s]=this.rotation[s],r.channels.position[3*(o-1)+s]=this.position[s],r.channels.scale[3*(o-1)+s]=this.scale[s];return r.channels.time[o-1]=e-t,r.channels.rotation[4*(o-1)+3]=this.rotation[3],r.life=e-t,r},Kt.prototype._findRange=function(t){for(var e=this.channels,r=e.time.length,n=-1,i=0;i<r-1;i++)e.time[i]<=t&&e.time[i+1]>t&&(n=i);var a=0;if(n>=0)var o=e.time[n],s=e.time[n+1],a=(t-o)/(s-o);return[n,a]},Kt.prototype.blend1D=Xt.prototype.blend1D,Kt.prototype.blend2D=Xt.prototype.blend2D,Kt.prototype.additiveBlend=Xt.prototype.additiveBlend,Kt.prototype.subtractiveBlend=Xt.prototype.subtractiveBlend,Kt.prototype.clone=function(){var t=Kt.prototype.clone.call(this);return t.channels={time:this.channels.time||null,position:this.channels.position||null,rotation:this.channels.rotation||null,scale:this.channels.scale||null},Yt.copy(t.position,this.position),jt.copy(t.rotation,this.rotation),Yt.copy(t.scale,this.scale),t.target=this.target,t.updateTarget(),t};var Qt=Bt.quat,Zt=Bt.vec3,Jt=function(t){t=t||{},Lt.call(this,t),this.tracks=t.tracks||[]};Jt.prototype=Object.create(Lt.prototype),Jt.prototype.constructor=Jt,Jt.prototype.step=function(t,e,r){var n=Lt.prototype.step.call(this,t,e,!0);if("finish"!==n){var t=this.getElapsedTime();this._range&&(t=this._range[0]+t),this.setTime(t)}return r||"paused"===n||this.fire("frame"),n},Jt.prototype.setRange=function(t){this.calcLifeFromTracks(),this._range=t,t&&(t[1]=Math.min(t[1],this.life),t[0]=Math.min(t[0],this.life),this.life=t[1]-t[0])},Jt.prototype.setTime=function(t){for(var e=0;e<this.tracks.length;e++)this.tracks[e].setTime(t)},Jt.prototype.calcLifeFromTracks=function(){this.life=0;for(var t=0;t<this.tracks.length;t++)this.life=Math.max(this.life,this.tracks[t].getMaxTime())},Jt.prototype.addTrack=function(t){this.tracks.push(t)},Jt.prototype.removeTarck=function(t){var e=this.tracks.indexOf(t);e>=0&&this.tracks.splice(e,1)},Jt.prototype.getSubClip=function(t,e,r){for(var n=new Jt({name:this.name}),i=0;i<this.tracks.length;i++){var a=this.tracks[i].getSubTrack(t,e);n.addTrack(a)}return void 0!==r&&n.setLoop(r),n.life=e-t,n},Jt.prototype.blend1D=function(t,e,r){for(var n=0;n<this.tracks.length;n++){var i=t.tracks[n],a=e.tracks[n];this.tracks[n].blend1D(i,a,r)}},Jt.prototype.additiveBlend=function(t,e){for(var r=0;r<this.tracks.length;r++){var n=t.tracks[r],i=e.tracks[r];this.tracks[r].additiveBlend(n,i)}},Jt.prototype.subtractiveBlend=function(t,e){for(var r=0;r<this.tracks.length;r++){var n=t.tracks[r],i=e.tracks[r];this.tracks[r].subtractiveBlend(n,i)}},Jt.prototype.blend2D=function(t,e,r,n,i){for(var a=0;a<this.tracks.length;a++){var o=t.tracks[a],s=e.tracks[a],u=r.tracks[a];this.tracks[a].blend2D(o,s,u,n,i)}},Jt.prototype.copy=function(t){for(var e=0;e<this.tracks.length;e++){var r=t.tracks[e],n=this.tracks[e];Zt.copy(n.position,r.position),Zt.copy(n.scale,r.scale),Qt.copy(n.rotation,r.rotation)}},Jt.prototype.clone=function(){for(var t=Lt.prototype.clone.call(this),e=0;e<this.tracks.length;e++)t.addTrack(this.tracks[e].clone());return t.life=this.life,t};var $t={get:S},te=function(){this._fullfilled=!1,this._rejected=!1};te.prototype.resolve=function(t){this._fullfilled=!0,this._rejected=!1,this.trigger("success",t)},te.prototype.reject=function(t){this._rejected=!0,this._fullfilled=!1,this.trigger("error",t)},te.prototype.isFullfilled=function(){return this._fullfilled},te.prototype.isRejected=function(){return this._rejected},te.prototype.isSettled=function(){return this._fullfilled||this._rejected},wt.extend(te.prototype,St),te.makeRequestTask=function(t,e){if("string"==typeof t)return A(t,e);if(t.url){var r=t;return A(r.url,r.responseType)}if(Array.isArray(t)){var n=t,i=[];return n.forEach(function(t){var e,r;"string"==typeof t?e=t:Object(t)===t&&(e=t.url,r=t.responseType),i.push(A(e,r))}),i}},te.makeTask=function(){return new te},wt.extend(te.prototype,St);var ee=function(){te.apply(this,arguments),this._tasks=[],this._fulfilledNumber=0,this._rejectedNumber=0},re=function(){};re.prototype=te.prototype,ee.prototype=new re,ee.prototype.constructor=ee,ee.prototype.all=function(t){var e=0,r=this,n=[];return this._tasks=t,this._fulfilledNumber=0,this._rejectedNumber=0,wt.each(t,function(t,i){t&&t.once&&(e++,t.once("success",function(a){e--,r._fulfilledNumber++,t._fulfilled=!0,t._rejected=!1,n[i]=a,0===e&&r.resolve(n)}),t.once("error",function(){r._rejectedNumber++,t._fulfilled=!1,t._rejected=!0,r.reject(t)}))}),0===e?(setTimeout(function(){r.resolve(n)}),this):this},ee.prototype.allSettled=function(t){var e=0,r=this,n=[];return 0===t.length?(setTimeout(function(){r.trigger("success",n)}),this):(this._tasks=t,wt.each(t,function(t,i){t&&t.once&&(e++,t.once("success",function(a){e--,r._fulfilledNumber++,t._fulfilled=!0,t._rejected=!1,n[i]=a,0===e&&r.resolve(n)}),t.once("error",function(a){e--,r._rejectedNumber++,t._fulfilled=!1,t._rejected=!0,n[i]=null,0===e&&r.resolve(n)}))}),this)},ee.prototype.getFulfilledNumber=function(t){if(t){for(var e=0,r=0;r<this._tasks.length;r++){var n=this._tasks[r];n instanceof ee?e+=n.getFulfilledNumber(t):n._fulfilled&&(e+=1)}return e}return this._fulfilledNumber},ee.prototype.getRejectedNumber=function(t){if(t){for(var e=0,r=0;r<this._tasks.length;r++){var n=this._tasks[r];n instanceof ee?e+=n.getRejectedNumber(t):n._rejected&&(e+=1)}return e}return this._rejectedNumber},ee.prototype.getSettledNumber=function(t){if(t){for(var e=0,r=0;r<this._tasks.length;r++){var n=this._tasks[r];n instanceof ee?e+=n.getSettledNumber(t):(n._rejected||n._fulfilled)&&(e+=1)}return e}return this._fulfilledNumber+this._rejectedNumber},ee.prototype.getTaskNumber=function(t){if(t){for(var e=0,r=0;r<this._tasks.length;r++){var n=this._tasks[r];e+=n instanceof ee?n.getTaskNumber(t):1}return e}return this._tasks.length};var ne=Bt.vec3,ie=function(t,e,r){t=t||0,e=e||0,r=r||0,this._array=ne.fromValues(t,e,r),this._dirty=!0};ie.prototype={constructor:ie,add:function(t){return ne.add(this._array,this._array,t._array),this._dirty=!0,this},set:function(t,e,r){return this._array[0]=t,this._array[1]=e,this._array[2]=r,this._dirty=!0,this},setArray:function(t){return this._array[0]=t[0],this._array[1]=t[1],this._array[2]=t[2],this._dirty=!0,this},clone:function(){return new ie(this.x,this.y,this.z)},copy:function(t){return ne.copy(this._array,t._array),this._dirty=!0,this},cross:function(t,e){return ne.cross(this._array,t._array,e._array),this._dirty=!0,this},dist:function(t){return ne.dist(this._array,t._array)},distance:function(t){return ne.distance(this._array,t._array)},div:function(t){return ne.div(this._array,this._array,t._array),this._dirty=!0,this},divide:function(t){return ne.divide(this._array,this._array,t._array),this._dirty=!0,this},dot:function(t){return ne.dot(this._array,t._array)},len:function(){return ne.len(this._array)},length:function(){return ne.length(this._array)},lerp:function(t,e,r){return ne.lerp(this._array,t._array,e._array,r),this._dirty=!0,this},min:function(t){return ne.min(this._array,this._array,t._array),this._dirty=!0,this},max:function(t){return ne.max(this._array,this._array,t._array),this._dirty=!0,this},mul:function(t){return ne.mul(this._array,this._array,t._array),this._dirty=!0,this},multiply:function(t){return ne.multiply(this._array,this._array,t._array),this._dirty=!0,this},negate:function(){return ne.negate(this._array,this._array),this._dirty=!0,this},normalize:function(){return ne.normalize(this._array,this._array),this._dirty=!0,this},random:function(t){return ne.random(this._array,t),this._dirty=!0,this},scale:function(t){return ne.scale(this._array,this._array,t),this._dirty=!0,this},scaleAndAdd:function(t,e){return ne.scaleAndAdd(this._array,this._array,t._array,e),this._dirty=!0,this},sqrDist:function(t){return ne.sqrDist(this._array,t._array)},squaredDistance:function(t){return ne.squaredDistance(this._array,t._array)},sqrLen:function(){return ne.sqrLen(this._array)},squaredLength:function(){return ne.squaredLength(this._array)},sub:function(t){return ne.sub(this._array,this._array,t._array),this._dirty=!0,this},subtract:function(t){return ne.subtract(this._array,this._array,t._array),this._dirty=!0,this},transformMat3:function(t){return ne.transformMat3(this._array,this._array,t._array),this._dirty=!0,this},transformMat4:function(t){return ne.transformMat4(this._array,this._array,t._array),this._dirty=!0,this},transformQuat:function(t){return ne.transformQuat(this._array,this._array,t._array),this._dirty=!0,this},applyProjection:function(t){var e=this._array;if(t=t._array,0===t[15]){var r=-1/e[2];e[0]=t[0]*e[0]*r,e[1]=t[5]*e[1]*r,e[2]=(t[10]*e[2]+t[14])*r}else e[0]=t[0]*e[0]+t[12],e[1]=t[5]*e[1]+t[13],e[2]=t[10]*e[2]+t[14];return this._dirty=!0,this},eulerFromQuat:function(t,e){ie.eulerFromQuat(this,t,e)},eulerFromMat3:function(t,e){ie.eulerFromMat3(this,t,e)},toString:function(){return"["+Array.prototype.join.call(this._array,",")+"]"},toArray:function(){return Array.prototype.slice.call(this._array)}};var ae=Object.defineProperty;if(ae){var oe=ie.prototype;ae(oe,"x",{get:function(){return this._array[0]},set:function(t){this._array[0]=t,this._dirty=!0}}),ae(oe,"y",{get:function(){return this._array[1]},set:function(t){this._array[1]=t,this._dirty=!0}}),ae(oe,"z",{get:function(){return this._array[2]},set:function(t){this._array[2]=t,this._dirty=!0}})}ie.add=function(t,e,r){return ne.add(t._array,e._array,r._array),t._dirty=!0,t},ie.set=function(t,e,r,n){ne.set(t._array,e,r,n),t._dirty=!0},ie.copy=function(t,e){return ne.copy(t._array,e._array),t._dirty=!0,t},ie.cross=function(t,e,r){return ne.cross(t._array,e._array,r._array),t._dirty=!0,t},ie.dist=function(t,e){return ne.distance(t._array,e._array)},ie.distance=ie.dist,ie.div=function(t,e,r){return ne.divide(t._array,e._array,r._array),t._dirty=!0,t},ie.divide=ie.div,ie.dot=function(t,e){return ne.dot(t._array,e._array)},ie.len=function(t){return ne.length(t._array)},ie.lerp=function(t,e,r,n){return ne.lerp(t._array,e._array,r._array,n),t._dirty=!0,t},ie.min=function(t,e,r){return ne.min(t._array,e._array,r._array),t._dirty=!0,t},ie.max=function(t,e,r){return ne.max(t._array,e._array,r._array),t._dirty=!0,t},ie.mul=function(t,e,r){return ne.multiply(t._array,e._array,r._array),t._dirty=!0,t},ie.multiply=ie.mul,ie.negate=function(t,e){return ne.negate(t._array,e._array),t._dirty=!0,t},ie.normalize=function(t,e){return ne.normalize(t._array,e._array),t._dirty=!0,t},ie.random=function(t,e){return ne.random(t._array,e),t._dirty=!0,t},ie.scale=function(t,e,r){return ne.scale(t._array,e._array,r),t._dirty=!0,t},ie.scaleAndAdd=function(t,e,r,n){return ne.scaleAndAdd(t._array,e._array,r._array,n),t._dirty=!0,t},ie.sqrDist=function(t,e){return ne.sqrDist(t._array,e._array)},ie.squaredDistance=ie.sqrDist,ie.sqrLen=function(t){return ne.sqrLen(t._array)},ie.squaredLength=ie.sqrLen,ie.sub=function(t,e,r){return ne.subtract(t._array,e._array,r._array),t._dirty=!0,t},ie.subtract=ie.sub,ie.transformMat3=function(t,e,r){return ne.transformMat3(t._array,e._array,r._array),t._dirty=!0,t},ie.transformMat4=function(t,e,r){return ne.transformMat4(t._array,e._array,r._array),t._dirty=!0,t},ie.transformQuat=function(t,e,r){return ne.transformQuat(t._array,e._array,r._array),t._dirty=!0,t};var se=Math.atan2,ue=Math.asin,le=Math.abs;ie.eulerFromQuat=function(t,e,r){t._dirty=!0,e=e._array;var n=t._array,i=e[0],a=e[1],o=e[2],s=e[3],u=i*i,l=a*a,h=o*o,c=s*s,r=(r||"XYZ").toUpperCase();switch(r){case"XYZ":n[0]=se(2*(i*s-a*o),c-u-l+h),n[1]=ue(N(2*(i*o+a*s),-1,1)),n[2]=se(2*(o*s-i*a),c+u-l-h);break;case"YXZ":n[0]=ue(N(2*(i*s-a*o),-1,1)),n[1]=se(2*(i*o+a*s),c-u-l+h),n[2]=se(2*(i*a+o*s),c-u+l-h);break;case"ZXY":n[0]=ue(N(2*(i*s+a*o),-1,1)),n[1]=se(2*(a*s-o*i),c-u-l+h),n[2]=se(2*(o*s-i*a),c-u+l-h);break;case"ZYX":n[0]=se(2*(i*s+o*a),c-u-l+h),n[1]=ue(N(2*(a*s-i*o),-1,1)),n[2]=se(2*(i*a+o*s),c+u-l-h);break;case"YZX":n[0]=se(2*(i*s-o*a),c-u+l-h),n[1]=se(2*(a*s-i*o),c+u-l-h),n[2]=ue(N(2*(i*a+o*s),-1,1));break;case"XZY":n[0]=se(2*(i*s+a*o),c-u+l-h),n[1]=se(2*(i*o+a*s),c+u-l-h),n[2]=ue(N(2*(o*s-i*a),-1,1));break;default:console.warn("Unkown order: "+r)}return t},ie.eulerFromMat3=function(t,e,r){var n=e._array,i=n[0],a=n[3],o=n[6],s=n[1],u=n[4],l=n[7],h=n[2],c=n[5],f=n[8],d=t._array,r=(r||"XYZ").toUpperCase();switch(r){case"XYZ":d[1]=ue(N(o,-1,1)),le(o)<.99999?(d[0]=se(-l,f),d[2]=se(-a,i)):(d[0]=se(c,u),d[2]=0);break;case"YXZ":d[0]=ue(-N(l,-1,1)),le(l)<.99999?(d[1]=se(o,f),d[2]=se(s,u)):(d[1]=se(-h,i),d[2]=0);break;case"ZXY":d[0]=ue(N(c,-1,1)),le(c)<.99999?(d[1]=se(-h,f),d[2]=se(-a,u)):(d[1]=0,d[2]=se(s,i));break;case"ZYX":d[1]=ue(-N(h,-1,1)),le(h)<.99999?(d[0]=se(c,f),d[2]=se(s,i)):(d[0]=0,d[2]=se(-a,u));break;case"YZX":d[2]=ue(N(s,-1,1)),le(s)<.99999?(d[0]=se(-l,u),d[1]=se(-h,i)):(d[0]=0,d[1]=se(o,f));break;case"XZY":d[2]=ue(-N(a,-1,1)),le(a)<.99999?(d[0]=se(c,u),d[1]=se(o,i)):(d[0]=se(-l,f),d[1]=0);break;default:console.warn("Unkown order: "+r)}return t._dirty=!0,t},ie.POSITIVE_X=new ie(1,0,0),ie.NEGATIVE_X=new ie(-1,0,0),ie.POSITIVE_Y=new ie(0,1,0),ie.NEGATIVE_Y=new ie(0,-1,0),ie.POSITIVE_Z=new ie(0,0,1),ie.NEGATIVE_Z=new ie(0,0,-1),ie.UP=new ie(0,1,0),ie.ZERO=new ie(0,0,0);var he=Bt.quat,ce=function(t,e,r,n){t=t||0,e=e||0,r=r||0,n=void 0===n?1:n,this._array=he.fromValues(t,e,r,n),this._dirty=!0};ce.prototype={constructor:ce,add:function(t){return he.add(this._array,this._array,t._array),this._dirty=!0,this},calculateW:function(){return he.calculateW(this._array,this._array),this._dirty=!0,this},set:function(t,e,r,n){return this._array[0]=t,this._array[1]=e,this._array[2]=r,this._array[3]=n,this._dirty=!0,this},setArray:function(t){return this._array[0]=t[0],this._array[1]=t[1],this._array[2]=t[2],this._array[3]=t[3],this._dirty=!0,this},clone:function(){return new ce(this.x,this.y,this.z,this.w)},conjugate:function(){return he.conjugate(this._array,this._array),this._dirty=!0,this},copy:function(t){return he.copy(this._array,t._array),this._dirty=!0,this},dot:function(t){return he.dot(this._array,t._array)},fromMat3:function(t){return he.fromMat3(this._array,t._array),this._dirty=!0,this},fromMat4:function(){var t=Bt.mat3,e=t.create();return function(r){return t.fromMat4(e,r._array),t.transpose(e,e),he.fromMat3(this._array,e),this._dirty=!0,this}}(),identity:function(){return he.identity(this._array),this._dirty=!0,this},invert:function(){return he.invert(this._array,this._array),this._dirty=!0,this},len:function(){return he.len(this._array)},length:function(){return he.length(this._array)},lerp:function(t,e,r){return he.lerp(this._array,t._array,e._array,r),this._dirty=!0,this},mul:function(t){return he.mul(this._array,this._array,t._array),this._dirty=!0,this},mulLeft:function(t){return he.multiply(this._array,t._array,this._array),this._dirty=!0,this},multiply:function(t){return he.multiply(this._array,this._array,t._array),this._dirty=!0,this},multiplyLeft:function(t){return he.multiply(this._array,t._array,this._array),this._dirty=!0,this},normalize:function(){return he.normalize(this._array,this._array),this._dirty=!0,this},rotateX:function(t){return he.rotateX(this._array,this._array,t),this._dirty=!0,this},rotateY:function(t){return he.rotateY(this._array,this._array,t),this._dirty=!0,this},rotateZ:function(t){return he.rotateZ(this._array,this._array,t),this._dirty=!0,this},rotationTo:function(t,e){return he.rotationTo(this._array,t._array,e._array),this._dirty=!0,this},setAxes:function(t,e,r){return he.setAxes(this._array,t._array,e._array,r._array),this._dirty=!0,this},setAxisAngle:function(t,e){return he.setAxisAngle(this._array,t._array,e),this._dirty=!0,this},slerp:function(t,e,r){return he.slerp(this._array,t._array,e._array,r),this._dirty=!0,this},sqrLen:function(){return he.sqrLen(this._array)},squaredLength:function(){return he.squaredLength(this._array)},fromEuler:function(t,e){return ce.fromEuler(this,t,e)},toString:function(){return"["+Array.prototype.join.call(this._array,",")+"]"},toArray:function(){return Array.prototype.slice.call(this._array)}};var fe=Object.defineProperty;if(fe){var de=ce.prototype;fe(de,"x",{get:function(){return this._array[0]},set:function(t){this._array[0]=t,this._dirty=!0}}),fe(de,"y",{get:function(){return this._array[1]},set:function(t){this._array[1]=t,this._dirty=!0}}),fe(de,"z",{get:function(){return this._array[2]},set:function(t){this._array[2]=t,this._dirty=!0}}),fe(de,"w",{get:function(){return this._array[3]},set:function(t){this._array[3]=t,this._dirty=!0}})}ce.add=function(t,e,r){return he.add(t._array,e._array,r._array),t._dirty=!0,t},ce.set=function(t,e,r,n,i){he.set(t._array,e,r,n,i),t._dirty=!0},ce.copy=function(t,e){return he.copy(t._array,e._array),t._dirty=!0,t},ce.calculateW=function(t,e){return he.calculateW(t._array,e._array),t._dirty=!0,t},ce.conjugate=function(t,e){return he.conjugate(t._array,e._array),t._dirty=!0,t},ce.identity=function(t){return he.identity(t._array),t._dirty=!0,t},ce.invert=function(t,e){return he.invert(t._array,e._array),t._dirty=!0,t},ce.dot=function(t,e){return he.dot(t._array,e._array)},ce.len=function(t){return he.length(t._array)},ce.lerp=function(t,e,r,n){return he.lerp(t._array,e._array,r._array,n),t._dirty=!0,t},ce.slerp=function(t,e,r,n){return he.slerp(t._array,e._array,r._array,n),t._dirty=!0,t},ce.mul=function(t,e,r){return he.multiply(t._array,e._array,r._array),t._dirty=!0,t},ce.multiply=ce.mul,ce.rotateX=function(t,e,r){return he.rotateX(t._array,e._array,r),t._dirty=!0,t},ce.rotateY=function(t,e,r){return he.rotateY(t._array,e._array,r),t._dirty=!0,t},ce.rotateZ=function(t,e,r){return he.rotateZ(t._array,e._array,r),t._dirty=!0,t},ce.setAxisAngle=function(t,e,r){return he.setAxisAngle(t._array,e._array,r),t._dirty=!0,t},ce.normalize=function(t,e){return he.normalize(t._array,e._array),t._dirty=!0,t},ce.sqrLen=function(t){return he.sqrLen(t._array)},ce.squaredLength=ce.sqrLen,ce.fromMat3=function(t,e){return he.fromMat3(t._array,e._array),t._dirty=!0,t},ce.setAxes=function(t,e,r,n){return he.setAxes(t._array,e._array,r._array,n._array),t._dirty=!0,t},ce.rotationTo=function(t,e,r){return he.rotationTo(t._array,e._array,r._array),t._dirty=!0,t},ce.fromEuler=function(t,e,r){t._dirty=!0,e=e._array;var n=t._array,i=Math.cos(e[0]/2),a=Math.cos(e[1]/2),o=Math.cos(e[2]/2),s=Math.sin(e[0]/2),u=Math.sin(e[1]/2),l=Math.sin(e[2]/2),r=(r||"XYZ").toUpperCase();switch(r){case"XYZ":n[0]=s*a*o+i*u*l,n[1]=i*u*o-s*a*l,n[2]=i*a*l+s*u*o,n[3]=i*a*o-s*u*l;break;case"YXZ":n[0]=s*a*o+i*u*l,n[1]=i*u*o-s*a*l,n[2]=i*a*l-s*u*o,n[3]=i*a*o+s*u*l;break;case"ZXY":n[0]=s*a*o-i*u*l,n[1]=i*u*o+s*a*l,n[2]=i*a*l+s*u*o,n[3]=i*a*o-s*u*l;break;case"ZYX":n[0]=s*a*o-i*u*l,n[1]=i*u*o+s*a*l,n[2]=i*a*l-s*u*o,n[3]=i*a*o+s*u*l;break;case"YZX":n[0]=s*a*o+i*u*l,n[1]=i*u*o+s*a*l,n[2]=i*a*l-s*u*o,n[3]=i*a*o-s*u*l;break;case"XZY":n[0]=s*a*o-i*u*l,n[1]=i*u*o-s*a*l,n[2]=i*a*l+s*u*o,n[3]=i*a*o+s*u*l}};var _e=Bt.mat4,me=Bt.vec3,pe=Bt.mat3,ve=Bt.quat,ge=function(){this._axisX=new ie,this._axisY=new ie,this._axisZ=new ie,this._array=_e.create(),this._dirty=!0};ge.prototype={constructor:ge,setArray:function(t){for(var e=0;e<this._array.length;e++)this._array[e]=t[e];return this._dirty=!0,this},adjoint:function(){return _e.adjoint(this._array,this._array),this._dirty=!0,this},clone:function(){return(new ge).copy(this)},copy:function(t){return _e.copy(this._array,t._array),this._dirty=!0,this},determinant:function(){return _e.determinant(this._array)},fromQuat:function(t){return _e.fromQuat(this._array,t._array),this._dirty=!0,this},fromRotationTranslation:function(t,e){return _e.fromRotationTranslation(this._array,t._array,e._array),this._dirty=!0,this},fromMat2d:function(t){return ge.fromMat2d(this,t),this},frustum:function(t,e,r,n,i,a){return _e.frustum(this._array,t,e,r,n,i,a),this._dirty=!0,this},identity:function(){return _e.identity(this._array),this._dirty=!0,this},invert:function(){return _e.invert(this._array,this._array),this._dirty=!0,this},lookAt:function(t,e,r){return _e.lookAt(this._array,t._array,e._array,r._array),this._dirty=!0,this},mul:function(t){return _e.mul(this._array,this._array,t._array),this._dirty=!0,this},mulLeft:function(t){return _e.mul(this._array,t._array,this._array),this._dirty=!0,this},multiply:function(t){return _e.multiply(this._array,this._array,t._array),this._dirty=!0,this},multiplyLeft:function(t){return _e.multiply(this._array,t._array,this._array),this._dirty=!0,this},ortho:function(t,e,r,n,i,a){return _e.ortho(this._array,t,e,r,n,i,a),this._dirty=!0,this},perspective:function(t,e,r,n){return _e.perspective(this._array,t,e,r,n),this._dirty=!0,this},rotate:function(t,e){return _e.rotate(this._array,this._array,t,e._array),this._dirty=!0,this},rotateX:function(t){return _e.rotateX(this._array,this._array,t),this._dirty=!0,this},rotateY:function(t){return _e.rotateY(this._array,this._array,t),this._dirty=!0,this},rotateZ:function(t){return _e.rotateZ(this._array,this._array,t),this._dirty=!0,this},scale:function(t){return _e.scale(this._array,this._array,t._array),this._dirty=!0,this},translate:function(t){return _e.translate(this._array,this._array,t._array),this._dirty=!0,this},transpose:function(){return _e.transpose(this._array,this._array),this._dirty=!0,this},decomposeMatrix:function(){var t=me.create(),e=me.create(),r=me.create(),n=pe.create();return function(i,a,o){var s=this._array;me.set(t,s[0],s[1],s[2]),me.set(e,s[4],s[5],s[6]),me.set(r,s[8],s[9],s[10]);var u=me.length(t),l=me.length(e),h=me.length(r);this.determinant()<0&&(u=-u),i&&i.set(u,l,h),o.set(s[12],s[13],s[14]),pe.fromMat4(n,s),n[0]/=u,n[1]/=u,n[2]/=u,n[3]/=l,n[4]/=l,n[5]/=l,n[6]/=h,n[7]/=h,n[8]/=h,ve.fromMat3(a._array,n),ve.normalize(a._array,a._array),a._dirty=!0,o._dirty=!0}}(),toString:function(){return"["+Array.prototype.join.call(this._array,",")+"]"},toArray:function(){return Array.prototype.slice.call(this._array)}};var ye=Object.defineProperty;if(ye){var xe=ge.prototype;ye(xe,"z",{get:function(){var t=this._array;return this._axisZ.set(t[8],t[9],t[10]),this._axisZ},set:function(t){var e=this._array;t=t._array,e[8]=t[0],e[9]=t[1],e[10]=t[2],this._dirty=!0}}),ye(xe,"y",{get:function(){var t=this._array;return this._axisY.set(t[4],t[5],t[6]),this._axisY},set:function(t){var e=this._array;t=t._array,e[4]=t[0],e[5]=t[1],e[6]=t[2],this._dirty=!0}}),ye(xe,"x",{get:function(){var t=this._array;return this._axisX.set(t[0],t[1],t[2]),this._axisX},set:function(t){var e=this._array;t=t._array,e[0]=t[0],e[1]=t[1],e[2]=t[2],this._dirty=!0}})}ge.adjoint=function(t,e){return _e.adjoint(t._array,e._array),t._dirty=!0,t},ge.copy=function(t,e){return _e.copy(t._array,e._array),t._dirty=!0,t},ge.determinant=function(t){return _e.determinant(t._array)},ge.identity=function(t){return _e.identity(t._array),t._dirty=!0,t},ge.ortho=function(t,e,r,n,i,a,o){return _e.ortho(t._array,e,r,n,i,a,o),t._dirty=!0,t},ge.perspective=function(t,e,r,n,i){return _e.perspective(t._array,e,r,n,i),t._dirty=!0,t},ge.lookAt=function(t,e,r,n){return _e.lookAt(t._array,e._array,r._array,n._array),t._dirty=!0,t},ge.invert=function(t,e){return _e.invert(t._array,e._array),t._dirty=!0,t},ge.mul=function(t,e,r){return _e.mul(t._array,e._array,r._array),t._dirty=!0,t},ge.multiply=ge.mul,ge.fromQuat=function(t,e){return _e.fromQuat(t._array,e._array),t._dirty=!0,t},ge.fromRotationTranslation=function(t,e,r){return _e.fromRotationTranslation(t._array,e._array,r._array),t._dirty=!0,t},ge.fromMat2d=function(t,e){t._dirty=!0;var e=e._array,t=t._array;return t[0]=e[0],t[4]=e[2],t[12]=e[4],t[1]=e[1],t[5]=e[3],t[13]=e[5],t},ge.rotate=function(t,e,r,n){return _e.rotate(t._array,e._array,r,n._array),t._dirty=!0,t},ge.rotateX=function(t,e,r){return _e.rotateX(t._array,e._array,r),t._dirty=!0,t},ge.rotateY=function(t,e,r){return _e.rotateY(t._array,e._array,r),t._dirty=!0,t},ge.rotateZ=function(t,e,r){return _e.rotateZ(t._array,e._array,r),t._dirty=!0,t},ge.scale=function(t,e,r){return _e.scale(t._array,e._array,r._array),t._dirty=!0,t},ge.transpose=function(t,e){return _e.transpose(t._array,e._array),t._dirty=!0,t},ge.translate=function(t,e,r){return _e.translate(t._array,e._array,r._array),t._dirty=!0,t};var Te=Bt.vec3,Ee=Te.copy,be=Te.set,Se=function(t,e){this.min=t||new ie(1/0,1/0,1/0),this.max=e||new ie(-1/0,-1/0,-1/0)};Se.prototype={constructor:Se,updateFromVertices:function(t){if(t.length>0){var e=this.min,r=this.max,n=e._array,i=r._array;Ee(n,t[0]),Ee(i,t[0]);for(var a=1;a<t.length;a++){var o=t[a];o[0]<n[0]&&(n[0]=o[0]),o[1]<n[1]&&(n[1]=o[1]),o[2]<n[2]&&(n[2]=o[2]),o[0]>i[0]&&(i[0]=o[0]),o[1]>i[1]&&(i[1]=o[1]),o[2]>i[2]&&(i[2]=o[2])}e._dirty=!0,r._dirty=!0}},union:function(t){var e=this.min,r=this.max;return Te.min(e._array,e._array,t.min._array),Te.max(r._array,r._array,t.max._array),e._dirty=!0,r._dirty=!0,this},intersection:function(t){var e=this.min,r=this.max;return Te.max(e._array,e._array,t.min._array),Te.min(r._array,r._array,t.max._array),e._dirty=!0,r._dirty=!0,this},intersectBoundingBox:function(t){var e=this.min._array,r=this.max._array,n=t.min._array,i=t.max._array;return!(e[0]>i[0]||e[1]>i[1]||e[2]>i[2]||r[0]<n[0]||r[1]<n[1]||r[2]<n[2])},containBoundingBox:function(t){var e=this.min._array,r=this.max._array,n=t.min._array,i=t.max._array;return e[0]<=n[0]&&e[1]<=n[1]&&e[2]<=n[2]&&r[0]>=i[0]&&r[1]>=i[1]&&r[2]>=i[2]},containPoint:function(t){var e=this.min._array,r=this.max._array,n=t._array;return e[0]<=n[0]&&e[1]<=n[1]&&e[2]<=n[2]&&r[0]>=n[0]&&r[1]>=n[1]&&r[2]>=n[2]},isFinite:function(){var t=this.min._array,e=this.max._array;return isFinite(t[0])&&isFinite(t[1])&&isFinite(t[2])&&isFinite(e[0])&&isFinite(e[1])&&isFinite(e[2])},applyTransform:function(){var t=Te.create(),e=Te.create(),r=Te.create(),n=Te.create(),i=Te.create(),a=Te.create();return function(o){var s=this.min._array,u=this.max._array,l=o._array;return t[0]=l[0]*s[0],t[1]=l[1]*s[0],t[2]=l[2]*s[0],e[0]=l[0]*u[0],e[1]=l[1]*u[0],e[2]=l[2]*u[0],r[0]=l[4]*s[1],r[1]=l[5]*s[1],r[2]=l[6]*s[1],n[0]=l[4]*u[1],n[1]=l[5]*u[1],n[2]=l[6]*u[1],i[0]=l[8]*s[2],i[1]=l[9]*s[2],i[2]=l[10]*s[2],a[0]=l[8]*u[2],a[1]=l[9]*u[2],a[2]=l[10]*u[2],s[0]=Math.min(t[0],e[0])+Math.min(r[0],n[0])+Math.min(i[0],a[0])+l[12],s[1]=Math.min(t[1],e[1])+Math.min(r[1],n[1])+Math.min(i[1],a[1])+l[13],s[2]=Math.min(t[2],e[2])+Math.min(r[2],n[2])+Math.min(i[2],a[2])+l[14],u[0]=Math.max(t[0],e[0])+Math.max(r[0],n[0])+Math.max(i[0],a[0])+l[12],u[1]=Math.max(t[1],e[1])+Math.max(r[1],n[1])+Math.max(i[1],a[1])+l[13],u[2]=Math.max(t[2],e[2])+Math.max(r[2],n[2])+Math.max(i[2],a[2])+l[14],this.min._dirty=!0,this.max._dirty=!0,
this}}(),applyProjection:function(t){var e=this.min._array,r=this.max._array,n=t._array,i=e[0],a=e[1],o=e[2],s=r[0],u=r[1],l=e[2],h=r[0],c=r[1],f=r[2];if(1===n[15])e[0]=n[0]*i+n[12],e[1]=n[5]*a+n[13],r[2]=n[10]*o+n[14],r[0]=n[0]*h+n[12],r[1]=n[5]*c+n[13],e[2]=n[10]*f+n[14];else{var d=-1/o;e[0]=n[0]*i*d,e[1]=n[5]*a*d,r[2]=(n[10]*o+n[14])*d,d=-1/l,r[0]=n[0]*s*d,r[1]=n[5]*u*d,d=-1/f,e[2]=(n[10]*f+n[14])*d}return this.min._dirty=!0,this.max._dirty=!0,this},updateVertices:function(){var t=this.vertices;if(!t){for(var t=[],e=0;e<8;e++)t[e]=Te.fromValues(0,0,0);this.vertices=t}var r=this.min._array,n=this.max._array;return be(t[0],r[0],r[1],r[2]),be(t[1],r[0],n[1],r[2]),be(t[2],n[0],r[1],r[2]),be(t[3],n[0],n[1],r[2]),be(t[4],r[0],r[1],n[2]),be(t[5],r[0],n[1],n[2]),be(t[6],n[0],r[1],n[2]),be(t[7],n[0],n[1],n[2]),this},copy:function(t){var e=this.min,r=this.max;return Ee(e._array,t.min._array),Ee(r._array,t.max._array),e._dirty=!0,r._dirty=!0,this},clone:function(){var t=new Se;return t.copy(this),t}};var Ae=Bt.mat4,Ne=0,Me=Rt.extend({name:"",position:null,rotation:null,scale:null,worldTransform:null,localTransform:null,autoUpdateLocalTransform:!0,_parent:null,_scene:null,_needsUpdateWorldTransform:!0,_inIterating:!1,__depth:0},function(){this.name||(this.name=(this.type||"NODE")+"_"+Ne++),this.position||(this.position=new ie),this.rotation||(this.rotation=new ce),this.scale||(this.scale=new ie(1,1,1)),this.worldTransform=new ge,this.localTransform=new ge,this._children=[]},{target:null,invisible:!1,isSkinnedMesh:function(){return!1},isRenderable:function(){return!1},setName:function(t){var e=this._scene;if(e){var r=e._nodeRepository;delete r[this.name],r[t]=this}this.name=t},add:function(t){this._inIterating&&console.warn("Add operation can cause unpredictable error when in iterating");var e=t._parent;if(e!==this){e&&e.remove(t),t._parent=this,this._children.push(t);var r=this._scene;r&&r!==t.scene&&t.traverse(this._addSelfToScene,this),t._needsUpdateWorldTransform=!0}},remove:function(t){this._inIterating&&console.warn("Remove operation can cause unpredictable error when in iterating");var e=this._children,r=e.indexOf(t);r<0||(e.splice(r,1),t._parent=null,this._scene&&t.traverse(this._removeSelfFromScene,this))},removeAll:function(){for(var t=this._children,e=0;e<t.length;e++)t[e]._parent=null,this._scene&&t[e].traverse(this._removeSelfFromScene,this);this._children=[]},getScene:function(){return this._scene},getParent:function(){return this._parent},_removeSelfFromScene:function(t){t._scene.removeFromScene(t),t._scene=null},_addSelfToScene:function(t){this._scene.addToScene(t),t._scene=this._scene},isAncestor:function(t){for(var e=t._parent;e;){if(e===this)return!0;e=e._parent}return!1},children:function(){return this._children.slice()},childAt:function(t){return this._children[t]},getChildByName:function(t){for(var e=this._children,r=0;r<e.length;r++)if(e[r].name===t)return e[r]},getDescendantByName:function(t){for(var e=this._children,r=0;r<e.length;r++){var n=e[r];if(n.name===t)return n;var i=n.getDescendantByName(t);if(i)return i}},queryNode:function(t){if(t){for(var e=t.split("/"),r=this,n=0;n<e.length;n++){var i=e[n];if(i){for(var a=!1,o=r._children,s=0;s<o.length;s++){var u=o[s];if(u.name===i){r=u,a=!0;break}}if(!a)return}}return r}},getPath:function(t){if(!this._parent)return"/";for(var e=this._parent,r=this.name;e._parent&&(r=e.name+"/"+r,e._parent!=t);)e=e._parent;return!e._parent&&t?null:r},traverse:function(t,e,r){this._inIterating=!0,r&&!r.call(e,this)||t.call(e,this);for(var n=this._children,i=0,a=n.length;i<a;i++)n[i].traverse(t,e,r);this._inIterating=!1},eachChild:function(t,e,r){this._inIterating=!0;for(var n=this._children,i=null==r,a=0,o=n.length;a<o;a++){var s=n[a];(i||s.constructor===r)&&t.call(e,s,a)}this._inIterating=!1},setLocalTransform:function(t){Ae.copy(this.localTransform._array,t._array),this.decomposeLocalTransform()},decomposeLocalTransform:function(t){var e=t?null:this.scale;this.localTransform.decomposeMatrix(e,this.rotation,this.position)},setWorldTransform:function(t){Ae.copy(this.worldTransform._array,t._array),this.decomposeWorldTransform()},decomposeWorldTransform:function(){var t=Ae.create();return function(e){var r=this.localTransform,n=this.worldTransform;this._parent?(Ae.invert(t,this._parent.worldTransform._array),Ae.multiply(r._array,t,n._array)):Ae.copy(r._array,n._array);var i=e?null:this.scale;r.decomposeMatrix(i,this.rotation,this.position)}}(),transformNeedsUpdate:function(){return this.position._dirty||this.rotation._dirty||this.scale._dirty},updateLocalTransform:function(){var t=this.position,e=this.rotation,r=this.scale;if(this.transformNeedsUpdate()){var n=this.localTransform._array;Ae.fromRotationTranslation(n,e._array,t._array),Ae.scale(n,n,r._array),e._dirty=!1,r._dirty=!1,t._dirty=!1,this._needsUpdateWorldTransform=!0}},_updateWorldTransformTopDown:function(){var t=this.localTransform._array,e=this.worldTransform._array;this._parent?Ae.multiplyAffine(e,this._parent.worldTransform._array,t):Ae.copy(e,t)},updateWorldTransform:function(){for(var t=this;t&&t.getParent()&&t.getParent().transformNeedsUpdate();)t=t.getParent();t.update()},update:function(t){this.autoUpdateLocalTransform?this.updateLocalTransform():t=!0,(t||this._needsUpdateWorldTransform)&&(this._updateWorldTransformTopDown(),t=!0,this._needsUpdateWorldTransform=!1);for(var e=this._children,r=0,n=e.length;r<n;r++)e[r].update(t)},getBoundingBox:function(){function t(t){return!t.invisible&&t.geometry}var e=new Se,r=new ge,n=new ge;return function(i,a){return a=a||new Se,i=i||t,this._parent?ge.invert(n,this._parent.worldTransform):ge.identity(n),this.traverse(function(t){t.geometry&&t.geometry.boundingBox&&(e.copy(t.geometry.boundingBox),ge.multiply(r,n,t.worldTransform),e.applyTransform(r),a.union(e))},this,t),a}}(),getWorldPosition:function(t){this.transformNeedsUpdate()&&this.updateWorldTransform();var e=this.worldTransform._array;if(t){var r=t._array;return r[0]=e[12],r[1]=e[13],r[2]=e[14],t}return new ie(e[12],e[13],e[14])},clone:function(){var t=new this.constructor,e=this._children;t.setName(this.name),t.position.copy(this.position),t.rotation.copy(this.rotation),t.scale.copy(this.scale);for(var r=0;r<e.length;r++)t.add(e[r].clone());return t},rotateAround:function(){var t=new ie,e=new ge;return function(r,n,i){t.copy(this.position).subtract(r);var a=this.localTransform;a.identity(),a.translate(r),a.rotate(i,n),e.fromRotationTranslation(this.rotation,t),a.multiply(e),a.scale(this.scale),this.decomposeLocalTransform(),this._needsUpdateWorldTransform=!0}}(),lookAt:function(){var t=new ge;return function(e,r){t.lookAt(this.position,e,r||this.localTransform.y).invert(),this.setLocalTransform(t),this.target=e}}()}),we=Bt.vec3,Re=Bt.mat4,Ce=Bt.vec4,Le=function(t,e){this.normal=t||new ie(0,1,0),this.distance=e||0};Le.prototype={constructor:Le,distanceToPoint:function(t){return we.dot(t._array,this.normal._array)-this.distance},projectPoint:function(t,e){e||(e=new ie);var r=this.distanceToPoint(t);return we.scaleAndAdd(e._array,t._array,this.normal._array,-r),e._dirty=!0,e},normalize:function(){var t=1/we.len(this.normal._array);we.scale(this.normal._array,t),this.distance*=t},intersectFrustum:function(t){for(var e=t.vertices,r=this.normal._array,n=we.dot(e[0]._array,r)>this.distance,i=1;i<8;i++)if(we.dot(e[i]._array,r)>this.distance!=n)return!0},intersectLine:function(){var t=we.create();return function(e,r,n){var i=this.distanceToPoint(e),a=this.distanceToPoint(r);if(i>0&&a>0||i<0&&a<0)return null;var o=this.normal._array,s=this.distance,u=e._array;we.sub(t,r._array,e._array),we.normalize(t,t);var l=we.dot(o,t);if(0===l)return null;n||(n=new ie);var h=(we.dot(o,u)-s)/l;return we.scaleAndAdd(n._array,u,t,-h),n._dirty=!0,n}}(),applyTransform:function(){var t=Re.create(),e=Ce.create(),r=Ce.create();return r[3]=1,function(n){n=n._array,we.scale(r,this.normal._array,this.distance),Ce.transformMat4(r,r,n),this.distance=we.dot(r,this.normal._array),Re.invert(t,n),Re.transpose(t,t),e[3]=0,we.copy(e,this.normal._array),Ce.transformMat4(e,e,t),we.copy(this.normal._array,e)}}(),copy:function(t){we.copy(this.normal._array,t.normal._array),this.normal._dirty=!0,this.distance=t.distance},clone:function(){var t=new Le;return t.copy(this),t}};var Pe=Bt.vec3,De=Pe.set,Ie=Pe.copy,Oe=Pe.transformMat4,ke=Math.min,Ue=Math.max,Fe=function(){this.planes=[];for(var t=0;t<6;t++)this.planes.push(new Le);this.boundingBox=new Se,this.vertices=[];for(var t=0;t<8;t++)this.vertices[t]=Pe.fromValues(0,0,0)};Fe.prototype={setFromProjection:function(t){var e=this.planes,r=t._array,n=r[0],i=r[1],a=r[2],o=r[3],s=r[4],u=r[5],l=r[6],h=r[7],c=r[8],f=r[9],d=r[10],_=r[11],m=r[12],p=r[13],v=r[14],g=r[15];De(e[0].normal._array,o-n,h-s,_-c),e[0].distance=-(g-m),e[0].normalize(),De(e[1].normal._array,o+n,h+s,_+c),e[1].distance=-(g+m),e[1].normalize(),De(e[2].normal._array,o+i,h+u,_+f),e[2].distance=-(g+p),e[2].normalize(),De(e[3].normal._array,o-i,h-u,_-f),e[3].distance=-(g-p),e[3].normalize(),De(e[4].normal._array,o-a,h-l,_-d),e[4].distance=-(g-v),e[4].normalize(),De(e[5].normal._array,o+a,h+l,_+d),e[5].distance=-(g+v),e[5].normalize();var y=this.boundingBox;if(0===g){var x=u/n,T=-v/(d-1),E=-v/(d+1),b=-E/u,S=-T/u;y.min.set(-b*x,-b,E),y.max.set(b*x,b,T);var A=this.vertices;De(A[0],-b*x,-b,E),De(A[1],-b*x,b,E),De(A[2],b*x,-b,E),De(A[3],b*x,b,E),De(A[4],-S*x,-S,T),De(A[5],-S*x,S,T),De(A[6],S*x,-S,T),De(A[7],S*x,S,T)}else{var N=(-1-m)/n,M=(1-m)/n,w=(1-p)/u,R=(-1-p)/u,C=(-1-v)/d,L=(1-v)/d;y.min.set(Math.min(N,M),Math.min(R,w),Math.min(L,C)),y.max.set(Math.max(M,N),Math.max(w,R),Math.max(C,L));var P=y.min._array,D=y.max._array,A=this.vertices;De(A[0],P[0],P[1],P[2]),De(A[1],P[0],D[1],P[2]),De(A[2],D[0],P[1],P[2]),De(A[3],D[0],D[1],P[2]),De(A[4],P[0],P[1],D[2]),De(A[5],P[0],D[1],D[2]),De(A[6],D[0],P[1],D[2]),De(A[7],D[0],D[1],D[2])}},getTransformedBoundingBox:function(){var t=Pe.create();return function(e,r){var n=this.vertices,i=r._array,a=e.min,o=e.max,s=a._array,u=o._array,l=n[0];Oe(t,l,i),Ie(s,t),Ie(u,t);for(var h=1;h<8;h++)l=n[h],Oe(t,l,i),s[0]=ke(t[0],s[0]),s[1]=ke(t[1],s[1]),s[2]=ke(t[2],s[2]),u[0]=Ue(t[0],u[0]),u[1]=Ue(t[1],u[1]),u[2]=Ue(t[2],u[2]);return a._dirty=!0,o._dirty=!0,e}}()};var Be=Bt.vec3,He=function(t,e){this.origin=t||new ie,this.direction=e||new ie};He.prototype={constructor:He,intersectPlane:function(t,e){var r=t.normal._array,n=t.distance,i=this.origin._array,a=this.direction._array,o=Be.dot(r,a);if(0===o)return null;e||(e=new ie);var s=(Be.dot(r,i)-n)/o;return Be.scaleAndAdd(e._array,i,a,-s),e._dirty=!0,e},mirrorAgainstPlane:function(t){var e=Be.dot(t.normal._array,this.direction._array);Be.scaleAndAdd(this.direction._array,this.direction._array,t.normal._array,2*-e),this.direction._dirty=!0},distanceToPoint:function(){var t=Be.create();return function(e){Be.sub(t,e,this.origin._array);var r=Be.dot(t,this.direction._array);if(r<0)return Be.distance(this.origin._array,e);var n=Be.lenSquared(t);return Math.sqrt(n-r*r)}}(),intersectSphere:function(){var t=Be.create();return function(e,r,n){var i=this.origin._array,a=this.direction._array;e=e._array,Be.sub(t,e,i);var o=Be.dot(t,a),s=Be.squaredLength(t),u=s-o*o,l=r*r;if(!(u>l)){var h=Math.sqrt(l-u),c=o-h,f=o+h;return n||(n=new ie),c<0?f<0?null:(Be.scaleAndAdd(n._array,i,a,f),n):(Be.scaleAndAdd(n._array,i,a,c),n)}}}(),intersectBoundingBox:function(t,e){var r,n,i,a,o,s,u=this.direction._array,l=this.origin._array,h=t.min._array,c=t.max._array,f=1/u[0],d=1/u[1],_=1/u[2];if(f>=0?(r=(h[0]-l[0])*f,n=(c[0]-l[0])*f):(n=(h[0]-l[0])*f,r=(c[0]-l[0])*f),d>=0?(i=(h[1]-l[1])*d,a=(c[1]-l[1])*d):(a=(h[1]-l[1])*d,i=(c[1]-l[1])*d),r>a||i>n)return null;if((i>r||r!==r)&&(r=i),(a<n||n!==n)&&(n=a),_>=0?(o=(h[2]-l[2])*_,s=(c[2]-l[2])*_):(s=(h[2]-l[2])*_,o=(c[2]-l[2])*_),r>s||o>n)return null;if((o>r||r!==r)&&(r=o),(s<n||n!==n)&&(n=s),n<0)return null;var m=r>=0?r:n;return e||(e=new ie),Be.scaleAndAdd(e._array,l,u,m),e},intersectTriangle:function(){var t=Be.create(),e=Be.create(),r=Be.create(),n=Be.create();return function(i,a,o,s,u,l){var h=this.direction._array,c=this.origin._array;i=i._array,a=a._array,o=o._array,Be.sub(t,a,i),Be.sub(e,o,i),Be.cross(n,e,h);var f=Be.dot(t,n);if(s){if(f>-1e-5)return null}else if(f>-1e-5&&f<1e-5)return null;Be.sub(r,c,i);var d=Be.dot(n,r)/f;if(d<0||d>1)return null;Be.cross(n,t,r);var _=Be.dot(h,n)/f;if(_<0||_>1||d+_>1)return null;Be.cross(n,t,e);var m=-Be.dot(r,n)/f;return m<0?null:(u||(u=new ie),l&&ie.set(l,1-d-_,d,_),Be.scaleAndAdd(u._array,c,h,m),u)}}(),applyTransform:function(t){ie.add(this.direction,this.direction,this.origin),ie.transformMat4(this.origin,this.origin,t),ie.transformMat4(this.direction,this.direction,t),ie.sub(this.direction,this.direction,this.origin),ie.normalize(this.direction,this.direction)},copy:function(t){ie.copy(this.origin,t.origin),ie.copy(this.direction,t.direction)},clone:function(){var t=new He;return t.copy(this),t}};var Ge=Bt.vec3,We=Bt.vec4,Ve=Me.extend(function(){return{projectionMatrix:new ge,invProjectionMatrix:new ge,viewMatrix:new ge,frustum:new Fe}},function(){this.update(!0)},{update:function(t){Me.prototype.update.call(this,t),ge.invert(this.viewMatrix,this.worldTransform),this.updateProjectionMatrix(),ge.invert(this.invProjectionMatrix,this.projectionMatrix),this.frustum.setFromProjection(this.projectionMatrix)},setViewMatrix:function(t){ge.copy(this.viewMatrix,t),ge.invert(this.worldTransform,t),this.decomposeWorldTransform()},decomposeProjectionMatrix:function(){},setProjectionMatrix:function(t){ge.copy(this.projectionMatrix,t),ge.invert(this.invProjectionMatrix,t),this.decomposeProjectionMatrix()},updateProjectionMatrix:function(){},castRay:function(){var t=We.create();return function(e,r){var n=void 0!==r?r:new He,i=e._array[0],a=e._array[1];return We.set(t,i,a,-1,1),We.transformMat4(t,t,this.invProjectionMatrix._array),We.transformMat4(t,t,this.worldTransform._array),Ge.scale(n.origin._array,t,1/t[3]),We.set(t,i,a,1,1),We.transformMat4(t,t,this.invProjectionMatrix._array),We.transformMat4(t,t,this.worldTransform._array),Ge.scale(t,t,1/t[3]),Ge.sub(n.direction._array,t,n.origin._array),Ge.normalize(n.direction._array,n.direction._array),n.direction._dirty=!0,n.origin._dirty=!0,n}}()}),qe=Ve.extend({left:-1,right:1,near:-1,far:1,top:1,bottom:-1},{updateProjectionMatrix:function(){this.projectionMatrix.ortho(this.left,this.right,this.bottom,this.top,this.near,this.far)},decomposeProjectionMatrix:function(){var t=this.projectionMatrix._array;this.left=(-1-t[12])/t[0],this.right=(1-t[12])/t[0],this.top=(1-t[13])/t[5],this.bottom=(-1-t[13])/t[5],this.near=-(-1-t[14])/t[10],this.far=-(1-t[14])/t[10]},clone:function(){var t=Ve.prototype.clone.call(this);return t.left=this.left,t.right=this.right,t.near=this.near,t.far=this.far,t.top=this.top,t.bottom=this.bottom,t}}),ze=Ve.extend({fov:50,aspect:1,near:.1,far:2e3},{updateProjectionMatrix:function(){var t=this.fov/180*Math.PI;this.projectionMatrix.perspective(t,this.aspect,this.near,this.far)},decomposeProjectionMatrix:function(){var t=this.projectionMatrix._array,e=2*Math.atan(1/t[5]);this.fov=e/Math.PI*180,this.aspect=t[5]/t[0],this.near=t[14]/(t[10]-1),this.far=t[14]/(t[10]+1)},clone:function(){var t=Ve.prototype.clone.call(this);return t.fov=this.fov,t.aspect=this.aspect,t.near=this.near,t.far=this.far,t}}),Xe=Rt.extend({color:[1,1,1,1],opacity:1,pointSize:0,pointShape:"rectangle"}),je={DEPTH_BUFFER_BIT:256,STENCIL_BUFFER_BIT:1024,COLOR_BUFFER_BIT:16384,POINTS:0,LINES:1,LINE_LOOP:2,LINE_STRIP:3,TRIANGLES:4,TRIANGLE_STRIP:5,TRIANGLE_FAN:6,ZERO:0,ONE:1,SRC_COLOR:768,ONE_MINUS_SRC_COLOR:769,SRC_ALPHA:770,ONE_MINUS_SRC_ALPHA:771,DST_ALPHA:772,ONE_MINUS_DST_ALPHA:773,DST_COLOR:774,ONE_MINUS_DST_COLOR:775,SRC_ALPHA_SATURATE:776,FUNC_ADD:32774,BLEND_EQUATION:32777,BLEND_EQUATION_RGB:32777,BLEND_EQUATION_ALPHA:34877,FUNC_SUBTRACT:32778,FUNC_REVERSE_SUBTRACT:32779,BLEND_DST_RGB:32968,BLEND_SRC_RGB:32969,BLEND_DST_ALPHA:32970,BLEND_SRC_ALPHA:32971,CONSTANT_COLOR:32769,ONE_MINUS_CONSTANT_COLOR:32770,CONSTANT_ALPHA:32771,ONE_MINUS_CONSTANT_ALPHA:32772,BLEND_COLOR:32773,ARRAY_BUFFER:34962,ELEMENT_ARRAY_BUFFER:34963,ARRAY_BUFFER_BINDING:34964,ELEMENT_ARRAY_BUFFER_BINDING:34965,STREAM_DRAW:35040,STATIC_DRAW:35044,DYNAMIC_DRAW:35048,BUFFER_SIZE:34660,BUFFER_USAGE:34661,CURRENT_VERTEX_ATTRIB:34342,FRONT:1028,BACK:1029,FRONT_AND_BACK:1032,CULL_FACE:2884,BLEND:3042,DITHER:3024,STENCIL_TEST:2960,DEPTH_TEST:2929,SCISSOR_TEST:3089,POLYGON_OFFSET_FILL:32823,SAMPLE_ALPHA_TO_COVERAGE:32926,SAMPLE_COVERAGE:32928,NO_ERROR:0,INVALID_ENUM:1280,INVALID_VALUE:1281,INVALID_OPERATION:1282,OUT_OF_MEMORY:1285,CW:2304,CCW:2305,LINE_WIDTH:2849,ALIASED_POINT_SIZE_RANGE:33901,ALIASED_LINE_WIDTH_RANGE:33902,CULL_FACE_MODE:2885,FRONT_FACE:2886,DEPTH_RANGE:2928,DEPTH_WRITEMASK:2930,DEPTH_CLEAR_VALUE:2931,DEPTH_FUNC:2932,STENCIL_CLEAR_VALUE:2961,STENCIL_FUNC:2962,STENCIL_FAIL:2964,STENCIL_PASS_DEPTH_FAIL:2965,STENCIL_PASS_DEPTH_PASS:2966,STENCIL_REF:2967,STENCIL_VALUE_MASK:2963,STENCIL_WRITEMASK:2968,STENCIL_BACK_FUNC:34816,STENCIL_BACK_FAIL:34817,STENCIL_BACK_PASS_DEPTH_FAIL:34818,STENCIL_BACK_PASS_DEPTH_PASS:34819,STENCIL_BACK_REF:36003,STENCIL_BACK_VALUE_MASK:36004,STENCIL_BACK_WRITEMASK:36005,VIEWPORT:2978,SCISSOR_BOX:3088,COLOR_CLEAR_VALUE:3106,COLOR_WRITEMASK:3107,UNPACK_ALIGNMENT:3317,PACK_ALIGNMENT:3333,MAX_TEXTURE_SIZE:3379,MAX_VIEWPORT_DIMS:3386,SUBPIXEL_BITS:3408,RED_BITS:3410,GREEN_BITS:3411,BLUE_BITS:3412,ALPHA_BITS:3413,DEPTH_BITS:3414,STENCIL_BITS:3415,POLYGON_OFFSET_UNITS:10752,POLYGON_OFFSET_FACTOR:32824,TEXTURE_BINDING_2D:32873,SAMPLE_BUFFERS:32936,SAMPLES:32937,SAMPLE_COVERAGE_VALUE:32938,SAMPLE_COVERAGE_INVERT:32939,COMPRESSED_TEXTURE_FORMATS:34467,DONT_CARE:4352,FASTEST:4353,NICEST:4354,GENERATE_MIPMAP_HINT:33170,BYTE:5120,UNSIGNED_BYTE:5121,SHORT:5122,UNSIGNED_SHORT:5123,INT:5124,UNSIGNED_INT:5125,FLOAT:5126,DEPTH_COMPONENT:6402,ALPHA:6406,RGB:6407,RGBA:6408,LUMINANCE:6409,LUMINANCE_ALPHA:6410,UNSIGNED_SHORT_4_4_4_4:32819,UNSIGNED_SHORT_5_5_5_1:32820,UNSIGNED_SHORT_5_6_5:33635,FRAGMENT_SHADER:35632,VERTEX_SHADER:35633,MAX_VERTEX_ATTRIBS:34921,MAX_VERTEX_UNIFORM_VECTORS:36347,MAX_VARYING_VECTORS:36348,MAX_COMBINED_TEXTURE_IMAGE_UNITS:35661,MAX_VERTEX_TEXTURE_IMAGE_UNITS:35660,MAX_TEXTURE_IMAGE_UNITS:34930,MAX_FRAGMENT_UNIFORM_VECTORS:36349,SHADER_TYPE:35663,DELETE_STATUS:35712,LINK_STATUS:35714,VALIDATE_STATUS:35715,ATTACHED_SHADERS:35717,ACTIVE_UNIFORMS:35718,ACTIVE_ATTRIBUTES:35721,SHADING_LANGUAGE_VERSION:35724,CURRENT_PROGRAM:35725,NEVER:512,LESS:513,EQUAL:514,LEQUAL:515,GREATER:516,NOTEQUAL:517,GEQUAL:518,ALWAYS:519,KEEP:7680,REPLACE:7681,INCR:7682,DECR:7683,INVERT:5386,INCR_WRAP:34055,DECR_WRAP:34056,VENDOR:7936,RENDERER:7937,VERSION:7938,NEAREST:9728,LINEAR:9729,NEAREST_MIPMAP_NEAREST:9984,LINEAR_MIPMAP_NEAREST:9985,NEAREST_MIPMAP_LINEAR:9986,LINEAR_MIPMAP_LINEAR:9987,TEXTURE_MAG_FILTER:10240,TEXTURE_MIN_FILTER:10241,TEXTURE_WRAP_S:10242,TEXTURE_WRAP_T:10243,TEXTURE_2D:3553,TEXTURE:5890,TEXTURE_CUBE_MAP:34067,TEXTURE_BINDING_CUBE_MAP:34068,TEXTURE_CUBE_MAP_POSITIVE_X:34069,TEXTURE_CUBE_MAP_NEGATIVE_X:34070,TEXTURE_CUBE_MAP_POSITIVE_Y:34071,TEXTURE_CUBE_MAP_NEGATIVE_Y:34072,TEXTURE_CUBE_MAP_POSITIVE_Z:34073,TEXTURE_CUBE_MAP_NEGATIVE_Z:34074,MAX_CUBE_MAP_TEXTURE_SIZE:34076,TEXTURE0:33984,TEXTURE1:33985,TEXTURE2:33986,TEXTURE3:33987,TEXTURE4:33988,TEXTURE5:33989,TEXTURE6:33990,TEXTURE7:33991,TEXTURE8:33992,TEXTURE9:33993,TEXTURE10:33994,TEXTURE11:33995,TEXTURE12:33996,TEXTURE13:33997,TEXTURE14:33998,TEXTURE15:33999,TEXTURE16:34e3,TEXTURE17:34001,TEXTURE18:34002,TEXTURE19:34003,TEXTURE20:34004,TEXTURE21:34005,TEXTURE22:34006,TEXTURE23:34007,TEXTURE24:34008,TEXTURE25:34009,TEXTURE26:34010,TEXTURE27:34011,TEXTURE28:34012,TEXTURE29:34013,TEXTURE30:34014,TEXTURE31:34015,ACTIVE_TEXTURE:34016,REPEAT:10497,CLAMP_TO_EDGE:33071,MIRRORED_REPEAT:33648,FLOAT_VEC2:35664,FLOAT_VEC3:35665,FLOAT_VEC4:35666,INT_VEC2:35667,INT_VEC3:35668,INT_VEC4:35669,BOOL:35670,BOOL_VEC2:35671,BOOL_VEC3:35672,BOOL_VEC4:35673,FLOAT_MAT2:35674,FLOAT_MAT3:35675,FLOAT_MAT4:35676,SAMPLER_2D:35678,SAMPLER_CUBE:35680,VERTEX_ATTRIB_ARRAY_ENABLED:34338,VERTEX_ATTRIB_ARRAY_SIZE:34339,VERTEX_ATTRIB_ARRAY_STRIDE:34340,VERTEX_ATTRIB_ARRAY_TYPE:34341,VERTEX_ATTRIB_ARRAY_NORMALIZED:34922,VERTEX_ATTRIB_ARRAY_POINTER:34373,VERTEX_ATTRIB_ARRAY_BUFFER_BINDING:34975,COMPILE_STATUS:35713,LOW_FLOAT:36336,MEDIUM_FLOAT:36337,HIGH_FLOAT:36338,LOW_INT:36339,MEDIUM_INT:36340,HIGH_INT:36341,FRAMEBUFFER:36160,RENDERBUFFER:36161,RGBA4:32854,RGB5_A1:32855,RGB565:36194,DEPTH_COMPONENT16:33189,STENCIL_INDEX:6401,STENCIL_INDEX8:36168,DEPTH_STENCIL:34041,RENDERBUFFER_WIDTH:36162,RENDERBUFFER_HEIGHT:36163,RENDERBUFFER_INTERNAL_FORMAT:36164,RENDERBUFFER_RED_SIZE:36176,RENDERBUFFER_GREEN_SIZE:36177,RENDERBUFFER_BLUE_SIZE:36178,RENDERBUFFER_ALPHA_SIZE:36179,RENDERBUFFER_DEPTH_SIZE:36180,RENDERBUFFER_STENCIL_SIZE:36181,FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE:36048,FRAMEBUFFER_ATTACHMENT_OBJECT_NAME:36049,FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL:36050,FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE:36051,COLOR_ATTACHMENT0:36064,DEPTH_ATTACHMENT:36096,STENCIL_ATTACHMENT:36128,DEPTH_STENCIL_ATTACHMENT:33306,NONE:0,FRAMEBUFFER_COMPLETE:36053,FRAMEBUFFER_INCOMPLETE_ATTACHMENT:36054,FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:36055,FRAMEBUFFER_INCOMPLETE_DIMENSIONS:36057,FRAMEBUFFER_UNSUPPORTED:36061,FRAMEBUFFER_BINDING:36006,RENDERBUFFER_BINDING:36007,MAX_RENDERBUFFER_SIZE:34024,INVALID_FRAMEBUFFER_OPERATION:1286,UNPACK_FLIP_Y_WEBGL:37440,UNPACK_PREMULTIPLY_ALPHA_WEBGL:37441,CONTEXT_LOST_WEBGL:37442,UNPACK_COLORSPACE_CONVERSION_WEBGL:37443,BROWSER_DEFAULT_WEBGL:37444},Ye=Bt.mat4,Ke=Bt.vec3,Qe=Bt.vec4,Ze=Qe.create,Je=Math.round;M.prototype={pick:function(){var t=this._data,e=this._size,r=t[e];return r||(r=new this.ctor,t[e]=r),this._size++,r},reset:function(){this._size=0},shrink:function(){this._data.length=this._size},clear:function(){this._data=[],this._size=0}},w.prototype.type=1,R.prototype.type=3,C.prototype.type=2;var $e=Rt.extend({canvas:null,_width:100,_height:100,devicePixelRatio:window.devicePixelRatio||1,color:[0,0,0,0],clear:!0,ctx:null,_primitives:[],_triangles:new M(w),_lines:new M(C),_points:new M(R)},function(){this.canvas||(this.canvas=document.createElement("canvas"));var t=this.canvas;try{this.ctx=t.getContext("2d");if(!this.ctx)throw new Error}catch(t){throw"Error creating WebGL Context "+t}this.resize()},{resize:function(t,e){var r=this.devicePixelRatio,n=this.canvas;null!=t?(n.style.width=t+"px",n.style.height=e+"px",n.width=t*r,n.height=e*r,this._width=t,this._height=e):(this._width=n.width/r,this._height=n.height/r)},getWidth:function(){return this._width},getHeight:function(){return this._height},getViewportAspect:function(){return this._width/this._height},render:function(t,e){if(this.clear){var r=this.color,n=this.ctx,i=this.devicePixelRatio,a=this._width*i,o=this._height*i;r&&0===r[3]?n.clearRect(0,0,a,o):(r[3]<1&&n.clearRect(0,0,a,o),n.fillStyle=4===r.length?D(r):P(r),n.fillRect(0,0,a,o))}t.update(),e.update();var s=t.opaqueQueue,u=t.transparentQueue,l=s.concat(u);this.renderQueue(l,e)},renderQueue:function(t,e){var r=Ye.create();Ye.multiply(r,e.projectionMatrix._array,e.viewMatrix._array);var n=Ye.create(),i=(Ke.create(),this._primitives),a=this._triangles,o=this._lines,s=this._points;a.reset(),o.reset(),s.reset();for(var u=0,l=[0,0,0],h=[],c=0;c<t.length;c++){var f=t[c];Ye.multiply(n,r,f.worldTransform._array);var d=f.geometry,_=f.material,m=d.attributes;3==_.color.length?(Ke.copy(h,_.color),h[3]=1):Qe.copy(h,_.color);var p=d.vertexCount;switch(f.mode){case je.TRIANGLES:if(d.isUseIndices())for(var v=d.triangleCount,g=0;g<v;g++){d.getFace(g,l);var y=a.pick();y.material=_;var x=this._setPrimitive(y,l,3,m,n,h);x||(i[u++]=y)}else for(var g=0;g<p;){l[0]=g++,l[1]=g++,l[2]=g++;var y=a.pick();y.material=_;var x=this._setPrimitive(y,l,3,m,n,h);x||(i[u++]=y)}break;case je.LINES:for(var g=0;g<p;){l[0]=g++,l[1]=g++;var T=o.pick();T.material=_,T.lineWidth=f.lineWidth;var x=this._setPrimitive(T,l,2,m,n,h);x||(i[u++]=T)}break;case je.POINTS:for(var g=0;g<p;g++){l[0]=g;var E=s.pick();E.material=_;var x=this._setPrimitive(E,l,1,m,n,h);x||(i[u++]=E)}}}a.shrink(),o.shrink(),s.shrink(),i.length=u,i.sort(L),this._drawPrimitives(i)},_setPrimitive:function(){var t=Ze();return function(e,r,n,i,a,o){var s=i.color,u=s.value&&s.value.length>0,l=e.color;e.depth=0,u&&Qe.set(l,0,0,0,0);for(var h=!0,c=1/n,f=0;f<n;f++){var d=e.vertices[f];i.position.get(r[f],d),d[3]=1,Qe.transformMat4(d,d,a),u&&(s.get(r[f],t),Qe.scaleAndAdd(l,l,t,c));var _=d[0],m=d[1],p=d[2],v=d[3];_>-v&&_<v&&m>-v&&m<v&&p>-v&&p<v&&(h=!1);var g=1/v;d[0]=_*g,d[1]=m*g,d[2]=p*g,e.depth+=d[2]}return h||(e.depth/=n,u?Qe.mul(l,l,o):Qe.copy(l,o)),h}}(),_drawPrimitives:function(t){var e=this.ctx;e.save();for(var r,n,i,a=this.devicePixelRatio,o=this._width*a,s=this._height*a,u=o/2,l=s/2,h=0;h<t.length;h++){var c=t[h],f=c.vertices,d=c.type,_=c.material;_!==r&&(e.globalAlpha=_.opacity,r=_);var m=D(c.color);switch(d){case 1:var p=f[0],v=f[1],g=f[2];e.fillStyle=m,e.beginPath(),e.moveTo((p[0]+1)*u,(1-p[1])*l),e.lineTo((v[0]+1)*u,(1-v[1])*l),e.lineTo((g[0]+1)*u,(1-g[1])*l),e.closePath(),e.fill();break;case 2:var p=f[0],v=f[1],y=c.lineWidth;i!==m&&(i=e.strokeStyle=m),y!==n&&(e.lineWidth=n=y),e.beginPath(),e.moveTo((p[0]+1)*u,(1-p[1])*l),e.lineTo((v[0]+1)*u,(1-v[1])*l),e.stroke();break;case 3:var x=_.pointSize,T=_.pointShape,E=x/2;if(x>0){var p=f[0],b=(p[0]+1)*u,S=(1-p[1])*l;e.fillStyle=m,"rectangle"===T?e.fillRect(b-E,S-E,x,x):"circle"===T&&(e.beginPath(),e.arc(b,S,E,0,2*Math.PI),e.fill())}}}e.restore()},dispose:function(){this._triangles.clear(),this._lines.clear(),this._points.clear(),this._primitives=[],this.ctx=null,this.canvas=null}}),tr=Rt.extend(function(){return{name:"",inputLinks:{},outputLinks:{},_prevOutputTextures:{},_outputTextures:{},_outputReferences:{},_rendering:!1,_rendered:!1,_compositor:null}},{updateParameter:function(t,e){var r=this.outputs[t],n=r.parameters,i=r._parametersCopy;if(i||(i=r._parametersCopy={}),n)for(var a in n)"width"!==a&&"height"!==a&&(i[a]=n[a]);var o,s;return o=n.width instanceof Function?n.width.call(this,e):n.width,s=n.height instanceof Function?n.height.call(this,e):n.height,i.width===o&&i.height===s||this._outputTextures[t]&&this._outputTextures[t].dispose(e.gl),i.width=o,i.height=s,i},setParameter:function(t,e){},getParameter:function(t){},setParameters:function(t){for(var e in t)this.setParameter(e,t[e])},render:function(){},getOutput:function(t,e){if(null==e)return e=t,this._outputTextures[e];var r=this.outputs[e];if(r)return this._rendered?r.outputLastFrame?this._prevOutputTextures[e]:this._outputTextures[e]:this._rendering?(this._prevOutputTextures[e]||(this._prevOutputTextures[e]=this._compositor.allocateTexture(r.parameters||{})),this._prevOutputTextures[e]):(this.render(t),this._outputTextures[e])},removeReference:function(t){if(0===--this._outputReferences[t]){this.outputs[t].keepLastFrame?(this._prevOutputTextures[t]&&this._compositor.releaseTexture(this._prevOutputTextures[t]),this._prevOutputTextures[t]=this._outputTextures[t]):this._compositor.releaseTexture(this._outputTextures[t])}},link:function(t,e,r){this.inputLinks[t]={node:e,pin:r},e.outputLinks[r]||(e.outputLinks[r]=[]),e.outputLinks[r].push({node:this,pin:t}),this.pass.material.shader.enableTexture(t)},clear:function(){this.inputLinks={},this.outputLinks={}},updateReference:function(t){if(!this._rendering){this._rendering=!0;for(var e in this.inputLinks){var r=this.inputLinks[e];r.node.updateReference(r.pin)}this._rendering=!1}t&&this._outputReferences[t]++},beforeFrame:function(){this._rendered=!1;for(var t in this.outputLinks)this._outputReferences[t]=0},afterFrame:function(){for(var t in this.outputLinks)if(this._outputReferences[t]>0){var e=this.outputs[t];e.keepLastFrame?(this._prevOutputTextures[t]&&this._compositor.releaseTexture(this._prevOutputTextures[t]),this._prevOutputTextures[t]=this._outputTextures[t]):this._compositor.releaseTexture(this._outputTextures[t])}}}),er=Rt.extend(function(){return{nodes:[]}},{dirty:function(){this._dirty=!0},addNode:function(t){this.nodes.indexOf(t)>=0||(this.nodes.push(t),this._dirty=!0)},removeNode:function(t){"string"==typeof t&&(t=this.getNodeByName(t));var e=this.nodes.indexOf(t);e>=0&&(this.nodes.splice(e,1),this._dirty=!0)},getNodeByName:function(t){for(var e=0;e<this.nodes.length;e++)if(this.nodes[e].name===t)return this.nodes[e]},update:function(){for(var t=0;t<this.nodes.length;t++)this.nodes[t].clear();for(var t=0;t<this.nodes.length;t++){var e=this.nodes[t];if(e.inputs)for(var r in e.inputs)if(e.inputs[r])if(!e.pass||e.pass.material.isUniformEnabled(r)){var n=e.inputs[r],i=this.findPin(n);i?e.link(r,i.node,i.pin):"string"==typeof n?console.warn("Node "+n+" not exist"):console.warn("Pin of "+n.node+"."+n.pin+" not exist")}else console.warn("Pin "+e.name+"."+r+" not used.")}},findPin:function(t){var e;if(("string"==typeof t||t instanceof tr)&&(t={node:t}),"string"==typeof t.node)for(var r=0;r<this.nodes.length;r++){var n=this.nodes[r];n.name===t.node&&(e=n)}else e=t.node;if(e){var i=t.pin;if(i||e.outputs&&(i=Object.keys(e.outputs)[0]),e.outputs[i])return{node:e,pin:i}}}}),rr=function(){this._contextId=0,this._caches=[],this._context={}};rr.prototype={use:function(t,e){var r=this._caches;r[t]||(r[t]={},e&&(r[t]=e())),this._contextId=t,this._context=r[t]},put:function(t,e){this._context[t]=e},get:function(t){return this._context[t]},dirty:function(t){t=t||"";var e="__dt__"+t;this.put(e,!0)},dirtyAll:function(t){t=t||"";for(var e="__dt__"+t,r=this._caches,n=0;n<r.length;n++)r[n]&&(r[n][e]=!0)},fresh:function(t){t=t||"";var e="__dt__"+t;this.put(e,!1)},freshAll:function(t){t=t||"";for(var e="__dt__"+t,r=this._caches,n=0;n<r.length;n++)r[n]&&(r[n][e]=!1)},isDirty:function(t){t=t||"";var e="__dt__"+t,r=this._context;return!r.hasOwnProperty(e)||!0===r[e]},deleteContext:function(t){delete this._caches[t],this._context={}},delete:function(t){delete this._context[t]},clearAll:function(){this._caches={}},getContext:function(){return this._context},eachContext:function(t,e){Object.keys(this._caches).forEach(function(r){t&&t.call(e,r)})},miss:function(t){return!this._context.hasOwnProperty(t)}},rr.prototype.constructor=rr;var nr=Rt.extend({width:512,height:512,type:je.UNSIGNED_BYTE,format:je.RGBA,wrapS:je.REPEAT,wrapT:je.REPEAT,minFilter:je.LINEAR_MIPMAP_LINEAR,magFilter:je.LINEAR,useMipmap:!0,anisotropic:1,flipY:!0,unpackAlignment:4,premultiplyAlpha:!1,dynamic:!1,NPOT:!1},function(){this._cache=new rr},{getWebGLTexture:function(t){var e=t.gl,r=this._cache;return r.use(t.__GUID__),r.miss("webgl_texture")&&r.put("webgl_texture",e.createTexture()),this.dynamic?this.update(t):r.isDirty()&&(this.update(t),r.fresh()),r.get("webgl_texture")},bind:function(){},unbind:function(){},dirty:function(){this._cache&&this._cache.dirtyAll()},update:function(t){},updateCommon:function(t){var e=t.gl;e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL,this.flipY),e.pixelStorei(e.UNPACK_PREMULTIPLY_ALPHA_WEBGL,this.premultiplyAlpha),e.pixelStorei(e.UNPACK_ALIGNMENT,this.unpackAlignment),this.format===je.DEPTH_COMPONENT&&(this.useMipmap=!1);var r=t.getGLExtension("EXT_sRGB");this.format!==nr.SRGB||r||(this.format=nr.RGB),this.format!==nr.SRGB_ALPHA||r||(this.format=nr.RGBA),this.NPOT=!this.isPowerOfTwo()},getAvailableWrapS:function(){return this.NPOT?je.CLAMP_TO_EDGE:this.wrapS},getAvailableWrapT:function(){return this.NPOT?je.CLAMP_TO_EDGE:this.wrapT},getAvailableMinFilter:function(){var t=this.minFilter;return this.NPOT||!this.useMipmap?t==je.NEAREST_MIPMAP_NEAREST||t==je.NEAREST_MIPMAP_LINEAR?je.NEAREST:t==je.LINEAR_MIPMAP_LINEAR||t==je.LINEAR_MIPMAP_NEAREST?je.LINEAR:t:t},getAvailableMagFilter:function(){return this.magFilter},nextHighestPowerOfTwo:function(t){--t;for(var e=1;e<32;e<<=1)t|=t>>e;return t+1},dispose:function(t){var e=this._cache;e.use(t.__GUID__);var r=e.get("webgl_texture");r&&t.gl.deleteTexture(r),e.deleteContext(t.__GUID__)},isRenderable:function(){},
isPowerOfTwo:function(){}});Object.defineProperty(nr.prototype,"width",{get:function(){return this._width},set:function(t){this._width=t}}),Object.defineProperty(nr.prototype,"height",{get:function(){return this._height},set:function(t){this._height=t}}),nr.BYTE=je.BYTE,nr.UNSIGNED_BYTE=je.UNSIGNED_BYTE,nr.SHORT=je.SHORT,nr.UNSIGNED_SHORT=je.UNSIGNED_SHORT,nr.INT=je.INT,nr.UNSIGNED_INT=je.UNSIGNED_INT,nr.FLOAT=je.FLOAT,nr.HALF_FLOAT=36193,nr.UNSIGNED_INT_24_8_WEBGL=34042,nr.DEPTH_COMPONENT=je.DEPTH_COMPONENT,nr.DEPTH_STENCIL=je.DEPTH_STENCIL,nr.ALPHA=je.ALPHA,nr.RGB=je.RGB,nr.RGBA=je.RGBA,nr.LUMINANCE=je.LUMINANCE,nr.LUMINANCE_ALPHA=je.LUMINANCE_ALPHA,nr.SRGB=35904,nr.SRGB_ALPHA=35906,nr.COMPRESSED_RGB_S3TC_DXT1_EXT=33776,nr.COMPRESSED_RGBA_S3TC_DXT1_EXT=33777,nr.COMPRESSED_RGBA_S3TC_DXT3_EXT=33778,nr.COMPRESSED_RGBA_S3TC_DXT5_EXT=33779,nr.NEAREST=je.NEAREST,nr.LINEAR=je.LINEAR,nr.NEAREST_MIPMAP_NEAREST=je.NEAREST_MIPMAP_NEAREST,nr.LINEAR_MIPMAP_NEAREST=je.LINEAR_MIPMAP_NEAREST,nr.NEAREST_MIPMAP_LINEAR=je.NEAREST_MIPMAP_LINEAR,nr.LINEAR_MIPMAP_LINEAR=je.LINEAR_MIPMAP_LINEAR,nr.REPEAT=je.REPEAT,nr.CLAMP_TO_EDGE=je.CLAMP_TO_EDGE,nr.MIRRORED_REPEAT=je.MIRRORED_REPEAT;var ir={};ir.isPowerOfTwo=function(t){return 0==(t&t-1)},ir.nextPowerOfTwo=function(t){return t--,t|=t>>1,t|=t>>2,t|=t>>4,t|=t>>8,t|=t>>16,++t},ir.nearestPowerOfTwo=function(t){return Math.pow(2,Math.round(Math.log(t)/Math.LN2))};var ar=ir.isPowerOfTwo,or=nr.extend(function(){return{image:null,pixels:null,mipmaps:[]}},{update:function(t){var e=t.gl;e.bindTexture(e.TEXTURE_2D,this._cache.get("webgl_texture")),this.updateCommon(t);var r=this.format,n=this.type;e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,this.getAvailableWrapS()),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,this.getAvailableWrapT()),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,this.getAvailableMagFilter()),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,this.getAvailableMinFilter());var i=t.getGLExtension("EXT_texture_filter_anisotropic");if(i&&this.anisotropic>1&&e.texParameterf(e.TEXTURE_2D,i.TEXTURE_MAX_ANISOTROPY_EXT,this.anisotropic),36193===n){t.getGLExtension("OES_texture_half_float")||(n=je.FLOAT)}if(this.mipmaps.length)for(var a=this.width,o=this.height,s=0;s<this.mipmaps.length;s++){var u=this.mipmaps[s];this._updateTextureData(e,u,s,a,o,r,n),a/=2,o/=2}else this._updateTextureData(e,this,0,this.width,this.height,r,n),this.useMipmap&&!this.NPOT&&e.generateMipmap(e.TEXTURE_2D);e.bindTexture(e.TEXTURE_2D,null)},_updateTextureData:function(t,e,r,n,i,a,o){e.image?t.texImage2D(t.TEXTURE_2D,r,a,a,o,e.image):a<=nr.COMPRESSED_RGBA_S3TC_DXT5_EXT&&a>=nr.COMPRESSED_RGB_S3TC_DXT1_EXT?t.compressedTexImage2D(t.TEXTURE_2D,r,a,n,i,0,e.pixels):t.texImage2D(t.TEXTURE_2D,r,a,n,i,0,a,o,e.pixels)},generateMipmap:function(t){var e=t.gl;this.useMipmap&&!this.NPOT&&(e.bindTexture(e.TEXTURE_2D,this._cache.get("webgl_texture")),e.generateMipmap(e.TEXTURE_2D))},isPowerOfTwo:function(){var t,e;return this.image?(t=this.image.width,e=this.image.height):(t=this.width,e=this.height),ar(t)&&ar(e)},isRenderable:function(){return this.image?"CANVAS"===this.image.nodeName||"VIDEO"===this.image.nodeName||this.image.complete:!(!this.width||!this.height)},bind:function(t){t.gl.bindTexture(t.gl.TEXTURE_2D,this.getWebGLTexture(t))},unbind:function(t){t.gl.bindTexture(t.gl.TEXTURE_2D,null)},load:function(t,e){var r=new Image;e&&(r.crossOrigin=e);var n=this;return r.onload=function(){n.dirty(),n.trigger("success",n),r.onload=null},r.onerror=function(){n.trigger("error",n),r.onerror=null},r.src=t,this.image=r,this}});Object.defineProperty(or.prototype,"width",{get:function(){return this.image?this.image.width:this._width},set:function(t){this.image?console.warn("Texture from image can't set width"):(this._width!==t&&this.dirty(),this._width=t)}}),Object.defineProperty(or.prototype,"height",{get:function(){return this.image?this.image.height:this._height},set:function(t){this.image?console.warn("Texture from image can't set height"):(this._height!==t&&this.dirty(),this._height=t)}});var sr=function(){this._pool={},this._allocatedTextures=[]};sr.prototype={constructor:sr,get:function(t){var e=I(t);this._pool.hasOwnProperty(e)||(this._pool[e]=[]);var r=this._pool[e];if(!r.length){var n=new or(t);return this._allocatedTextures.push(n),n}return r.pop()},put:function(t){var e=I(t);this._pool.hasOwnProperty(e)||(this._pool[e]=[]),this._pool[e].push(t)},clear:function(t){for(var e=0;e<this._allocatedTextures.length;e++)this._allocatedTextures[e].dispose(t);this._pool={},this._allocatedTextures=[]}};var ur={width:512,height:512,type:je.UNSIGNED_BYTE,format:je.RGBA,wrapS:je.CLAMP_TO_EDGE,wrapT:je.CLAMP_TO_EDGE,minFilter:je.LINEAR_MIPMAP_LINEAR,magFilter:je.LINEAR,useMipmap:!0,anisotropic:1,flipY:!0,unpackAlignment:4,premultiplyAlpha:!1},lr=Object.keys(ur),hr=ir.isPowerOfTwo,cr=["px","nx","py","ny","pz","nz"],fr=nr.extend(function(){return{image:{px:null,nx:null,py:null,ny:null,pz:null,nz:null},pixels:{px:null,nx:null,py:null,ny:null,pz:null,nz:null},mipmaps:[]}},{update:function(t){var e=t.gl;e.bindTexture(e.TEXTURE_CUBE_MAP,this._cache.get("webgl_texture")),this.updateCommon(t);var r=this.format,n=this.type;e.texParameteri(e.TEXTURE_CUBE_MAP,e.TEXTURE_WRAP_S,this.getAvailableWrapS()),e.texParameteri(e.TEXTURE_CUBE_MAP,e.TEXTURE_WRAP_T,this.getAvailableWrapT()),e.texParameteri(e.TEXTURE_CUBE_MAP,e.TEXTURE_MAG_FILTER,this.getAvailableMagFilter()),e.texParameteri(e.TEXTURE_CUBE_MAP,e.TEXTURE_MIN_FILTER,this.getAvailableMinFilter());var i=t.getGLExtension("EXT_texture_filter_anisotropic");if(i&&this.anisotropic>1&&e.texParameterf(e.TEXTURE_CUBE_MAP,i.TEXTURE_MAX_ANISOTROPY_EXT,this.anisotropic),36193===n){t.getGLExtension("OES_texture_half_float")||(n=je.FLOAT)}if(this.mipmaps.length)for(var a=this.width,o=this.height,s=0;s<this.mipmaps.length;s++){var u=this.mipmaps[s];this._updateTextureData(e,u,s,a,o,r,n),a/=2,o/=2}else this._updateTextureData(e,this,0,this.width,this.height,r,n),!this.NPOT&&this.useMipmap&&e.generateMipmap(e.TEXTURE_CUBE_MAP);e.bindTexture(e.TEXTURE_CUBE_MAP,null)},_updateTextureData:function(t,e,r,n,i,a,o){for(var s=0;s<6;s++){var u=cr[s],l=e.image&&e.image[u];l?t.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+s,r,a,a,o,l):t.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+s,r,a,n,i,0,a,o,e.pixels&&e.pixels[u])}},generateMipmap:function(t){var e=t.gl;this.useMipmap&&!this.NPOT&&(e.bindTexture(e.TEXTURE_CUBE_MAP,this._cache.get("webgl_texture")),e.generateMipmap(e.TEXTURE_CUBE_MAP))},bind:function(t){t.gl.bindTexture(t.gl.TEXTURE_CUBE_MAP,this.getWebGLTexture(t))},unbind:function(t){t.gl.bindTexture(t.gl.TEXTURE_CUBE_MAP,null)},isPowerOfTwo:function(){return this.image.px?hr(this.image.px.width)&&hr(this.image.px.height):hr(this.width)&&hr(this.height)},isRenderable:function(){return this.image.px?U(this.image.px)&&U(this.image.nx)&&U(this.image.py)&&U(this.image.ny)&&U(this.image.pz)&&U(this.image.nz):!(!this.width||!this.height)},load:function(t,e){var r=0,n=this;return wt.each(t,function(t,i){var a=new Image;e&&(a.crossOrigin=e),a.onload=function(){r--,0===r&&(n.dirty(),n.trigger("success",n)),a.onload=null},a.onerror=function(){r--,a.onerror=null},r++,a.src=t,n.image[i]=a}),this}});Object.defineProperty(fr.prototype,"width",{get:function(){return this.image&&this.image.px?this.image.px.width:this._width},set:function(t){this.image&&this.image.px?console.warn("Texture from image can't set width"):(this._width!==t&&this.dirty(),this._width=t)}}),Object.defineProperty(fr.prototype,"height",{get:function(){return this.image&&this.image.px?this.image.px.height:this._height},set:function(t){this.image&&this.image.px?console.warn("Texture from image can't set height"):(this._height!==t&&this.dirty(),this._height=t)}});var dr=je.FRAMEBUFFER,_r=je.RENDERBUFFER,mr=je.DEPTH_ATTACHMENT,pr=je.COLOR_ATTACHMENT0,vr=Rt.extend({depthBuffer:!0,viewport:null,_width:0,_height:0,_textures:null,_boundRenderer:null},function(){this._cache=new rr,this._textures={}},{getTextureWidth:function(){return this._width},getTextureHeight:function(){return this._height},bind:function(t){if(t.__currentFrameBuffer){if(t.__currentFrameBuffer===this)return;console.warn("Renderer already bound with another framebuffer. Unbind it first")}t.__currentFrameBuffer=this;var e=t.gl;e.bindFramebuffer(dr,this._getFrameBufferGL(t)),this._boundRenderer=t;var r=this._cache;r.put("viewport",t.viewport);var n,i,a=!1;for(var o in this._textures){a=!0;var s=this._textures[o];s&&(n=s.texture.width,i=s.texture.height,this._doAttach(t,s.texture,o,s.target))}this._width=n,this._height=i,!a&&this.depthBuffer&&console.error("Must attach texture before bind, or renderbuffer may have incorrect width and height."),this.viewport?t.setViewport(this.viewport):t.setViewport(0,0,n,i,1);var u=r.get("attached_textures");if(u)for(var o in u)if(!this._textures[o]){var l=u[o];this._doDetach(e,o,l)}if(!r.get("depthtexture_attached")&&this.depthBuffer){r.miss("renderbuffer")&&r.put("renderbuffer",e.createRenderbuffer());var h=r.get("renderbuffer");n===r.get("renderbuffer_width")&&i===r.get("renderbuffer_height")||(e.bindRenderbuffer(_r,h),e.renderbufferStorage(_r,e.DEPTH_COMPONENT16,n,i),r.put("renderbuffer_width",n),r.put("renderbuffer_height",i),e.bindRenderbuffer(_r,null)),r.get("renderbuffer_attached")||(e.framebufferRenderbuffer(dr,mr,_r,h),r.put("renderbuffer_attached",!0))}},unbind:function(t){t.__currentFrameBuffer=null,t.gl.bindFramebuffer(dr,null),this._boundRenderer=null,this._cache.use(t.__GUID__);var e=this._cache.get("viewport");e&&t.setViewport(e),this.updateMipmap(t)},updateMipmap:function(t){var e=t.gl;for(var r in this._textures){var n=this._textures[r];if(n){var i=n.texture;if(!i.NPOT&&i.useMipmap&&i.minFilter===nr.LINEAR_MIPMAP_LINEAR){var a=i instanceof fr?je.TEXTURE_CUBE_MAP:je.TEXTURE_2D;e.bindTexture(a,i.getWebGLTexture(t)),e.generateMipmap(a),e.bindTexture(a,null)}}}},checkStatus:function(t){return t.checkFramebufferStatus(dr)},_getFrameBufferGL:function(t){var e=this._cache;return e.use(t.__GUID__),e.miss("framebuffer")&&e.put("framebuffer",t.gl.createFramebuffer()),e.get("framebuffer")},attach:function(t,e,r){if(!t.width)throw new Error("The texture attached to color buffer is not a valid.");e=e||pr,r=r||je.TEXTURE_2D;var n,i=this._boundRenderer,a=i&&i.gl;if(a){var o=this._cache;o.use(i.__GUID__),n=o.get("attached_textures")}var s=this._textures[e];if(!s||s.target!==r||s.texture!==t||!n||null==n[e]){var u=!0;i&&(u=this._doAttach(i,t,e,r),this.viewport||i.setViewport(0,0,t.width,t.height,1)),u&&(this._textures[e]=this._textures[e]||{},this._textures[e].texture=t,this._textures[e].target=r)}},_doAttach:function(t,e,r,n){var i=t.gl,a=e.getWebGLTexture(t),o=this._cache.get("attached_textures");if(o&&o[r]){var s=o[r];if(s.texture===e&&s.target===n)return}r=+r;var u=!0;if(r===mr||r===je.DEPTH_STENCIL_ATTACHMENT){if(t.getGLExtension("WEBGL_depth_texture")||(console.error("Depth texture is not supported by the browser"),u=!1),e.format!==je.DEPTH_COMPONENT&&e.format!==je.DEPTH_STENCIL&&(console.error("The texture attached to depth buffer is not a valid."),u=!1),u){var l=this._cache.get("renderbuffer");l&&(i.framebufferRenderbuffer(dr,mr,_r,null),i.deleteRenderbuffer(l),this._cache.put("renderbuffer",!1)),this._cache.put("renderbuffer_attached",!1),this._cache.put("depthtexture_attached",!0)}}return i.framebufferTexture2D(dr,r,n,a,0),o||(o={},this._cache.put("attached_textures",o)),o[r]=o[r]||{},o[r].texture=e,o[r].target=n,u},_doDetach:function(t,e,r){t.framebufferTexture2D(dr,e,r,null,0);var n=this._cache.get("attached_textures");n&&n[e]&&(n[e]=null),e!==mr&&e!==je.DEPTH_STENCIL_ATTACHMENT||this._cache.put("depthtexture_attached",!1)},detach:function(t,e){if(this._textures[t]=null,this._boundRenderer){this._cache.use(this._boundRenderer.__GUID__),this._doDetach(this._boundRenderer.gl,t,e)}},dispose:function(t){var e=t.gl,r=this._cache;r.use(t.__GUID__);var n=r.get("renderbuffer");n&&e.deleteRenderbuffer(n);var i=r.get("framebuffer");i&&e.deleteFramebuffer(i),r.deleteContext(t.__GUID__),this._textures={}}});vr.DEPTH_ATTACHMENT=mr,vr.COLOR_ATTACHMENT0=pr,vr.STENCIL_ATTACHMENT=je.STENCIL_ATTACHMENT,vr.DEPTH_STENCIL_ATTACHMENT=je.DEPTH_STENCIL_ATTACHMENT;var gr=er.extend(function(){return{_outputs:[],_texturePool:new sr,_frameBuffer:new vr({depthBuffer:!1})}},{addNode:function(t){er.prototype.addNode.call(this,t),t._compositor=this},render:function(t,e){if(this._dirty){this.update(),this._dirty=!1,this._outputs.length=0;for(var r=0;r<this.nodes.length;r++)this.nodes[r].outputs||this._outputs.push(this.nodes[r])}for(var r=0;r<this.nodes.length;r++)this.nodes[r].beforeFrame();for(var r=0;r<this._outputs.length;r++)this._outputs[r].updateReference();for(var r=0;r<this._outputs.length;r++)this._outputs[r].render(t,e);for(var r=0;r<this.nodes.length;r++)this.nodes[r].afterFrame()},allocateTexture:function(t){return this._texturePool.get(t)},releaseTexture:function(t){this._texturePool.put(t)},getFrameBuffer:function(){return this._frameBuffer},dispose:function(t){this._texturePool.clear(t)}}),yr=!0;try{var xr=document.createElement("canvas");if(!(xr.getContext("webgl")||xr.getContext("experimental-webgl")))throw new Error}catch(t){yr=!1}var Tr={};Tr.supportWebGL=function(){return yr},Tr.Int8Array="undefined"==typeof Int8Array?Array:Int8Array,Tr.Uint8Array="undefined"==typeof Uint8Array?Array:Uint8Array,Tr.Uint16Array="undefined"==typeof Uint16Array?Array:Uint16Array,Tr.Uint32Array="undefined"==typeof Uint32Array?Array:Uint32Array,Tr.Int16Array="undefined"==typeof Int16Array?Array:Int16Array,Tr.Float32Array="undefined"==typeof Float32Array?Array:Float32Array,Tr.Float64Array="undefined"==typeof Float64Array?Array:Float64Array;var Er=Bt.vec3,br=Bt.mat4,Sr=Er.create,Ar=Er.add,Nr=Er.set;H.prototype.init=function(t){if(!this.value||this.value.length!=t*this.size){var e=F(this.type);this.value=new e(t*this.size)}},H.prototype.fromArray=function(t){var e,r=F(this.type);if(t[0]&&t[0].length){var n=0,i=this.size;e=new r(t.length*i);for(var a=0;a<t.length;a++)for(var o=0;o<i;o++)e[n++]=t[a][o]}else e=new r(t);this.value=e},H.prototype.clone=function(t){var e=new H(this.name,this.type,this.size,this.semantic);return t&&console.warn("todo"),e};var Mr=Rt.extend(function(){return{attributes:{position:new H("position","float",3,"POSITION"),texcoord0:new H("texcoord0","float",2,"TEXCOORD_0"),texcoord1:new H("texcoord1","float",2,"TEXCOORD_1"),normal:new H("normal","float",3,"NORMAL"),tangent:new H("tangent","float",4,"TANGENT"),color:new H("color","float",4,"COLOR"),weight:new H("weight","float",3,"WEIGHT"),joint:new H("joint","float",4,"JOINT"),barycentric:new H("barycentric","float",3,null)},boundingBox:null,indices:null,dynamic:!0,_enabledAttributes:null}},function(){this._cache=new rr,this._attributeList=Object.keys(this.attributes)},{mainAttribute:"position",pick:null,pickByRay:null,updateBoundingBox:function(){var t=this.boundingBox;t||(t=this.boundingBox=new Se);var e=this.attributes.position.value;if(e&&e.length){var r=t.min,n=t.max,i=r._array,a=n._array;Er.set(i,e[0],e[1],e[2]),Er.set(a,e[0],e[1],e[2]);for(var o=3;o<e.length;){var s=e[o++],u=e[o++],l=e[o++];s<i[0]&&(i[0]=s),u<i[1]&&(i[1]=u),l<i[2]&&(i[2]=l),s>a[0]&&(a[0]=s),u>a[1]&&(a[1]=u),l>a[2]&&(a[2]=l)}r._dirty=!0,n._dirty=!0}},dirty:function(){for(var t=this.getEnabledAttributes(),e=0;e<t.length;e++)this.dirtyAttribute(t[e]);this.dirtyIndices(),this._enabledAttributes=null},dirtyIndices:function(){this._cache.dirtyAll("indices")},dirtyAttribute:function(t){this._cache.dirtyAll(B(t)),this._cache.dirtyAll("attributes")},getTriangleIndices:function(t,e){if(t<this.triangleCount&&t>=0){e||(e=Sr());var r=this.indices;return e[0]=r[3*t],e[1]=r[3*t+1],e[2]=r[3*t+2],e}},setTriangleIndices:function(t,e){var r=this.indices;r[3*t]=e[0],r[3*t+1]=e[1],r[3*t+2]=e[2]},isUseIndices:function(){return!!this.indices},initIndicesFromArray:function(t){var e,r=this.vertexCount>65535?Tr.Uint32Array:Tr.Uint16Array;if(t[0]&&t[0].length){var n=0;e=new r(3*t.length);for(var i=0;i<t.length;i++)for(var a=0;a<3;a++)e[n++]=t[i][a]}else e=new r(t);this.indices=e},createAttribute:function(t,e,r,n){var i=new H(t,e,r,n);return this.attributes[t]&&this.removeAttribute(t),this.attributes[t]=i,this._attributeList.push(t),i},removeAttribute:function(t){var e=this._attributeList,r=e.indexOf(t);return r>=0&&(e.splice(r,1),delete this.attributes[t],!0)},getAttribute:function(t){return this.attribute[t]},getEnabledAttributes:function(){var t=this._enabledAttributes,e=this._attributeList;if(t)return t;for(var r=[],n=this.vertexCount,i=0;i<e.length;i++){var a=e[i],o=this.attributes[a];o.value&&o.value.length===n*o.size&&r.push(a)}return this._enabledAttributes=r,r},getBufferChunks:function(t){var e=this._cache;e.use(t.__GUID__);var r=e.isDirty("attributes"),n=e.isDirty("indices");if(r||n){this._updateBuffer(t.gl,r,n);for(var i=this.getEnabledAttributes(),a=0;a<i.length;a++)e.fresh(B(i[a]));e.fresh("attributes"),e.fresh("indices")}return e.get("chunks")},_updateBuffer:function(t,e,r){var n=this._cache,i=n.get("chunks"),a=!1;i||(i=[],i[0]={attributeBuffers:[],indicesBuffer:null},n.put("chunks",i),a=!0);var o=i[0],s=o.attributeBuffers,u=o.indicesBuffer;if(e||a){var l=this.getEnabledAttributes(),h={};if(!a)for(var c=0;c<s.length;c++)h[s[c].name]=s[c];for(var f=0;f<l.length;f++){var d,_=l[f],m=this.attributes[_];a||(d=h[_]);var p;p=d?d.buffer:t.createBuffer(),n.isDirty(B(_))&&(t.bindBuffer(t.ARRAY_BUFFER,p),t.bufferData(t.ARRAY_BUFFER,m.value,this.dynamic?je.DYNAMIC_DRAW:je.STATIC_DRAW)),s[f]=new G(_,m.type,p,m.size,m.semantic)}for(var c=f;c<s.length;c++)t.deleteBuffer(s[c].buffer);s.length=f}this.isUseIndices()&&(r||a)&&(u||(u=new W(t.createBuffer()),o.indicesBuffer=u),u.count=this.indices.length,t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,u.buffer),t.bufferData(t.ELEMENT_ARRAY_BUFFER,this.indices,this.dynamic?je.DYNAMIC_DRAW:je.STATIC_DRAW))},generateVertexNormals:function(){if(this.vertexCount){var t=this.indices,e=this.attributes,r=e.position.value,n=e.normal.value;if(n&&n.length===r.length)for(var i=0;i<n.length;i++)n[i]=0;else n=e.normal.value=new Tr.Float32Array(r.length);for(var a,o,s,u=Sr(),l=Sr(),h=Sr(),c=Sr(),f=Sr(),d=Sr(),_=t?t.length:this.vertexCount,m=0;m<_;){t?(a=t[m++],o=t[m++],s=t[m++]):(a=m++,o=m++,s=m++),Nr(u,r[3*a],r[3*a+1],r[3*a+2]),Nr(l,r[3*o],r[3*o+1],r[3*o+2]),Nr(h,r[3*s],r[3*s+1],r[3*s+2]),Er.sub(c,u,l),Er.sub(f,l,h),Er.cross(d,c,f);for(var i=0;i<3;i++)n[3*a+i]=n[3*a+i]+d[i],n[3*o+i]=n[3*o+i]+d[i],n[3*s+i]=n[3*s+i]+d[i]}for(var i=0;i<n.length;)Nr(d,n[i],n[i+1],n[i+2]),Er.normalize(d,d),n[i++]=d[0],n[i++]=d[1],n[i++]=d[2];this.dirty()}},generateFaceNormals:function(){if(this.vertexCount){this.isUniqueVertex()||this.generateUniqueVertex();var t=this.indices,e=this.attributes,r=e.position.value,n=e.normal.value,i=Sr(),a=Sr(),o=Sr(),s=Sr(),u=Sr(),l=Sr();n||(n=e.normal.value=new Float32Array(r.length));for(var h,c,f,d=t?t.length:this.vertexCount,_=0;_<d;){t?(h=t[_++],c=t[_++],f=t[_++]):(h=_++,c=_++,f=_++),Nr(i,r[3*h],r[3*h+1],r[3*h+2]),Nr(a,r[3*c],r[3*c+1],r[3*c+2]),Nr(o,r[3*f],r[3*f+1],r[3*f+2]),Er.sub(s,i,a),Er.sub(u,a,o),Er.cross(l,s,u),Er.normalize(l,l);for(var m=0;m<3;m++)n[3*h+m]=l[m],n[3*c+m]=l[m],n[3*f+m]=l[m]}this.dirty()}},generateTangents:function(){if(this.vertexCount){var t=this.vertexCount,e=this.attributes;e.tangent.value||(e.tangent.value=new Float32Array(4*t));var r=e.texcoord0.value,n=e.position.value,i=e.tangent.value,a=e.normal.value;if(!r)return void console.warn("Geometry without texcoords can't generate tangents.");for(var o=[],s=[],u=0;u<t;u++)o[u]=[0,0,0],s[u]=[0,0,0];for(var l,h,c,f=[0,0,0],d=[0,0,0],_=this.indices,m=_?_.length:this.vertexCount,u=0;u<m;){_?(l=_[u++],h=_[u++],c=_[u++]):(l=u++,h=u++,c=u++);var p=r[2*l],v=r[2*h],g=r[2*c],y=r[2*l+1],x=r[2*h+1],T=r[2*c+1],E=n[3*l],b=n[3*h],S=n[3*c],A=n[3*l+1],N=n[3*h+1],M=n[3*c+1],w=n[3*l+2],R=n[3*h+2],C=n[3*c+2],L=b-E,P=S-E,D=N-A,I=M-A,O=R-w,k=C-w,U=v-p,F=g-p,B=x-y,H=T-y,G=1/(U*H-B*F);f[0]=(H*L-B*P)*G,f[1]=(H*D-B*I)*G,f[2]=(H*O-B*k)*G,d[0]=(U*P-F*L)*G,d[1]=(U*I-F*D)*G,d[2]=(U*k-F*O)*G,Ar(o[l],o[l],f),Ar(o[h],o[h],f),Ar(o[c],o[c],f),Ar(s[l],s[l],d),Ar(s[h],s[h],d),Ar(s[c],s[c],d)}for(var W=Sr(),V=Sr(),q=Sr(),u=0;u<t;u++){q[0]=a[3*u],q[1]=a[3*u+1],q[2]=a[3*u+2];var z=o[u];Er.scale(W,q,Er.dot(q,z)),Er.sub(W,z,W),Er.normalize(W,W),Er.cross(V,q,z),i[4*u]=W[0],i[4*u+1]=W[1],i[4*u+2]=W[2],i[4*u+3]=Er.dot(V,s[u])<0?-1:1}this.dirty()}},isUniqueVertex:function(){return!this.isUseIndices()||this.vertexCount===this.indices.length},generateUniqueVertex:function(){if(this.vertexCount&&this.indices){this.indices.length>65535&&(this.indices=new Tr.Uint32Array(this.indices));for(var t=this.attributes,e=this.indices,r=this.getEnabledAttributes(),n={},i=0;i<r.length;i++){var a=r[i];n[a]=t[a].value,t[a].init(this.indices.length)}for(var o=0,s=0;s<e.length;s++){for(var u=e[s],i=0;i<r.length;i++)for(var a=r[i],l=t[a].value,h=t[a].size,c=0;c<h;c++)l[o*h+c]=n[a][u*h+c];e[s]=o,o++}this.dirty()}},generateBarycentric:function(){if(this.vertexCount){this.isUniqueVertex()||this.generateUniqueVertex();var t=this.attributes,e=t.barycentric.value,r=this.indices;if(!e||e.length!==3*r.length){e=t.barycentric.value=new Float32Array(3*r.length);for(var n=0;n<(r?r.length:this.vertexCount/3);)for(var i=0;i<3;i++){var a=r?r[n++]:3*n+i;e[3*a+i]=1}this.dirty()}}},applyTransform:function(t){var e=this.attributes,r=e.position.value,n=e.normal.value,i=e.tangent.value;t=t._array;var a=br.create();br.invert(a,t),br.transpose(a,a);var o=Er.transformMat4,s=Er.forEach;s(r,3,0,null,o,t),n&&s(n,3,0,null,o,a),i&&s(i,4,0,null,o,a),this.boundingBox&&this.updateBoundingBox()},dispose:function(t){var e=this._cache;e.use(t.__GUID__);var r=e.get("chunks");if(r)for(var n=0;n<r.length;n++)for(var i=r[n],a=0;a<i.attributeBuffers.length;a++){var o=i.attributeBuffers[a];t.gl.deleteBuffer(o.buffer)}e.deleteContext(t.__GUID__)}});Object.defineProperty&&(Object.defineProperty(Mr.prototype,"vertexCount",{enumerable:!1,get:function(){var t=this.attributes[this.mainAttribute];return t&&t.value?t.value.length/t.size:0}}),Object.defineProperty(Mr.prototype,"triangleCount",{enumerable:!1,get:function(){var t=this.indices;return t?t.length/3:0}})),Mr.STATIC_DRAW=je.STATIC_DRAW,Mr.DYNAMIC_DRAW=je.DYNAMIC_DRAW,Mr.STREAM_DRAW=je.STREAM_DRAW,Mr.AttributeBuffer=G,Mr.IndicesBuffer=W,Mr.Attribute=H;var wr=Mr.extend({dynamic:!1,widthSegments:1,heightSegments:1},function(){this.build()},{build:function(){for(var t=this.heightSegments,e=this.widthSegments,r=this.attributes,n=[],i=[],a=[],o=[],s=0;s<=t;s++)for(var u=s/t,l=0;l<=e;l++){var h=l/e;if(n.push([2*h-1,2*u-1,0]),i&&i.push([h,u]),a&&a.push([0,0,1]),l<e&&s<t){var c=l+s*(e+1);o.push([c,c+1,c+e+1]),o.push([c+e+1,c+1,c+e+2])}}r.position.fromArray(n),r.texcoord0.fromArray(i),r.normal.fromArray(a),this.initIndicesFromArray(o),this.boundingBox=new Se,this.boundingBox.min.set(-1,-1,0),this.boundingBox.max.set(1,1,0)}}),Rr=Bt.mat2,Cr=Bt.mat3,Lr=Bt.mat4,Pr=/uniform\s+(bool|float|int|vec2|vec3|vec4|ivec2|ivec3|ivec4|mat2|mat3|mat4|sampler2D|samplerCube)\s+([\w\,]+)?(\[.*?\])?\s*(:\s*([\S\s]+?))?;/g,Dr=/attribute\s+(float|int|vec2|vec3|vec4)\s+(\w*)\s*(:\s*(\w+))?;/g,Ir=/#define\s+(\w+)?(\s+[\w-.]+)?\s*;?\s*\n/g,Or=/for\s*?\(int\s*?_idx_\s*\=\s*([\w-]+)\;\s*_idx_\s*<\s*([\w-]+);\s*_idx_\s*\+\+\s*\)\s*\{\{([\s\S]+?)(?=\}\})\}\}/g,kr={bool:"1i",int:"1i",sampler2D:"t",samplerCube:"t",float:"1f",vec2:"2f",vec3:"3f",vec4:"4f",ivec2:"2i",ivec3:"3i",ivec4:"4i",mat2:"m2",mat3:"m3",mat4:"m4"},Ur={bool:function(){return!0},int:function(){return 0},float:function(){return 0},sampler2D:function(){return null},samplerCube:function(){return null},vec2:function(){return[0,0]},vec3:function(){return[0,0,0]},vec4:function(){return[0,0,0,0]},ivec2:function(){return[0,0]},ivec3:function(){return[0,0,0]},ivec4:function(){return[0,0,0,0]},mat2:function(){return Rr.create()},mat3:function(){return Cr.create()},mat4:function(){return Lr.create()},array:function(){return[]}},Fr=["POSITION","NORMAL","BINORMAL","TANGENT","TEXCOORD","TEXCOORD_0","TEXCOORD_1","COLOR","JOINT","WEIGHT"],Br=["SKIN_MATRIX","VIEWPORT_SIZE","VIEWPORT","DEVICEPIXELRATIO","WINDOW_SIZE","NEAR","FAR","TIME"],Hr=["WORLD","VIEW","PROJECTION","WORLDVIEW","VIEWPROJECTION","WORLDVIEWPROJECTION","WORLDINVERSE","VIEWINVERSE","PROJECTIONINVERSE","WORLDVIEWINVERSE","VIEWPROJECTIONINVERSE","WORLDVIEWPROJECTIONINVERSE","WORLDTRANSPOSE","VIEWTRANSPOSE","PROJECTIONTRANSPOSE","WORLDVIEWTRANSPOSE","VIEWPROJECTIONTRANSPOSE","WORLDVIEWPROJECTIONTRANSPOSE","WORLDINVERSETRANSPOSE","VIEWINVERSETRANSPOSE","PROJECTIONINVERSETRANSPOSE","WORLDVIEWINVERSETRANSPOSE","VIEWPROJECTIONINVERSETRANSPOSE","WORLDVIEWPROJECTIONINVERSETRANSPOSE"],Gr={},Wr=Rt.extend(function(){return{vertex:"",fragment:"",precision:"highp",attribSemantics:{},matrixSemantics:{},uniformSemantics:{},matrixSemanticKeys:[],uniformTemplates:{},attributeTemplates:{},vertexDefines:{},fragmentDefines:{},extensions:["OES_standard_derivatives","EXT_shader_texture_lod"],lightGroup:0,lightNumber:{},_textureSlot:0,_attacheMaterialNumber:0,_uniformList:[],_textureStatus:{},_vertexProcessed:"",_fragmentProcessed:"",_currentLocationsMap:{}}},function(){this._cache=new rr,this._codeDirty=!0,this._updateShaderString()},{isEqual:function(t){return!!t&&(this===t?!this._codeDirty:(t._codeDirty&&t._updateShaderString(),this._codeDirty&&this._updateShaderString(),!(t._vertexProcessed!==this._vertexProcessed||t._fragmentProcessed!==this._fragmentProcessed)))},setVertex:function(t){this.vertex=t,this._updateShaderString(),this.dirty()},setFragment:function(t){this.fragment=t,this._updateShaderString(),this.dirty()},bind:function(t){var e=this._cache,r=t.gl;if(e.use(t.__GUID__,V),this._currentLocationsMap=e.get("locations"),this._textureSlot=0,this._codeDirty&&this._updateShaderString(),e.isDirty("program")){var n=this._buildProgram(r,this._vertexProcessed,this._fragmentProcessed);if(e.fresh("program"),n)return n}r.useProgram(e.get("program"))},dirty:function(){var t=this._cache;this._codeDirty=!0,t.dirtyAll("program");for(var e=0;e<t._caches.length;e++)if(t._caches[e]){var r=t._caches[e];r.locations={},r.attriblocations={}}},_updateShaderString:function(t){this.vertex===this._vertexPrev&&this.fragment===this._fragmentPrev||(this._parseImport(),this.attribSemantics={},this.matrixSemantics={},this._textureStatus={},this._parseUniforms(),this._parseAttributes(),this._parseDefines(),this._vertexPrev=this.vertex,this._fragmentPrev=this.fragment),this._addDefineExtensionAndPrecision(t),this._vertexProcessed=this._unrollLoop(this._vertexProcessed,this.vertexDefines),this._fragmentProcessed=this._unrollLoop(this._fragmentProcessed,this.fragmentDefines),this._codeDirty=!1},define:function(t,e,r){var n=this.vertexDefines,i=this.fragmentDefines;"vertex"!==t&&"fragment"!==t&&"both"!==t&&arguments.length<3&&(r=e,e=t,t="both"),r=null!=r?r:null,"vertex"!==t&&"both"!==t||n[e]!==r&&(n[e]=r,this.dirty()),"fragment"!==t&&"both"!==t||i[e]!==r&&(i[e]=r,"both"!==t&&this.dirty())},undefine:function(t,e){"vertex"!==t&&"fragment"!==t&&"both"!==t&&arguments.length<2&&(e=t,t="both"),"vertex"!==t&&"both"!==t||this.isDefined("vertex",e)&&(delete this.vertexDefines[e],this.dirty()),"fragment"!==t&&"both"!==t||this.isDefined("fragment",e)&&(delete this.fragmentDefines[e],"both"!==t&&this.dirty())},isDefined:function(t,e){switch(t){case"vertex":return void 0!==this.vertexDefines[e];case"fragment":return void 0!==this.fragmentDefines[e]}},getDefine:function(t,e){switch(t){case"vertex":return this.vertexDefines[e];case"fragment":return this.fragmentDefines[e]}},enableTexture:function(t){if(Array.isArray(t))for(var e=0;e<t.length;e++)this.enableTexture(t[e]);else{var r=this._textureStatus[t];if(r){r.enabled||(r.enabled=!0,this.dirty())}}},enableTexturesAll:function(){var t=this._textureStatus;for(var e in t)t[e].enabled=!0;this.dirty()},disableTexture:function(t){if(Array.isArray(t))for(var e=0;e<t.length;e++)this.disableTexture(t[e]);else{var r=this._textureStatus[t];if(r){!r.enabled||(r.enabled=!1,this.dirty())}}},disableTexturesAll:function(){var t=this._textureStatus;for(var e in t)t[e].enabled=!1;this.dirty()},isTextureEnabled:function(t){var e=this._textureStatus;return!!e[t]&&e[t].enabled},getEnabledTextures:function(){var t=[],e=this._textureStatus;for(var r in e)e[r].enabled&&t.push(r);return t},hasUniform:function(t){var e=this._currentLocationsMap[t];return null!==e&&void 0!==e},currentTextureSlot:function(){return this._textureSlot},resetTextureSlot:function(t){this._textureSlot=t||0},takeCurrentTextureSlot:function(t,e){var r=this._textureSlot;return this.useTextureSlot(t,e,r),this._textureSlot++,r},useTextureSlot:function(t,e,r){e&&(t.gl.activeTexture(t.gl.TEXTURE0+r),e.isRenderable()?e.bind(t):e.unbind(t))},setUniform:function(t,e,r,n){var i=this._currentLocationsMap,a=i[r];if(null===a||void 0===a)return!1;switch(e){case"m4":t.uniformMatrix4fv(a,!1,n);break;case"2i":t.uniform2i(a,n[0],n[1]);break;case"2f":t.uniform2f(a,n[0],n[1]);break;case"3i":t.uniform3i(a,n[0],n[1],n[2]);break;case"3f":t.uniform3f(a,n[0],n[1],n[2]);break;case"4i":t.uniform4i(a,n[0],n[1],n[2],n[3]);break;case"4f":t.uniform4f(a,n[0],n[1],n[2],n[3]);break;case"1i":t.uniform1i(a,n);break;case"1f":t.uniform1f(a,n);break;case"1fv":t.uniform1fv(a,n);break;case"1iv":t.uniform1iv(a,n);break;case"2iv":t.uniform2iv(a,n);break;case"2fv":t.uniform2fv(a,n);break;case"3iv":t.uniform3iv(a,n);break;case"3fv":t.uniform3fv(a,n);break;case"4iv":t.uniform4iv(a,n);break;case"4fv":t.uniform4fv(a,n);break;case"m2":case"m2v":t.uniformMatrix2fv(a,!1,n);break;case"m3":case"m3v":t.uniformMatrix3fv(a,!1,n);break;case"m4v":if(Array.isArray(n)){for(var o=new Tr.Float32Array(16*n.length),s=0,u=0;u<n.length;u++)for(var l=n[u],h=0;h<16;h++)o[s++]=l[h];t.uniformMatrix4fv(a,!1,o)}else n instanceof Tr.Float32Array&&t.uniformMatrix4fv(a,!1,n)}return!0},setUniformOfSemantic:function(t,e,r){var n=this.uniformSemantics[e];return!!n&&this.setUniform(t,n.type,n.symbol,r)},enableAttributes:function(t,e,r){var n,i=t.gl,a=this._cache.get("program"),o=this._cache.get("attriblocations");(n=r?r.__enabledAttributeList:Gr[t.__GUID__])||(n=r?r.__enabledAttributeList=[]:Gr[t.__GUID__]=[]);for(var s=[],u=0;u<e.length;u++){var l=e[u];if(this.attributeTemplates[l]){var h=o[l];if(void 0===h){if(-1===(h=i.getAttribLocation(a,l))){s[u]=-1;continue}o[l]=h}s[u]=h,n[h]?n[h]=2:n[h]=1}else s[u]=-1}for(var u=0;u<n.length;u++)switch(n[u]){case 1:i.enableVertexAttribArray(u),n[u]=3;break;case 2:n[u]=3;break;case 3:i.disableVertexAttribArray(u),n[u]=0}return s},_parseImport:function(){this._vertexProcessedWithoutDefine=Wr.parseImport(this.vertex),this._fragmentProcessedWithoutDefine=Wr.parseImport(this.fragment)},_addDefineExtensionAndPrecision:function(t){t=t||this.extensions;for(var e=[],r=0;r<t.length;r++)e.push("#extension GL_"+t[r]+" : enable");var n=this._getDefineStr(this.vertexDefines);this._vertexProcessed=n+"\n"+this._vertexProcessedWithoutDefine,n=this._getDefineStr(this.fragmentDefines);var i=n+"\n"+this._fragmentProcessedWithoutDefine;this._fragmentProcessed=e.join("\n")+"\n"+["precision",this.precision,"float"].join(" ")+";\n"+["precision",this.precision,"int"].join(" ")+";\n"+["precision",this.precision,"sampler2D"].join(" ")+";\n"+i},_getDefineStr:function(t){var e=this.lightNumber,r=this._textureStatus,n=[];for(var i in e){var a=e[i];a>0&&n.push("#define "+i.toUpperCase()+"_COUNT "+a)}for(var o in r){r[o].enabled&&n.push("#define "+o.toUpperCase()+"_ENABLED")}for(var o in t){var s=t[o];null===s?n.push("#define "+o):n.push("#define "+o+" "+s.toString())}return n.join("\n")},_unrollLoop:function(t,e){function r(t,r,i,a){var o="";isNaN(r)&&(r=r in e?e[r]:n[r]),isNaN(i)&&(i=i in e?e[i]:n[i]);for(var s=parseInt(r);s<parseInt(i);s++)o+="{"+a.replace(/float\s*\(\s*_idx_\s*\)/g,s.toFixed(1)).replace(/_idx_/g,s)+"}";return o}var n={};for(var i in this.lightNumber)n[i+"_COUNT"]=this.lightNumber[i];return t.replace(Or,r)},
_parseUniforms:function(){function t(t,i,a,o,s,u){if(i&&a){var l,h=kr[i],c=!0;if(h){if(r._uniformList.push(a),"sampler2D"!==i&&"samplerCube"!==i||(r._textureStatus[a]={enabled:!1,shaderType:n}),o&&(h+="v"),u)if(Fr.indexOf(u)>=0)r.attribSemantics[u]={symbol:a,type:h},c=!1;else if(Hr.indexOf(u)>=0){var f=!1,d=u;u.match(/TRANSPOSE$/)&&(f=!0,d=u.slice(0,-9)),r.matrixSemantics[u]={symbol:a,type:h,isTranspose:f,semanticNoTranspose:d},c=!1}else if(Br.indexOf(u)>=0)r.uniformSemantics[u]={symbol:a,type:h},c=!1;else if("unconfigurable"===u)c=!1;else{if(!(l=r._parseDefaultValue(i,u)))throw new Error('Unkown semantic "'+u+'"');u=""}c&&(e[a]={type:h,value:o?Ur.array:l||Ur[i],semantic:u||null})}return["uniform",i,a,o].join(" ")+";\n"}}var e={},r=this,n="vertex";this._uniformList=[],this._vertexProcessedWithoutDefine=this._vertexProcessedWithoutDefine.replace(Pr,t),n="fragment",this._fragmentProcessedWithoutDefine=this._fragmentProcessedWithoutDefine.replace(Pr,t),r.matrixSemanticKeys=Object.keys(this.matrixSemantics),this.uniformTemplates=e},_parseDefaultValue:function(t,e){var r=/\[\s*(.*)\s*\]/;{if("vec2"!==t&&"vec3"!==t&&"vec4"!==t)return"bool"===t?function(){return"true"===e.toLowerCase()}:"float"===t?function(){return parseFloat(e)}:"int"===t?function(){return parseInt(e)}:void 0;var n=r.exec(e)[1];if(n){var i=n.split(/\s*,\s*/);return function(){return new Tr.Float32Array(i)}}}},createUniforms:function(){var t={};for(var e in this.uniformTemplates){var r=this.uniformTemplates[e];t[e]={type:r.type,value:r.value()}}return t},attached:function(){this._attacheMaterialNumber++},detached:function(){this._attacheMaterialNumber--},isAttachedToAny:function(){return 0!==this._attacheMaterialNumber},_parseAttributes:function(){function t(t,n,i,a,o){if(n&&i){var s=1;switch(n){case"vec4":s=4;break;case"vec3":s=3;break;case"vec2":s=2;break;case"float":s=1}if(e[i]={type:"float",size:s,semantic:o||null},o){if(Fr.indexOf(o)<0)throw new Error('Unkown semantic "'+o+'"');r.attribSemantics[o]={symbol:i,type:n}}}return["attribute",n,i].join(" ")+";\n"}var e={},r=this;this._vertexProcessedWithoutDefine=this._vertexProcessedWithoutDefine.replace(Dr,t),this.attributeTemplates=e},_parseDefines:function(){function t(t,n,i){var a="vertex"===r?e.vertexDefines:e.fragmentDefines;return a[n]||(a[n]="false"!=i&&("true"==i||(i?isNaN(parseFloat(i))?i:parseFloat(i):null))),""}var e=this,r="vertex";this._vertexProcessedWithoutDefine=this._vertexProcessedWithoutDefine.replace(Ir,t),r="fragment",this._fragmentProcessedWithoutDefine=this._fragmentProcessedWithoutDefine.replace(Ir,t)},_buildProgram:function(t,e,r){var n=this._cache;n.get("program")&&t.deleteProgram(n.get("program"));var i=t.createProgram(),a=t.createShader(t.VERTEX_SHADER);t.shaderSource(a,e),t.compileShader(a);var o=t.createShader(t.FRAGMENT_SHADER);t.shaderSource(o,r),t.compileShader(o);var s=q(t,a,e);if(s)return s;if(s=q(t,o,r))return s;if(t.attachShader(i,a),t.attachShader(i,o),this.attribSemantics.POSITION)t.bindAttribLocation(i,0,this.attribSemantics.POSITION.symbol);else{var u=Object.keys(this.attributeTemplates);t.bindAttribLocation(i,0,u[0])}if(t.linkProgram(i),!t.getProgramParameter(i,t.LINK_STATUS))return"Could not link program\nVALIDATE_STATUS: "+t.getProgramParameter(i,t.VALIDATE_STATUS)+", gl error ["+t.getError()+"]";for(var l=0;l<this._uniformList.length;l++){var h=this._uniformList[l];n.get("locations")[h]=t.getUniformLocation(i,h)}t.deleteShader(a),t.deleteShader(o),n.put("program",i)},clone:function(){var t=new Wr({vertex:this.vertex,fragment:this.fragment,vertexDefines:wt.clone(this.vertexDefines),fragmentDefines:wt.clone(this.fragmentDefines)});for(var e in this._textureStatus)t._textureStatus[e]=wt.clone(this._textureStatus[e]);return t},dispose:function(t){var e=this._cache;e.use(t.__GUID__);var r=e.get("program");r&&t.gl.deleteProgram(r),e.deleteContext(t.__GUID__),this._locations={}}}),Vr=/(@import)\s*([0-9a-zA-Z_\-\.]*)/g;Wr.parseImport=function(t){return t=t.replace(Vr,function(t,e,r){var t=Wr.source(r);return t?Wr.parseImport(t):(console.error('Shader chunk "'+r+'" not existed in library'),"")})};var qr=/(@export)\s*([0-9a-zA-Z_\-\.]*)\s*\n([\s\S]*?)@end/g;Wr.import=function(t){t.replace(qr,function(t,e,r,n){var n=n.replace(/(^[\s\t\xa0\u3000]+)|([\u3000\xa0\s\t]+\x24)/g,"");if(n){for(var i,a=r.split("."),o=Wr.codes,s=0;s<a.length-1;)i=a[s++],o[i]||(o[i]={}),o=o[i];i=a[s],o[i]=n}return n})},Wr.codes={},Wr.source=function(t){for(var e=t.split("."),r=Wr.codes,n=0;r&&n<e.length;){r=r[e[n++]]}return"string"!=typeof r?(console.error('Shader "'+t+'" not existed in library'),""):r};var zr,Xr=Rt.extend({name:"",depthTest:!0,depthMask:!0,transparent:!1,blend:null,_enabledUniforms:null},function(){this.name||(this.name="MATERIAL_"+this.__GUID__),this.shader&&this.attachShader(this.shader),this.uniforms||(this.uniforms={})},{bind:function(t,e,r,n){for(var i=t.gl,e=e||this.shader,a=e.currentTextureSlot(),o=0;o<this._enabledUniforms.length;o++){var s=this._enabledUniforms[o],u=this.uniforms[s].value;if(u instanceof nr)u.__slot=-1;else if(Array.isArray(u))for(var l=0;l<u.length;l++)u[l]instanceof nr&&(u[l].__slot=-1)}for(var o=0;o<this._enabledUniforms.length;o++){var s=this._enabledUniforms[o],h=this.uniforms[s],u=h.value;if(null!==u)if(u instanceof nr)if(u.__slot<0){var c=e.currentTextureSlot(),f=e.setUniform(i,"1i",s,c);if(!f)continue;e.takeCurrentTextureSlot(t,u),u.__slot=c}else e.setUniform(i,"1i",s,u.__slot);else if(Array.isArray(u)){if(0===u.length)continue;var d=u[0];if(d instanceof nr){if(!e.hasUniform(s))continue;for(var _=[],l=0;l<u.length;l++){var m=u[l];if(m.__slot<0){var c=e.currentTextureSlot();_.push(c),e.takeCurrentTextureSlot(t,m),m.__slot=c}else _.push(m.__slot)}e.setUniform(i,"1iv",s,_)}else e.setUniform(i,h.type,s,u)}else e.setUniform(i,h.type,s,u);else if("t"===h.type){var c=e.currentTextureSlot(),f=e.setUniform(i,"1i",s,c);f&&e.takeCurrentTextureSlot(t,null)}}e.resetTextureSlot(a)},setUniform:function(t,e){void 0===e&&console.warn('Uniform value "'+t+'" is undefined');var r=this.uniforms[t];r&&(r.value=e)},setUniforms:function(t){for(var e in t){var r=t[e];this.setUniform(e,r)}},isUniformEnabled:function(t){return this._enabledUniforms.indexOf(t)>=0},set:function(t,e){if("object"==typeof t)for(var r in t){var n=t[r];this.set(r,n)}else{var i=this.uniforms[t];i&&(void 0===e&&(console.warn('Uniform value "'+t+'" is undefined'),e=null),i.value=e)}},get:function(t){var e=this.uniforms[t];if(e)return e.value},attachShader:function(t,e){this.shader&&this.shader.detached();var r=this.uniforms;this.uniforms=t.createUniforms(),this.shader=t;var n=this.uniforms;if(this._enabledUniforms=Object.keys(n),this._enabledUniforms.sort(),e)for(var i in r)n[i]&&(n[i].value=r[i].value);t.attached()},detachShader:function(){this.shader.detached(),this.shader=null,this.uniforms={}},clone:function(){var t=new this.constructor({name:this.name,shader:this.shader});for(var e in this.uniforms)t.uniforms[e].value=this.uniforms[e].value;return t.depthTest=this.depthTest,t.depthMask=this.depthMask,t.transparent=this.transparent,t.blend=this.blend,t},dispose:function(t,e){if(e)for(var r in this.uniforms){var n=this.uniforms[r].value;if(n)if(n instanceof nr)n.dispose(t);else if(Array.isArray(n))for(var i=0;i<n.length;i++)n[i]instanceof nr&&n[i].dispose(t)}var a=this.shader;a&&(this.detachShader(),a.isAttachedToAny()||a.dispose(t))}}),jr=0,Yr=null,Kr=!0,Qr=function(){this.triangleCount=0,this.vertexCount=0,this.drawCallCount=0},Zr=Me.extend({material:null,geometry:null,mode:je.TRIANGLES,_drawCache:null,_renderInfo:null},function(){this._drawCache={},this._renderInfo=new Qr},{renderOrder:0,lineWidth:1,culling:!0,cullFace:je.BACK,frontFace:je.CCW,frustumCulling:!0,receiveShadow:!0,castShadow:!0,ignorePicking:!1,ignorePreZ:!1,ignoreGBuffer:!1,isRenderable:function(){return this.geometry&&this.material&&!this.invisible&&this.geometry.vertexCount>0},beforeRender:function(t){},afterRender:function(t,e){},getBoundingBox:function(t,e){return e=Me.prototype.getBoundingBox.call(this,t,e),this.geometry&&this.geometry.boundingBox&&e.union(this.geometry.boundingBox),e},render:function(t,e){var r=t.gl,e=e||this.material.shader,n=this.geometry,i=this.mode,a=n.vertexCount,o=n.isUseIndices(),s=t.getGLExtension("OES_element_index_uint"),u=s&&a>65535,l=u?r.UNSIGNED_INT:r.UNSIGNED_SHORT,h=t.getGLExtension("OES_vertex_array_object"),c=!n.dynamic,f=this._renderInfo;f.vertexCount=a,f.triangleCount=0,f.drawCallCount=0;var d=!1;if(zr=t.__GUID__+"-"+n.__GUID__+"-"+e.__GUID__,zr!==jr?d=!0:(a>65535&&!s&&o||h&&c||n._cache.isDirty())&&(d=!0),jr=zr,d){var _=this._drawCache[zr];if(!_){var m=n.getBufferChunks(t);if(!m)return;_=[];for(var p=0;p<m.length;p++){for(var v=m[p],g=v.attributeBuffers,y=v.indicesBuffer,x=[],T=[],E=0;E<g.length;E++){var b,S=g[E],A=S.name,N=S.semantic;if(N){var M=e.attribSemantics[N];b=M&&M.symbol}else b=A;b&&e.attributeTemplates[b]&&(x.push(S),T.push(b))}var w=new X(x,T,y);_.push(w)}c&&(this._drawCache[zr]=_)}for(var R=0;R<_.length;R++){var w=_[R],C=!0;h&&c&&(null==w.vao?w.vao=h.createVertexArrayOES():C=!1,h.bindVertexArrayOES(w.vao));var x=w.availableAttributes,y=w.indicesBuffer;if(C)for(var L=e.enableAttributes(t,w.availableAttributeSymbols,h&&c&&w.vao),E=0;E<x.length;E++){var P=L[E];if(-1!==P){var D,S=x[E],I=S.buffer,O=S.size;switch(S.type){case"float":D=r.FLOAT;break;case"byte":D=r.BYTE;break;case"ubyte":D=r.UNSIGNED_BYTE;break;case"short":D=r.SHORT;break;case"ushort":D=r.UNSIGNED_SHORT;break;default:D=r.FLOAT}r.bindBuffer(r.ARRAY_BUFFER,I),r.vertexAttribPointer(P,O,D,!1,0,0)}}i!=je.LINES&&i!=je.LINE_STRIP&&i!=je.LINE_LOOP||r.lineWidth(this.lineWidth),Yr=y,Kr=n.isUseIndices(),Kr?(C&&r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,y.buffer),r.drawElements(i,y.count,l,0),f.triangleCount+=y.count/3):r.drawArrays(i,0,a),h&&c&&h.bindVertexArrayOES(null),f.drawCallCount++}}else Kr?(r.drawElements(i,Yr.count,l,0),f.triangleCount=Yr.count/3):r.drawArrays(i,0,a),f.drawCallCount=1;return f},clone:function(){var t=["castShadow","receiveShadow","mode","culling","cullFace","frontFace","frustumCulling","renderOrder","lineWidth","ignorePicking","ignorePreZ","ignoreGBuffer"];return function(){var e=Me.prototype.clone.call(this);e.geometry=this.geometry,e.material=this.material;for(var r=0;r<t.length;r++){var n=t[r];e[n]!==this[n]&&(e[n]=this[n])}return e}}()});Zr.POINTS=je.POINTS,Zr.LINES=je.LINES,Zr.LINE_LOOP=je.LINE_LOOP,Zr.LINE_STRIP=je.LINE_STRIP,Zr.TRIANGLES=je.TRIANGLES,Zr.TRIANGLE_STRIP=je.TRIANGLE_STRIP,Zr.TRIANGLE_FAN=je.TRIANGLE_FAN,Zr.BACK=je.BACK,Zr.FRONT=je.FRONT,Zr.FRONT_AND_BACK=je.FRONT_AND_BACK,Zr.CW=je.CW,Zr.CCW=je.CCW,Zr.RenderInfo=Qr;var Jr=Zr.extend({skeleton:null,joints:null,useSkinMatricesTexture:!1},function(){this.joints||(this.joints=[])},{isSkinnedMesh:function(){return!(!this.skeleton||!this.material.shader.isDefined("vertex","SKINNING"))},render:function(t,e){var r=t.gl;if(e=e||this.material.shader,this.skeleton){this.skeleton.update();var n=this.skeleton.getSubSkinMatrices(this.__GUID__,this.joints);if(this.useSkinMatricesTexture){var i,a=this.joints.length;i=a>256?64:a>64?32:a>16?16:8;var o=this.getSkinMatricesTexture();o.width=i,o.height=i,o.pixels&&o.pixels.length===i*i*4||(o.pixels=new Float32Array(i*i*4)),o.pixels.set(n),o.dirty(),e.setUniform(r,"1f","skinMatricesTextureSize",i)}else e.setUniformOfSemantic(r,"SKIN_MATRIX",n)}return Zr.prototype.render.call(this,t,e)},getSkinMatricesTexture:function(){return this._skinMatricesTexture=this._skinMatricesTexture||new or({type:je.FLOAT,minFilter:je.NEAREST,magFilter:je.NEAREST,useMipmap:!1,flipY:!1}),this._skinMatricesTexture}});Jr.POINTS=je.POINTS,Jr.LINES=je.LINES,Jr.LINE_LOOP=je.LINE_LOOP,Jr.LINE_STRIP=je.LINE_STRIP,Jr.TRIANGLES=je.TRIANGLES,Jr.TRIANGLE_STRIP=je.TRIANGLE_STRIP,Jr.TRIANGLE_FAN=je.TRIANGLE_FAN,Jr.BACK=je.BACK,Jr.FRONT=je.FRONT,Jr.FRONT_AND_BACK=je.FRONT_AND_BACK,Jr.CW=je.CW,Jr.CCW=je.CCW;Wr.import("\n@export qtek.compositor.vertex\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\nattribute vec3 position : POSITION;\nattribute vec2 texcoord : TEXCOORD_0;\nvarying vec2 v_Texcoord;\nvoid main()\n{\n    v_Texcoord = texcoord;\n    gl_Position = worldViewProjection * vec4(position, 1.0);\n}\n@end");var $r=new wr,tn=new Jr({geometry:$r,frustumCulling:!1}),en=new qe,rn=Rt.extend(function(){return{fragment:"",outputs:null,material:null,blendWithPrevious:!1,clearColor:!1,clearDepth:!0}},function(){var t=new Wr({vertex:Wr.source("qtek.compositor.vertex"),fragment:this.fragment}),e=new Xr({shader:t});t.enableTexturesAll(),this.material=e},{setUniform:function(t,e){var r=this.material.uniforms[t];r&&(r.value=e)},getUniform:function(t){var e=this.material.uniforms[t];if(e)return e.value},attachOutput:function(t,e){this.outputs||(this.outputs={}),e=e||je.COLOR_ATTACHMENT0,this.outputs[e]=t},detachOutput:function(t){for(var e in this.outputs)this.outputs[e]===t&&(this.outputs[e]=null)},bind:function(t,e){if(this.outputs)for(var r in this.outputs){var n=this.outputs[r];n&&e.attach(n,r)}e&&e.bind(t)},unbind:function(t,e){e.unbind(t)},render:function(t,e){var r=t.gl;if(e){this.bind(t,e);var n=t.getGLExtension("EXT_draw_buffers");if(n&&this.outputs){var i=[];for(var a in this.outputs)(a=+a)>=r.COLOR_ATTACHMENT0&&a<=r.COLOR_ATTACHMENT0+8&&i.push(a);n.drawBuffersEXT(i)}}this.trigger("beforerender",this,t);var o=this.clearDepth?r.DEPTH_BUFFER_BIT:0;if(r.depthMask(!0),this.clearColor){o|=r.COLOR_BUFFER_BIT,r.colorMask(!0,!0,!0,!0);var s=this.clearColor;Array.isArray(s)&&r.clearColor(s[0],s[1],s[2],s[3])}r.clear(o),this.blendWithPrevious?(r.enable(r.BLEND),this.material.transparent=!0):(r.disable(r.BLEND),this.material.transparent=!1),this.renderQuad(t),this.trigger("afterrender",this,t),e&&this.unbind(t,e)},renderQuad:function(t){tn.material=this.material,t.renderQueue([tn],en)},dispose:function(t){this.material.dispose(t)}}),nn=tr.extend(function(){return{name:"",inputs:{},outputs:null,shader:"",inputLinks:{},outputLinks:{},pass:null,_prevOutputTextures:{},_outputTextures:{},_outputReferences:{},_rendering:!1,_rendered:!1,_compositor:null}},function(){var t=new rn({fragment:this.shader});this.pass=t},{render:function(t,e){this.trigger("beforerender",t),this._rendering=!0;var r=t.gl;for(var n in this.inputLinks){var i=this.inputLinks[n],a=i.node.getOutput(t,i.pin);this.pass.setUniform(n,a)}if(this.outputs){this.pass.outputs={};var o={};for(var s in this.outputs){var u=this.updateParameter(s,t);isNaN(u.width)&&this.updateParameter(s,t);var l=this.outputs[s],h=this._compositor.allocateTexture(u);this._outputTextures[s]=h;var c=l.attachment||r.COLOR_ATTACHMENT0;"string"==typeof c&&(c=r[c]),o[c]=h}this._compositor.getFrameBuffer().bind(t);for(var c in o)this._compositor.getFrameBuffer().attach(o[c],c);this.pass.render(t),this._compositor.getFrameBuffer().updateMipmap(t.gl)}else this.pass.outputs=null,this._compositor.getFrameBuffer().unbind(t),this.pass.render(t,e);for(var n in this.inputLinks){var i=this.inputLinks[n];i.node.removeReference(i.pin)}this._rendering=!1,this._rendered=!0,this.trigger("afterrender",t)},updateParameter:function(t,e){var r=this.outputs[t],n=r.parameters,i=r._parametersCopy;if(i||(i=r._parametersCopy={}),n)for(var a in n)"width"!==a&&"height"!==a&&(i[a]=n[a]);var o,s;return o=n.width instanceof Function?n.width.call(this,e):n.width,s=n.height instanceof Function?n.height.call(this,e):n.height,i.width===o&&i.height===s||this._outputTextures[t]&&this._outputTextures[t].dispose(e),i.width=o,i.height=s,i},setParameter:function(t,e){this.pass.setUniform(t,e)},getParameter:function(t){return this.pass.getUniform(t)},setParameters:function(t){for(var e in t)this.setParameter(e,t[e])},setShader:function(t){var e=this.pass.material;e.shader.setFragment(t),e.attachShader(e.shader,!0)},shaderDefine:function(t,e){this.pass.material.shader.define("fragment",t,e)},shaderUndefine:function(t){this.pass.material.shader.undefine("fragment",t)},removeReference:function(t){if(0===--this._outputReferences[t]){this.outputs[t].keepLastFrame?(this._prevOutputTextures[t]&&this._compositor.releaseTexture(this._prevOutputTextures[t]),this._prevOutputTextures[t]=this._outputTextures[t]):this._compositor.releaseTexture(this._outputTextures[t])}},link:function(t,e,r){this.inputLinks[t]={node:e,pin:r},e.outputLinks[r]||(e.outputLinks[r]=[]),e.outputLinks[r].push({node:this,pin:t}),this.pass.material.shader.enableTexture(t)},clear:function(){tr.prototype.clear.call(this),this.pass.material.shader.disableTexturesAll()},updateReference:function(t){if(!this._rendering){this._rendering=!0;for(var e in this.inputLinks){var r=this.inputLinks[e];r.node.updateReference(r.pin)}this._rendering=!1}t&&this._outputReferences[t]++},beforeFrame:function(){this._rendered=!1;for(var t in this.outputLinks)this._outputReferences[t]=0},afterFrame:function(){for(var t in this.outputLinks)if(this._outputReferences[t]>0){var e=this.outputs[t];e.keepLastFrame?(this._prevOutputTextures[t]&&this._compositor.releaseTexture(this._prevOutputTextures[t]),this._prevOutputTextures[t]=this._outputTextures[t]):this._compositor.releaseTexture(this._outputTextures[t])}}}),an=tr.extend({name:"scene",scene:null,camera:null,autoUpdateScene:!0,preZ:!1},function(){this.frameBuffer=new vr},{render:function(t){this._rendering=!0;var e=t.gl;this.trigger("beforerender");var r;if(this.outputs){var n=this.frameBuffer;for(var i in this.outputs){var a=this.updateParameter(i,t),o=this.outputs[i],s=this._compositor.allocateTexture(a);this._outputTextures[i]=s;var u=o.attachment||e.COLOR_ATTACHMENT0;"string"==typeof u&&(u=e[u]),n.attach(s,u)}n.bind(t);var l=t.getGLExtension("EXT_draw_buffers");if(l){var h=[];for(var u in this.outputs)(u=parseInt(u))>=e.COLOR_ATTACHMENT0&&u<=e.COLOR_ATTACHMENT0+8&&h.push(u);l.drawBuffersEXT(h)}t.saveClear(),t.clearBit=je.DEPTH_BUFFER_BIT|je.COLOR_BUFFER_BIT,r=t.render(this.scene,this.camera,!this.autoUpdateScene,this.preZ),t.restoreClear(),n.unbind(t)}else r=t.render(this.scene,this.camera,!this.autoUpdateScene,this.preZ);this.trigger("afterrender",r),this._rendering=!1,this._rendered=!0}}),on=tr.extend(function(){return{texture:null,outputs:{color:{}}}},function(){},{getOutput:function(t,e){return this.texture},beforeFrame:function(){},afterFrame:function(){}}),sn=["OES_texture_float","OES_texture_half_float","OES_texture_float_linear","OES_texture_half_float_linear","OES_standard_derivatives","OES_vertex_array_object","OES_element_index_uint","WEBGL_compressed_texture_s3tc","WEBGL_depth_texture","EXT_texture_filter_anisotropic","EXT_shader_texture_lod","WEBGL_draw_buffers","EXT_frag_depth","EXT_sRGB"],un=["MAX_TEXTURE_SIZE","MAX_CUBE_MAP_TEXTURE_SIZE"],ln=function(){this.head=null,this.tail=null,this._length=0};ln.prototype.insert=function(t){var e=new ln.Entry(t);return this.insertEntry(e),e},ln.prototype.insertAt=function(t,e){if(!(t<0)){for(var r=this.head,n=0;r&&n!=t;)r=r.next,n++;if(r){var i=new ln.Entry(e),a=r.prev;a?(a.next=i,i.prev=a):this.head=i,i.next=r,r.prev=i}else this.insert(e)}},ln.prototype.insertBeforeEntry=function(t,e){var r=new ln.Entry(t),n=e.prev;n?(n.next=r,r.prev=n):this.head=r,r.next=e,e.prev=r,this._length++},ln.prototype.insertEntry=function(t){this.head?(this.tail.next=t,t.prev=this.tail,this.tail=t):this.head=this.tail=t,this._length++},ln.prototype.remove=function(t){var e=t.prev,r=t.next;e?e.next=r:this.head=r,r?r.prev=e:this.tail=e,t.next=t.prev=null,this._length--},ln.prototype.removeAt=function(t){if(!(t<0)){for(var e=this.head,r=0;e&&r!=t;)e=e.next,r++;return e?(this.remove(e),e.value):void 0}},ln.prototype.getHead=function(){if(this.head)return this.head.value},ln.prototype.getTail=function(){if(this.tail)return this.tail.value},ln.prototype.getAt=function(t){if(!(t<0)){for(var e=this.head,r=0;e&&r!=t;)e=e.next,r++;return e.value}},ln.prototype.indexOf=function(t){for(var e=this.head,r=0;e;){if(e.value===t)return r;e=e.next,r++}},ln.prototype.length=function(){return this._length},ln.prototype.isEmpty=function(){return 0===this._length},ln.prototype.forEach=function(t,e){for(var r=this.head,n=0,i=void 0!==e;r;)i?t.call(e,r.value,n):t(r.value,n),r=r.next,n++},ln.prototype.clear=function(){this.tail=this.head=null,this._length=0},ln.Entry=function(t){this.value=t,this.next=null,this.prev=null};var hn=function(t){this._list=new ln,this._map={},this._maxSize=t||10};hn.prototype.setMaxSize=function(t){this._maxSize=t},hn.prototype.put=function(t,e){if(void 0===this._map[t]){var r=this._list.length();if(r>=this._maxSize&&r>0){var n=this._list.head;this._list.remove(n),delete this._map[n.key]}var i=this._list.insert(e);i.key=t,this._map[t]=i}},hn.prototype.get=function(t){var e=this._map[t];if(void 0!==e)return e!==this._list.tail&&(this._list.remove(e),this._list.insertEntry(e)),e.value},hn.prototype.remove=function(t){var e=this._map[t];void 0!==e&&(delete this._map[t],this._list.remove(e))},hn.prototype.clear=function(){this._list.clear(),this._map={}};var cn={};Y.prototype.get=function(t,e){var r,n=[],i={},a={};"string"==typeof e?n=Array.prototype.slice.call(arguments,1):"[object Object]"==Object.prototype.toString.call(e)?(n=e.textures||[],i=e.vertexDefines||{},a=e.fragmentDefines||{},r=e.precision):Array.isArray(e)&&(n=e);var o=Object.keys(i),s=Object.keys(a);n.sort(),o.sort(),s.sort();var u=[t];u=u.concat(n);for(var l=0;l<o.length;l++)u.push(o[l],i[o[l]]);for(var l=0;l<s.length;l++)u.push(s[l],a[s[l]]);r&&u.push(r);var h=u.join("_");if(this._pool[h])return this._pool[h];var c=cn[t];if(!c)return void console.error('Shader "'+t+'" is not in the library');var f=new Wr({vertex:c.vertex,fragment:c.fragment});r&&(f.precision=r);for(var l=0;l<n.length;l++)f.enableTexture(n[l]);for(var t in i)f.define("vertex",t,i[t]);for(var t in a)f.define("fragment",t,a[t]);return this._pool[h]=f,f},Y.prototype.clear=function(){this._pool={}};var fn=new Y,dn={createLibrary:function(){return new Y},get:function(){return fn.get.apply(fn,arguments)},template:K,clear:function(){return fn.clear()}},_n=":unconfigurable;",mn=["@export qtek.header.directional_light","uniform vec3 directionalLightDirection[DIRECTIONAL_LIGHT_COUNT]"+_n,"uniform vec3 directionalLightColor[DIRECTIONAL_LIGHT_COUNT]"+_n,"@end","@export qtek.header.ambient_light","uniform vec3 ambientLightColor[AMBIENT_LIGHT_COUNT]"+_n,"@end","@export qtek.header.ambient_sh_light","uniform vec3 ambientSHLightColor[AMBIENT_SH_LIGHT_COUNT]"+_n,"uniform vec3 ambientSHLightCoefficients[AMBIENT_SH_LIGHT_COUNT * 9]"+_n,"vec3 calcAmbientSHLight(int idx, vec3 N) {\n    int offset = 9 * idx;\n    return ambientSHLightCoefficients[0]\n        + ambientSHLightCoefficients[1] * N.x\n        + ambientSHLightCoefficients[2] * N.y\n        + ambientSHLightCoefficients[3] * N.z\n        + ambientSHLightCoefficients[4] * N.x * N.z\n        + ambientSHLightCoefficients[5] * N.z * N.y\n        + ambientSHLightCoefficients[6] * N.y * N.x\n        + ambientSHLightCoefficients[7] * (3.0 * N.z * N.z - 1.0)\n        + ambientSHLightCoefficients[8] * (N.x * N.x - N.y * N.y);\n}","@end","@export qtek.header.ambient_cubemap_light","uniform vec3 ambientCubemapLightColor[AMBIENT_CUBEMAP_LIGHT_COUNT]"+_n,"uniform samplerCube ambientCubemapLightCubemap[AMBIENT_CUBEMAP_LIGHT_COUNT]"+_n,"uniform sampler2D ambientCubemapLightBRDFLookup[AMBIENT_CUBEMAP_LIGHT_COUNT]"+_n,"@end","@export qtek.header.point_light","uniform vec3 pointLightPosition[POINT_LIGHT_COUNT]"+_n,"uniform float pointLightRange[POINT_LIGHT_COUNT]"+_n,"uniform vec3 pointLightColor[POINT_LIGHT_COUNT]"+_n,"@end","@export qtek.header.spot_light","uniform vec3 spotLightPosition[SPOT_LIGHT_COUNT]"+_n,"uniform vec3 spotLightDirection[SPOT_LIGHT_COUNT]"+_n,"uniform float spotLightRange[SPOT_LIGHT_COUNT]"+_n,"uniform float spotLightUmbraAngleCosine[SPOT_LIGHT_COUNT]"+_n,"uniform float spotLightPenumbraAngleCosine[SPOT_LIGHT_COUNT]"+_n,"uniform float spotLightFalloffFactor[SPOT_LIGHT_COUNT]"+_n,"uniform vec3 spotLightColor[SPOT_LIGHT_COUNT]"+_n,"@end"].join("\n"),pn="@export qtek.prez.vertex\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\nattribute vec3 position : POSITION;\n@import qtek.chunk.skinning_header\nvoid main()\n{\n    vec3 skinnedPosition = position;\n#ifdef SKINNING\n    @import qtek.chunk.skin_matrix\n    skinnedPosition = (skinMatrixWS * vec4(position, 1.0)).xyz;\n#endif\n    gl_Position = worldViewProjection * vec4(skinnedPosition, 1.0);\n}\n@end\n@export qtek.prez.fragment\nvoid main()\n{\n    gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\n}\n@end";Wr.import(mn),Wr.import(pn);var vn=Bt.mat4,gn=Bt.vec3,yn=vn.create,xn={},Tn=Rt.extend(function(){return{canvas:null,_width:100,_height:100,devicePixelRatio:window.devicePixelRatio||1,clearColor:[0,0,0,0],clearBit:17664,alpha:!0,depth:!0,stencil:!1,antialias:!0,premultipliedAlpha:!0,preserveDrawingBuffer:!1,throwError:!0,gl:null,viewport:{},__currentFrameBuffer:null,_viewportStack:[],_clearStack:[],_sceneRendering:null}},function(){this.canvas||(this.canvas=document.createElement("canvas"));var t=this.canvas;try{var e={alpha:this.alpha,depth:this.depth,stencil:this.stencil,antialias:this.antialias,premultipliedAlpha:this.premultipliedAlpha,preserveDrawingBuffer:this.preserveDrawingBuffer};if(this.gl=t.getContext("webgl",e)||t.getContext("experimental-webgl",e),!this.gl)throw new Error;this._glinfo=new j(this.gl),this.gl.targetRenderer&&console.error("Already created a renderer"),this.gl.targetRenderer=this,this.resize()}catch(t){throw"Error creating WebGL Context "+t}},{resize:function(t,e){var r=this.canvas,n=this.devicePixelRatio;null!=t?(r.style.width=t+"px",r.style.height=e+"px",r.width=t*n,r.height=e*n,this._width=t,this._height=e):(this._width=r.width/n,this._height=r.height/n),this.setViewport(0,0,this._width,this._height)},getWidth:function(){return this._width},getHeight:function(){return this._height},getViewportAspect:function(){var t=this.viewport;return t.width/t.height},setDevicePixelRatio:function(t){this.devicePixelRatio=t,this.resize(this._width,this._height)},getDevicePixelRatio:function(){return this.devicePixelRatio},getGLExtension:function(t){return this._glinfo.getExtension(t)},getGLParameter:function(t){return this._glinfo.getParameter(t)},setViewport:function(t,e,r,n,i){if("object"==typeof t){var a=t;t=a.x,e=a.y,r=a.width,n=a.height,i=a.devicePixelRatio}i=i||this.devicePixelRatio,this.gl.viewport(t*i,e*i,r*i,n*i),this.viewport={x:t,y:e,width:r,height:n,devicePixelRatio:i}},saveViewport:function(){this._viewportStack.push(this.viewport)},restoreViewport:function(){this._viewportStack.length>0&&this.setViewport(this._viewportStack.pop())},saveClear:function(){this._clearStack.push({clearBit:this.clearBit,clearColor:this.clearColor})},restoreClear:function(){if(this._clearStack.length>0){var t=this._clearStack.pop();this.clearColor=t.clearColor,this.clearBit=t.clearBit}},bindSceneRendering:function(t){this._sceneRendering=t},beforeRenderObject:function(){},afterRenderObject:function(){},render:function(t,e,r,n){var i=this.gl;this._sceneRendering=t;var a=this.clearColor;if(this.clearBit){i.colorMask(!0,!0,!0,!0),i.depthMask(!0);var o=this.viewport,s=!1,u=o.devicePixelRatio;(o.width!==this._width||o.height!==this._height||u&&u!==this.devicePixelRatio||o.x||o.y)&&(s=!0,i.enable(i.SCISSOR_TEST),i.scissor(o.x*u,o.y*u,o.width*u,o.height*u)),i.clearColor(a[0],a[1],a[2],a[3]),i.clear(this.clearBit),s&&i.disable(i.SCISSOR_TEST)}r||t.update(!1),e.getScene()||e.update(!0);for(var l=t.opaqueQueue,h=t.transparentQueue,c=t.material,f=0;f<l.length;f++){var d=l[f].material;d.updateShader&&d.updateShader(this)}for(var f=0;f<h.length;f++){var d=h[f].material;d.updateShader&&d.updateShader(this)}if(t.trigger("beforerender",this,t,e),h.length>0)for(var _=yn(),m=gn.create(),f=0;f<h.length;f++){var p=h[f];vn.multiplyAffine(_,e.viewMatrix._array,p.worldTransform._array),gn.transformMat4(m,p.position._array,_),p.__depth=m[2]}l.sort(this.opaqueSortFunc),h.sort(this.transparentSortFunc),t.trigger("beforerender:opaque",this,l),t.viewBoundingBoxLastFrame.min.set(1/0,1/0,1/0),t.viewBoundingBoxLastFrame.max.set(-1/0,-1/0,-1/0),i.disable(i.BLEND),i.enable(i.DEPTH_TEST);var v=this.renderQueue(l,e,c,n);t.trigger("afterrender:opaque",this,l,v),t.trigger("beforerender:transparent",this,h),i.enable(i.BLEND);var g=this.renderQueue(h,e,c);t.trigger("afterrender:transparent",this,h,g);var y={};for(var x in v)y[x]=v[x]+g[x];return t.trigger("afterrender",this,t,e,y),this._sceneRendering=null,y},resetRenderStatus:function(){this._currentShader=null},ifRenderObject:function(t){return!0},renderQueue:function(t,e,r,n){var i={triangleCount:0,vertexCount:0,drawCallCount:0,meshCount:t.length,renderedMeshCount:0},a=this.viewport,o=a.devicePixelRatio,s=[a.x*o,a.y*o,a.width*o,a.height*o],u=this.devicePixelRatio,l=this.__currentFrameBuffer?[this.__currentFrameBuffer.getTextureWidth(),this.__currentFrameBuffer.getTextureHeight()]:[this._width*u,this._height*u],h=[s[2],s[3]],c=Date.now();vn.copy(En.VIEW,e.viewMatrix._array),vn.copy(En.PROJECTION,e.projectionMatrix._array),vn.multiply(En.VIEWPROJECTION,e.projectionMatrix._array,En.VIEW),vn.copy(En.VIEWINVERSE,e.worldTransform._array),vn.invert(En.PROJECTIONINVERSE,En.PROJECTION),vn.invert(En.VIEWPROJECTIONINVERSE,En.VIEWPROJECTION);var f,d,_,m=this.gl,p=this._sceneRendering;n?_=this._renderPreZ(t,p,e):(_=t,m.depthFunc(m.LESS));for(var v,g,y,x,T,E=0;E<_.length;E++){var b=_[E];if(this.ifRenderObject(b)){var S=b.geometry,A=b.isSkinnedMesh()?En.IDENTITY:b.worldTransform._array;if(vn.multiplyAffine(En.WORLDVIEW,En.VIEW,A),!S.boundingBox||n||!this.isFrustumCulled(b,p,e,En.WORLDVIEW,En.PROJECTION)){var N=r||b.material,M=N.shader;vn.copy(En.WORLD,A),vn.multiply(En.WORLDVIEWPROJECTION,En.VIEWPROJECTION,A),(M.matrixSemantics.WORLDINVERSE||M.matrixSemantics.WORLDINVERSETRANSPOSE)&&vn.invert(En.WORLDINVERSE,A),(M.matrixSemantics.WORLDVIEWINVERSE||M.matrixSemantics.WORLDVIEWINVERSETRANSPOSE)&&vn.invert(En.WORLDVIEWINVERSE,En.WORLDVIEW),(M.matrixSemantics.WORLDVIEWPROJECTIONINVERSE||M.matrixSemantics.WORLDVIEWPROJECTIONINVERSETRANSPOSE)&&vn.invert(En.WORLDVIEWPROJECTIONINVERSE,En.WORLDVIEWPROJECTION),b.beforeRender(this),this.beforeRenderObject(b,f,d);if(!M.isEqual(d)){p&&p.isShaderLightNumberChanged(M)&&p.setShaderLightNumber(M);var w=M.bind(this);if(w){if(xn[M.__GUID__])continue;if(xn[M.__GUID__]=!0,this.throwError)throw new Error(w);this.trigger("error",w)}M.setUniformOfSemantic(m,"VIEWPORT",s),M.setUniformOfSemantic(m,"WINDOW_SIZE",l),M.setUniformOfSemantic(m,"NEAR",e.near),M.setUniformOfSemantic(m,"FAR",e.far),M.setUniformOfSemantic(m,"DEVICEPIXELRATIO",o),M.setUniformOfSemantic(m,"TIME",c),M.setUniformOfSemantic(m,"VIEWPORT_SIZE",h),p&&p.setLightUniforms(M,this)}else M=d;f!==N&&(n||(N.depthTest!==v&&(N.depthTest?m.enable(m.DEPTH_TEST):m.disable(m.DEPTH_TEST),v=N.depthTest),N.depthMask!==g&&(m.depthMask(N.depthMask),g=N.depthMask)),N.bind(this,M,f,d),f=N,N.transparent&&(N.blend?N.blend(m):(m.blendEquationSeparate(m.FUNC_ADD,m.FUNC_ADD),m.blendFuncSeparate(m.SRC_ALPHA,m.ONE_MINUS_SRC_ALPHA,m.ONE,m.ONE_MINUS_SRC_ALPHA))));for(var R=M.matrixSemanticKeys,C=0;C<R.length;C++){var L=R[C],P=M.matrixSemantics[L],D=En[L];if(P.isTranspose){var I=En[P.semanticNoTranspose];vn.transpose(D,I)}M.setUniform(m,P.type,P.symbol,D)}b.cullFace!==x&&(x=b.cullFace,m.cullFace(x)),b.frontFace!==T&&(T=b.frontFace,m.frontFace(T)),b.culling!==y&&(y=b.culling,y?m.enable(m.CULL_FACE):m.disable(m.CULL_FACE));var O=b.render(this,M);O&&(i.triangleCount+=O.triangleCount,i.vertexCount+=O.vertexCount,i.drawCallCount+=O.drawCallCount,i.renderedMeshCount++),this.afterRenderObject(b,O),b.afterRender(this,O),d=M}}}return i},_renderPreZ:function(t,e,r){var n=this.gl,i=this._prezMaterial||new Xr({shader:new Wr({vertex:Wr.source("qtek.prez.vertex"),fragment:Wr.source("qtek.prez.fragment")})});this._prezMaterial=i;var a,o,s,u=i.shader,l=[];u.bind(this),n.colorMask(!1,!1,!1,!1),n.depthMask(!0),n.enable(n.DEPTH_TEST);for(var h=0;h<t.length;h++){var c=t[h];if(this.ifRenderObject(c)){
var f=c.isSkinnedMesh()?En.IDENTITY:c.worldTransform._array,d=c.geometry;if(vn.multiplyAffine(En.WORLDVIEW,En.VIEW,f),!(d.boundingBox&&this.isFrustumCulled(c,e,r,En.WORLDVIEW,En.PROJECTION)||(l.push(c),c.skeleton||c.ignorePreZ))){vn.multiply(En.WORLDVIEWPROJECTION,En.VIEWPROJECTION,f),c.cullFace!==o&&(o=c.cullFace,n.cullFace(o)),c.frontFace!==s&&(s=c.frontFace,n.frontFace(s)),c.culling!==a&&(a=c.culling,a?n.enable(n.CULL_FACE):n.disable(n.CULL_FACE));var _=u.matrixSemantics.WORLDVIEWPROJECTION;u.setUniform(n,_.type,_.symbol,En.WORLDVIEWPROJECTION),c.render(this,i.shader)}}}return n.depthFunc(n.LEQUAL),n.colorMask(!0,!0,!0,!0),n.depthMask(!0),l},isFrustumCulled:function(){var t=new Se,e=new ge;return function(r,n,i,a,o){var s=r.boundingBox||r.geometry.boundingBox;if(e._array=a,t.copy(s),t.applyTransform(e),n&&r.isRenderable()&&r.castShadow&&n.viewBoundingBoxLastFrame.union(t),r.frustumCulling&&!r.isSkinnedMesh()){if(!t.intersectBoundingBox(i.frustum.boundingBox))return!0;e._array=o,t.max._array[2]>0&&t.min._array[2]<0&&(t.max._array[2]=-1e-20),t.applyProjection(e);var u=t.min._array,l=t.max._array;if(l[0]<-1||u[0]>1||l[1]<-1||u[1]>1||l[2]<-1||u[2]>1)return!0}return!1}}(),disposeScene:function(t){this.disposeNode(t,!0,!0),t.dispose()},disposeNode:function(t,e,r){var n={};t.getParent()&&t.getParent().remove(t),t.traverse(function(t){t.geometry&&e&&t.geometry.dispose(this),t.material&&(n[t.material.__GUID__]=t.material),t.dispose&&t.dispose(this)},this);for(var i in n){n[i].dispose(this,r)}},disposeShader:function(t){t.dispose(this)},disposeGeometry:function(t){t.dispose(this)},disposeTexture:function(t){t.dispose(this)},disposeFrameBuffer:function(t){t.dispose(this)},dispose:function(){},screenToNDC:function(t,e,r){r||(r=new Gt),e=this._height-e;var n=this.viewport,i=r._array;return i[0]=(t-n.x)/n.width,i[0]=2*i[0]-1,i[1]=(e-n.y)/n.height,i[1]=2*i[1]-1,r}});Tn.opaqueSortFunc=Tn.prototype.opaqueSortFunc=function(t,e){return t.renderOrder===e.renderOrder?t.material.shader===e.material.shader?t.material===e.material?t.geometry.__GUID__-e.geometry.__GUID__:t.material.__GUID__-e.material.__GUID__:t.material.shader.__GUID__-e.material.shader.__GUID__:t.renderOrder-e.renderOrder},Tn.transparentSortFunc=Tn.prototype.transparentSortFunc=function(t,e){return t.renderOrder===e.renderOrder?t.__depth===e.__depth?t.material.shader===e.material.shader?t.material===e.material?t.geometry.__GUID__-e.geometry.__GUID__:t.material.__GUID__-e.material.__GUID__:t.material.shader.__GUID__-e.material.shader.__GUID__:t.__depth-e.__depth:t.renderOrder-e.renderOrder};var En={IDENTITY:yn(),WORLD:yn(),VIEW:yn(),PROJECTION:yn(),WORLDVIEW:yn(),VIEWPROJECTION:yn(),WORLDVIEWPROJECTION:yn(),WORLDINVERSE:yn(),VIEWINVERSE:yn(),PROJECTIONINVERSE:yn(),WORLDVIEWINVERSE:yn(),VIEWPROJECTIONINVERSE:yn(),WORLDVIEWPROJECTIONINVERSE:yn(),WORLDTRANSPOSE:yn(),VIEWTRANSPOSE:yn(),PROJECTIONTRANSPOSE:yn(),WORLDVIEWTRANSPOSE:yn(),VIEWPROJECTIONTRANSPOSE:yn(),WORLDVIEWPROJECTIONTRANSPOSE:yn(),WORLDINVERSETRANSPOSE:yn(),VIEWINVERSETRANSPOSE:yn(),PROJECTIONINVERSETRANSPOSE:yn(),WORLDVIEWINVERSETRANSPOSE:yn(),VIEWPROJECTIONINVERSETRANSPOSE:yn(),WORLDVIEWPROJECTIONINVERSETRANSPOSE:yn()};Tn.COLOR_BUFFER_BIT=je.COLOR_BUFFER_BIT,Tn.DEPTH_BUFFER_BIT=je.DEPTH_BUFFER_BIT,Tn.STENCIL_BUFFER_BIT=je.STENCIL_BUFFER_BIT;Wr.import("@export qtek.deferred.gbuffer.vertex\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\nuniform mat4 worldInverseTranspose : WORLDINVERSETRANSPOSE;\nuniform mat4 world : WORLD;\nuniform vec2 uvRepeat;\nuniform vec2 uvOffset;\nattribute vec3 position : POSITION;\nattribute vec2 texcoord : TEXCOORD_0;\n#ifdef FIRST_PASS\nattribute vec3 normal : NORMAL;\n#endif\n@import qtek.chunk.skinning_header\n#ifdef FIRST_PASS\nvarying vec3 v_Normal;\nattribute vec4 tangent : TANGENT;\nvarying vec3 v_Tangent;\nvarying vec3 v_Bitangent;\nvarying vec3 v_WorldPosition;\n#endif\nvarying vec2 v_Texcoord;\nvoid main()\n{\n    vec3 skinnedPosition = position;\n#ifdef FIRST_PASS\n    vec3 skinnedNormal = normal;\n    vec3 skinnedTangent = tangent.xyz;\n    bool hasTangent = dot(tangent, tangent) > 0.0;\n#endif\n#ifdef SKINNING\n    @import qtek.chunk.skin_matrix\n    skinnedPosition = (skinMatrixWS * vec4(position, 1.0)).xyz;\n    #ifdef FIRST_PASS\n    skinnedNormal = (skinMatrixWS * vec4(normal, 0.0)).xyz;\n    if (hasTangent) {\n        skinnedTangent = (skinMatrixWS * vec4(tangent.xyz, 0.0)).xyz;\n    }\n    #endif\n#endif\n    gl_Position = worldViewProjection * vec4(skinnedPosition, 1.0);\n    v_Texcoord = texcoord * uvRepeat + uvOffset;\n#ifdef FIRST_PASS\n    v_Normal = normalize((worldInverseTranspose * vec4(skinnedNormal, 0.0)).xyz);\n    if (hasTangent) {\n        v_Tangent = normalize((worldInverseTranspose * vec4(skinnedTangent, 0.0)).xyz);\n        v_Bitangent = normalize(cross(v_Normal, v_Tangent) * tangent.w);\n    }\n    v_WorldPosition = (world * vec4(skinnedPosition, 1.0)).xyz;\n#endif\n}\n@end\n@export qtek.deferred.gbuffer1.fragment\nuniform mat4 viewInverse : VIEWINVERSE;\nuniform float glossiness;\nvarying vec2 v_Texcoord;\nvarying vec3 v_Normal;\nvarying vec3 v_WorldPosition;\nuniform sampler2D normalMap;\nvarying vec3 v_Tangent;\nvarying vec3 v_Bitangent;\nuniform sampler2D roughGlossMap;\nuniform bool useRoughGlossMap;\nuniform bool useRoughness;\nuniform bool doubleSided;\nuniform int roughGlossChannel: 0;\nfloat indexingTexel(in vec4 texel, in int idx) {\n    if (idx == 3) return texel.a;\n    else if (idx == 1) return texel.g;\n    else if (idx == 2) return texel.b;\n    else return texel.r;\n}\nvoid main()\n{\n    vec3 N = v_Normal;\n    if (doubleSided) {\n        vec3 eyePos = viewInverse[3].xyz;\n        vec3 V = eyePos - v_WorldPosition;\n        if (dot(N, V) < 0.0) {\n            N = -N;\n        }\n    }\n    if (dot(v_Tangent, v_Tangent) > 0.0) {\n        vec3 normalTexel = texture2D(normalMap, v_Texcoord).xyz;\n        if (dot(normalTexel, normalTexel) > 0.0) {            N = normalTexel * 2.0 - 1.0;\n            mat3 tbn = mat3(v_Tangent, v_Bitangent, v_Normal);\n            N = normalize(tbn * N);\n        }\n    }\n    gl_FragColor.rgb = (N + 1.0) * 0.5;\n    float g = glossiness;\n    if (useRoughGlossMap) {\n        float g2 = indexingTexel(texture2D(roughGlossMap, v_Texcoord), roughGlossChannel);\n        if (useRoughness) {\n            g2 = 1.0 - g2;\n        }\n        g = clamp(g2 + (g - 0.5) * 2.0, 0.0, 1.0);\n    }\n    gl_FragColor.a = g;\n}\n@end\n@export qtek.deferred.gbuffer2.fragment\nuniform sampler2D diffuseMap;\nuniform sampler2D metalnessMap;\nuniform vec3 color;\nuniform float metalness;\nuniform bool useMetalnessMap;\nuniform bool linear;\nvarying vec2 v_Texcoord;\n@import qtek.util.srgb\nvoid main ()\n{\n    float m = metalness;\n    if (useMetalnessMap) {\n        vec4 metalnessTexel = texture2D(metalnessMap, v_Texcoord);\n        m = clamp(metalnessTexel.r + (m * 2.0 - 1.0), 0.0, 1.0);\n    }\n    vec4 texel = texture2D(diffuseMap, v_Texcoord);\n    if (linear) {\n        texel = sRGBToLinear(texel);\n    }\n    gl_FragColor.rgb = texel.rgb * color;\n    gl_FragColor.a = m;\n}\n@end\n@export qtek.deferred.gbuffer.debug\n@import qtek.deferred.chunk.light_head\nuniform int debug: 0;\nvoid main ()\n{\n    @import qtek.deferred.chunk.gbuffer_read\n    if (debug == 0) {\n        gl_FragColor = vec4(N, 1.0);\n    }\n    else if (debug == 1) {\n        gl_FragColor = vec4(vec3(z), 1.0);\n    }\n    else if (debug == 2) {\n        gl_FragColor = vec4(position, 1.0);\n    }\n    else if (debug == 3) {\n        gl_FragColor = vec4(vec3(glossiness), 1.0);\n    }\n    else if (debug == 4) {\n        gl_FragColor = vec4(vec3(metalness), 1.0);\n    }\n    else {\n        gl_FragColor = vec4(albedo, 1.0);\n    }\n}\n@end"),Wr.import("@export qtek.deferred.chunk.light_head\nuniform sampler2D gBufferTexture1;\nuniform sampler2D gBufferTexture2;\nuniform sampler2D gBufferTexture3;\nuniform vec2 windowSize: WINDOW_SIZE;\nuniform vec4 viewport: VIEWPORT;\nuniform mat4 viewProjectionInv;\n#ifdef DEPTH_ENCODED\n@import qtek.util.decode_float\n#endif\n@end\n@export qtek.deferred.chunk.gbuffer_read\n    vec2 uv = gl_FragCoord.xy / windowSize;\n    vec2 uv2 = (gl_FragCoord.xy - viewport.xy) / viewport.zw;\n    vec4 texel1 = texture2D(gBufferTexture1, uv);\n    vec4 texel3 = texture2D(gBufferTexture3, uv);\n    if (dot(texel1.rgb, vec3(1.0)) == 0.0) {\n        discard;\n    }\n    float glossiness = texel1.a;\n    float metalness = texel3.a;\n    vec3 N = texel1.rgb * 2.0 - 1.0;\n    float z = texture2D(gBufferTexture2, uv).r * 2.0 - 1.0;\n    vec2 xy = uv2 * 2.0 - 1.0;\n    vec4 projectedPos = vec4(xy, z, 1.0);\n    vec4 p4 = viewProjectionInv * projectedPos;\n    vec3 position = p4.xyz / p4.w;\n    vec3 albedo = texel3.rgb;\n    vec3 diffuseColor = albedo * (1.0 - metalness);\n    vec3 specularColor = mix(vec3(0.04), albedo, metalness);\n@end\n@export qtek.deferred.chunk.light_equation\nfloat D_Phong(in float g, in float ndh) {\n    float a = pow(8192.0, g);\n    return (a + 2.0) / 8.0 * pow(ndh, a);\n}\nfloat D_GGX(in float g, in float ndh) {\n    float r = 1.0 - g;\n    float a = r * r;\n    float tmp = ndh * ndh * (a - 1.0) + 1.0;\n    return a / (3.1415926 * tmp * tmp);\n}\nvec3 F_Schlick(in float ndv, vec3 spec) {\n    return spec + (1.0 - spec) * pow(1.0 - ndv, 5.0);\n}\nvec3 lightEquation(\n    in vec3 lightColor, in vec3 diffuseColor, in vec3 specularColor,\n    in float ndl, in float ndh, in float ndv, in float g\n)\n{\n    return ndl * lightColor\n        * (diffuseColor + D_Phong(g, ndh) * F_Schlick(ndv, specularColor));\n}\n@end");var bn=Rt.extend(function(){return{enableTargetTexture1:!0,enableTargetTexture2:!0,enableTargetTexture3:!0,_renderQueue:[],_gBufferTex1:new or({minFilter:nr.NEAREST,magFilter:nr.NEAREST,type:nr.HALF_FLOAT}),_gBufferTex2:new or({minFilter:nr.NEAREST,magFilter:nr.NEAREST,format:nr.DEPTH_STENCIL,type:nr.UNSIGNED_INT_24_8_WEBGL}),_gBufferTex3:new or({minFilter:nr.NEAREST,magFilter:nr.NEAREST}),_defaultNormalMap:new or({image:Q("#000")}),_defaultRoughnessMap:new or({image:Q("#fff")}),_defaultMetalnessMap:new or({image:Q("#fff")}),_defaultDiffuseMap:new or({image:Q("#fff")}),_frameBuffer:new vr,_gBufferMaterials:{},_debugPass:new rn({fragment:Wr.source("qtek.deferred.gbuffer.debug")})}},{resize:function(t,e){this._gBufferTex1.width===t&&this._gBufferTex1.height===e||(this._gBufferTex1.width=t,this._gBufferTex1.height=e,this._gBufferTex2.width=t,this._gBufferTex2.height=e,this._gBufferTex3.width=t,this._gBufferTex3.height=e)},setViewport:function(t,e,r,n,i){var a;a="object"==typeof t?t:{x:t,y:e,width:r,height:n,devicePixelRatio:i||1},this._frameBuffer.viewport=a},getViewport:function(){return this._frameBuffer.viewport?this._frameBuffer.viewport:{x:0,y:0,width:this._gBufferTex1.width,height:this._gBufferTex1.height,devicePixelRatio:1}},update:function(t,e,r){for(var n=t.gl,i=this._frameBuffer,a=i.viewport,o=e.opaqueQueue,s=e.transparentQueue,u=t.beforeRenderObject,l=0;l<o.length;l++){var h=o[l].material;h.updateShader&&h.updateShader(t)}for(var l=0;l<s.length;l++){var h=s[l].material;h.updateShader&&h.updateShader(t)}o.sort(Tn.opaqueSortFunc),s.sort(Tn.transparentSortFunc);for(var c=0,f=this._renderQueue,l=0;l<o.length;l++)o[l].ignoreGBuffer||(f[c++]=o[l]);for(var l=0;l<s.length;l++)s[l].ignoreGBuffer||(f[c++]=s[l]);f.length=c,n.clearColor(0,0,0,0),n.depthMask(!0),n.colorMask(!0,!0,!0,!0),n.disable(n.BLEND);var d=this.enableTargetTexture1,_=this.enableTargetTexture2,m=this.enableTargetTexture3;if(d||m||(console.warn("Can't disable targetTexture1 targetTexture3 both"),d=!0),_&&i.attach(this._gBufferTex2,t.gl.DEPTH_STENCIL_ATTACHMENT),t.bindSceneRendering(e),d){if(i.attach(this._gBufferTex1),i.bind(t),a){var p=a.devicePixelRatio;n.enable(n.SCISSOR_TEST),n.scissor(a.x*p,a.y*p,a.width*p,a.height*p)}n.clear(n.COLOR_BUFFER_BIT|n.DEPTH_BUFFER_BIT),a&&n.disable(n.SCISSOR_TEST),this._resetGBufferMaterials(),this._replaceGBufferMat(f,1),t.beforeRenderObject=J(n,this._defaultNormalMap,this._defaultRoughnessMap),t.renderQueue(f,r)}if(m){if(i.attach(this._gBufferTex3),i.bind(t),a){var p=a.devicePixelRatio;n.enable(n.SCISSOR_TEST),n.scissor(a.x*p,a.y*p,a.width*p,a.height*p)}n.clear(n.COLOR_BUFFER_BIT|n.DEPTH_BUFFER_BIT),a&&n.disable(n.SCISSOR_TEST),this._replaceGBufferMat(f,2),t.beforeRenderObject=$(n,this._defaultDiffuseMap,this._defaultMetalnessMap),t.renderQueue(f,r)}t.bindSceneRendering(null),t.beforeRenderObject=u,this._cleanGBufferMaterials(t),this._restoreMaterial(f),i.unbind(t)},renderDebug:function(t,e,r,n){var i={normal:0,depth:1,position:2,glossiness:3,metalness:4,albedo:5};null==i[r]&&(console.warn('Unkown type "'+r+'"'),r="normal"),t.saveClear(),t.saveViewport(),t.clearBit=t.gl.DEPTH_BUFFER_BIT,n&&t.setViewport(n);var a=new ge;ge.multiply(a,e.worldTransform,e.invProjectionMatrix);var o=this._debugPass;o.setUniform("viewportSize",[t.getWidth(),t.getHeight()]),o.setUniform("gBufferTexture1",this._gBufferTex1),o.setUniform("gBufferTexture2",this._gBufferTex2),o.setUniform("gBufferTexture3",this._gBufferTex3),o.setUniform("debug",i[r]),o.setUniform("viewProjectionInv",a._array),o.render(t),t.restoreViewport(),t.restoreClear()},getTargetTexture1:function(){return this._gBufferTex1},getTargetTexture2:function(){return this._gBufferTex2},getTargetTexture3:function(){return this._gBufferTex3},_getMaterial:function(t){var e=this._gBufferMaterials,r=e[t];if(!r){var n=new Xr({shader:new Wr({vertex:Wr.source("qtek.deferred.gbuffer.vertex"),fragment:Wr.source("qtek.deferred.gbuffer1.fragment")})}),i=new Xr({shader:new Wr({vertex:Wr.source("qtek.deferred.gbuffer.vertex"),fragment:Wr.source("qtek.deferred.gbuffer2.fragment")})});n.shader.define("vertex","FIRST_PASS"),t>0&&(n.shader.define("vertex","SKINNING"),n.shader.define("vertex","JOINT_COUNT",t),i.shader.define("vertex","SKINNING"),i.shader.define("vertex","JOINT_COUNT",t)),r={material1:n,material2:i},e[t]=r}return r.used=!0,r},_resetGBufferMaterials:function(){for(var t in this._gBufferMaterials)this._gBufferMaterials[t].used=!1},_cleanGBufferMaterials:function(t){for(var e in this._gBufferMaterials){var r=this._gBufferMaterials[e];r.used||(r.material1.dispose(t),r.material2.dispose(t))}},_replaceGBufferMat:function(t,e){for(var r=0;r<t.length;r++){var n=t[r];1===e&&(n.__standardMat=n.material);var i=this._getMaterial(n.joints?n.joints.length:0,!1);n.material=1===e?i.material1:i.material2}},_restoreMaterial:function(t){for(var e=0;e<t.length;e++){var r=t[e];r.__standardMat&&(r.material=r.__standardMat)}},dispose:function(t){for(var e in this._gBufferMaterials){var r=this._gBufferMaterials[e];r.material1.dispose(t),r.material2.dispose(t)}}}),Sn=Mr.extend({dynamic:!1,widthSegments:20,heightSegments:20,phiStart:0,phiLength:2*Math.PI,thetaStart:0,thetaLength:Math.PI,radius:1},function(){this.build()},{build:function(){var t=this.heightSegments,e=this.widthSegments,r=this.attributes.position,n=this.attributes.texcoord0,i=this.attributes.normal,a=(e+1)*(t+1);r.init(a),n.init(a),i.init(a);var o,s,u,l,h,c,f,d=a>65535?Uint32Array:Uint16Array,_=this.indices=new d(e*t*6),m=this.radius,p=this.phiStart,v=this.phiLength,g=this.thetaStart,y=this.thetaLength,m=this.radius,x=[],T=[],E=0,b=1/m;for(f=0;f<=t;f++)for(c=0;c<=e;c++)l=c/e,h=f/t,o=-m*Math.cos(p+l*v)*Math.sin(g+h*y),s=m*Math.cos(g+h*y),u=m*Math.sin(p+l*v)*Math.sin(g+h*y),x[0]=o,x[1]=s,x[2]=u,T[0]=l,T[1]=h,r.set(E,x),n.set(E,T),x[0]*=b,x[1]*=b,x[2]*=b,i.set(E,x),E++;var S,A,N,M,w=e+1,R=0;for(f=0;f<t;f++)for(c=0;c<e;c++)A=f*w+c,S=f*w+c+1,M=(f+1)*w+c+1,N=(f+1)*w+c,_[R++]=S,_[R++]=A,_[R++]=M,_[R++]=A,_[R++]=N,_[R++]=M;this.boundingBox=new Se,this.boundingBox.max.set(m,m,m),this.boundingBox.min.set(-m,-m,-m)}}),An=Bt.vec3,Nn=Bt.vec2,Mn=Mr.extend({dynamic:!1,topRadius:0,bottomRadius:1,height:2,capSegments:20,heightSegments:1},function(){this.build()},{build:function(){var t=[],e=[],r=[];t.length=0,e.length=0,r.length=0;for(var n=2*Math.PI/this.capSegments,i=[],a=[],o=this.topRadius,s=this.bottomRadius,u=this.height/2,l=An.fromValues(0,u,0),h=An.fromValues(0,-u,0),c=0;c<this.capSegments;c++){var f=c*n,d=o*Math.sin(f),_=o*Math.cos(f);i.push(An.fromValues(d,u,_)),d=s*Math.sin(f),_=s*Math.cos(f),a.push(An.fromValues(d,-u,_))}t.push(l),e.push(Nn.fromValues(0,1));for(var m=this.capSegments,c=0;c<m;c++)t.push(i[c]),e.push(Nn.fromValues(c/m,0)),r.push([0,c+1,(c+1)%m+1]);var p=t.length;t.push(h),e.push(Nn.fromValues(0,1));for(var c=0;c<m;c++)t.push(a[c]),e.push(Nn.fromValues(c/m,0)),r.push([p,p+((c+1)%m+1),p+c+1]);p=t.length;for(var v=this.heightSegments,c=0;c<m;c++)for(var g=0;g<v+1;g++){var y=g/v;t.push(An.lerp(An.create(),i[c],a[c],y)),e.push(Nn.fromValues(c/m,y))}for(var c=0;c<m;c++)for(var g=0;g<v;g++){var x=c*(v+1)+g,T=(c+1)%m*(v+1)+g,E=(c+1)%m*(v+1)+g+1,b=c*(v+1)+g+1;r.push([p+T,p+x,p+b]),r.push([p+b,p+E,p+T])}this.attributes.position.fromArray(t),this.attributes.texcoord0.fromArray(e),this.initIndicesFromArray(r),this.generateVertexNormals(),this.boundingBox=new Se;var S=Math.max(this.topRadius,this.bottomRadius);this.boundingBox.min.set(-S,-this.height/2,-S),this.boundingBox.max.set(S,this.height/2,S)}}),wn=Mr.extend({dynamic:!1,radius:1,height:2,capSegments:50,heightSegments:1},function(){this.build()},{build:function(){var t=new Mn({topRadius:this.radius,bottomRadius:this.radius,capSegments:this.capSegments,heightSegments:this.heightSegments,height:this.height});this.attributes.position.value=t.attributes.position.value,this.attributes.normal.value=t.attributes.normal.value,this.attributes.texcoord0.value=t.attributes.texcoord0.value,this.indices=t.indices,this.boundingBox=t.boundingBox}}),Rn="\n@export qtek.util.rand\nhighp float rand(vec2 uv) {\n    const highp float a = 12.9898, b = 78.233, c = 43758.5453;\n    highp float dt = dot(uv.xy, vec2(a,b)), sn = mod(dt, 3.141592653589793);\n    return fract(sin(sn) * c);\n}\n@end\n@export qtek.util.calculate_attenuation\nuniform float attenuationFactor : 5.0;\nfloat lightAttenuation(float dist, float range)\n{\n    float attenuation = 1.0;\n    attenuation = dist*dist/(range*range+1.0);\n    float att_s = attenuationFactor;\n    attenuation = 1.0/(attenuation*att_s+1.0);\n    att_s = 1.0/(att_s+1.0);\n    attenuation = attenuation - att_s;\n    attenuation /= 1.0 - att_s;\n    return clamp(attenuation, 0.0, 1.0);\n}\n@end\n@export qtek.util.edge_factor\nfloat edgeFactor(float width)\n{\n    vec3 d = fwidth(v_Barycentric);\n    vec3 a3 = smoothstep(vec3(0.0), d * width, v_Barycentric);\n    return min(min(a3.x, a3.y), a3.z);\n}\n@end\n@export qtek.util.encode_float\nvec4 encodeFloat(const in float depth)\n{\n    const vec4 bitShifts = vec4(256.0*256.0*256.0, 256.0*256.0, 256.0, 1.0);\n    const vec4 bit_mask  = vec4(0.0, 1.0/256.0, 1.0/256.0, 1.0/256.0);\n    vec4 res = fract(depth * bitShifts);\n    res -= res.xxyz * bit_mask;\n    return res;\n}\n@end\n@export qtek.util.decode_float\nfloat decodeFloat(const in vec4 color)\n{\n    const vec4 bitShifts = vec4(1.0/(256.0*256.0*256.0), 1.0/(256.0*256.0), 1.0/256.0, 1.0);\n    return dot(color, bitShifts);\n}\n@end\n@export qtek.util.float\n@import qtek.util.encode_float\n@import qtek.util.decode_float\n@end\n@export qtek.util.rgbm_decode\nvec3 RGBMDecode(vec4 rgbm, float range) {\n  return range * rgbm.rgb * rgbm.a;\n}\n@end\n@export qtek.util.rgbm_encode\nvec4 RGBMEncode(vec3 color, float range) {\n    if (dot(color, color) == 0.0) {\n        return vec4(0.0);\n    }\n    vec4 rgbm;\n    color /= range;\n    rgbm.a = clamp(max(max(color.r, color.g), max(color.b, 1e-6)), 0.0, 1.0);\n    rgbm.a = ceil(rgbm.a * 255.0) / 255.0;\n    rgbm.rgb = color / rgbm.a;\n    return rgbm;\n}\n@end\n@export qtek.util.rgbm\n@import qtek.util.rgbm_decode\n@import qtek.util.rgbm_encode\nvec4 decodeHDR(vec4 color)\n{\n#if defined(RGBM_DECODE) || defined(RGBM)\n    return vec4(RGBMDecode(color, 51.5), 1.0);\n#else\n    return color;\n#endif\n}\nvec4 encodeHDR(vec4 color)\n{\n#if defined(RGBM_ENCODE) || defined(RGBM)\n    return RGBMEncode(color.xyz, 51.5);\n#else\n    return color;\n#endif\n}\n@end\n@export qtek.util.srgb\nvec4 sRGBToLinear(in vec4 value) {\n    return vec4(mix(pow(value.rgb * 0.9478672986 + vec3(0.0521327014), vec3(2.4)), value.rgb * 0.0773993808, vec3(lessThanEqual(value.rgb, vec3(0.04045)))), value.w);\n}\nvec4 linearTosRGB(in vec4 value) {\n    return vec4(mix(pow(value.rgb, vec3(0.41666)) * 1.055 - vec3(0.055), value.rgb * 12.92, vec3(lessThanEqual(value.rgb, vec3(0.0031308)))), value.w);\n}\n@end\n@export qtek.chunk.skinning_header\n#ifdef SKINNING\nattribute vec3 weight : WEIGHT;\nattribute vec4 joint : JOINT;\n#ifdef USE_SKIN_MATRICES_TEXTURE\nuniform sampler2D skinMatricesTexture;\nuniform float skinMatricesTextureSize: unconfigurable;\nmat4 getSkinMatrix(float idx) {\n    float j = idx * 4.0;\n    float x = mod(j, skinMatricesTextureSize);\n    float y = floor(j / skinMatricesTextureSize) + 0.5;\n    vec2 scale = vec2(skinMatricesTextureSize);\n    return mat4(\n        texture2D(skinMatricesTexture, vec2(x + 0.5, y) / scale),\n        texture2D(skinMatricesTexture, vec2(x + 1.5, y) / scale),\n        texture2D(skinMatricesTexture, vec2(x + 2.5, y) / scale),\n        texture2D(skinMatricesTexture, vec2(x + 3.5, y) / scale)\n    );\n}\n#else\nuniform mat4 skinMatrix[JOINT_COUNT] : SKIN_MATRIX;\nmat4 getSkinMatrix(float idx) {\n    return skinMatrix[int(idx)];\n}\n#endif\n#endif\n@end\n@export qtek.chunk.skin_matrix\nmat4 skinMatrixWS = getSkinMatrix(joint.x) * weight.x;\nif (weight.y > 1e-4)\n{\n    skinMatrixWS += getSkinMatrix(joint.y) * weight.y;\n}\nif (weight.z > 1e-4)\n{\n    skinMatrixWS += getSkinMatrix(joint.z) * weight.z;\n}\nfloat weightW = 1.0-weight.x-weight.y-weight.z;\nif (weightW > 1e-4)\n{\n    skinMatrixWS += getSkinMatrix(joint.w) * weightW;\n}\n@end\n@export qtek.util.parallax_correct\nvec3 parallaxCorrect(in vec3 dir, in vec3 pos, in vec3 boxMin, in vec3 boxMax) {\n    vec3 first = (boxMax - pos) / dir;\n    vec3 second = (boxMin - pos) / dir;\n    vec3 further = max(first, second);\n    float dist = min(further.x, min(further.y, further.z));\n    vec3 fixedPos = pos + dir * dist;\n    vec3 boxCenter = (boxMax + boxMin) * 0.5;\n    return normalize(fixedPos - boxCenter);\n}\n@end\n@export qtek.util.clamp_sample\nvec4 clampSample(const in sampler2D texture, const in vec2 coord)\n{\n#ifdef STEREO\n    float eye = step(0.5, coord.x) * 0.5;\n    vec2 coordClamped = clamp(coord, vec2(eye, 0.0), vec2(0.5 + eye, 1.0));\n#else\n    vec2 coordClamped = clamp(coord, vec2(0.0), vec2(1.0));\n#endif\n    return texture2D(texture, coordClamped);\n}\n@end";Wr.import(pn),Wr.import(Rn),Wr.import("@export qtek.deferred.light_volume.vertex\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\nattribute vec3 position : POSITION;\nvarying vec3 v_Position;\nvoid main()\n{\n    gl_Position = worldViewProjection * vec4(position, 1.0);\n    v_Position = position;\n}\n@end"),Wr.import("@export qtek.deferred.spot_light\n@import qtek.deferred.chunk.light_head\n@import qtek.deferred.chunk.light_equation\n@import qtek.util.calculate_attenuation\nuniform vec3 lightPosition;\nuniform vec3 lightDirection;\nuniform vec3 lightColor;\nuniform float umbraAngleCosine;\nuniform float penumbraAngleCosine;\nuniform float lightRange;\nuniform float falloffFactor;\nuniform vec3 eyePosition;\n#ifdef SHADOWMAP_ENABLED\nuniform sampler2D lightShadowMap;\nuniform mat4 lightMatrix;\nuniform float lightShadowMapSize;\n#endif\n@import qtek.plugin.shadow_map_common\nvoid main()\n{\n    @import qtek.deferred.chunk.gbuffer_read\n    vec3 L = lightPosition - position;\n    vec3 V = normalize(eyePosition - position);\n    float dist = length(L);\n    L /= dist;\n    float attenuation = lightAttenuation(dist, lightRange);\n    float c = dot(-normalize(lightDirection), L);\n    float falloff = clamp((c - umbraAngleCosine) / (penumbraAngleCosine - umbraAngleCosine), 0.0, 1.0);\n    falloff = pow(falloff, falloffFactor);\n    vec3 H = normalize(L + V);\n    float ndl = clamp(dot(N, L), 0.0, 1.0);\n    float ndh = clamp(dot(N, H), 0.0, 1.0);\n    float ndv = clamp(dot(N, V), 0.0, 1.0);\n    gl_FragColor.rgb = (1.0 - falloff) * attenuation * lightEquation(\n        lightColor, diffuseColor, specularColor, ndl, ndh, ndv, glossiness\n    );\n#ifdef SHADOWMAP_ENABLED\n    float shadowContrib = computeShadowContrib(\n        lightShadowMap, lightMatrix, position, lightShadowMapSize\n    );\n    gl_FragColor.rgb *= shadowContrib;\n#endif\n    gl_FragColor.a = 1.0;\n}\n@end\n"),Wr.import("@export qtek.deferred.directional_light\n@import qtek.deferred.chunk.light_head\n@import qtek.deferred.chunk.light_equation\nuniform vec3 lightDirection;\nuniform vec3 lightColor;\nuniform vec3 eyePosition;\n#ifdef SHADOWMAP_ENABLED\nuniform sampler2D lightShadowMap;\nuniform float lightShadowMapSize;\nuniform mat4 lightMatrices[SHADOW_CASCADE];\nuniform float shadowCascadeClipsNear[SHADOW_CASCADE];\nuniform float shadowCascadeClipsFar[SHADOW_CASCADE];\n#endif\n@import qtek.plugin.shadow_map_common\nvoid main()\n{\n    @import qtek.deferred.chunk.gbuffer_read\n    vec3 L = -normalize(lightDirection);\n    vec3 V = normalize(eyePosition - position);\n    vec3 H = normalize(L + V);\n    float ndl = clamp(dot(N, L), 0.0, 1.0);\n    float ndh = clamp(dot(N, H), 0.0, 1.0);\n    float ndv = clamp(dot(N, V), 0.0, 1.0);\n    gl_FragColor.rgb = lightEquation(\n        lightColor, diffuseColor, specularColor, ndl, ndh, ndv, glossiness\n    );\n#ifdef SHADOWMAP_ENABLED\n    float shadowContrib = 1.0;\n    for (int _idx_ = 0; _idx_ < SHADOW_CASCADE; _idx_++) {{\n        if (\n            z >= shadowCascadeClipsNear[_idx_] &&\n            z <= shadowCascadeClipsFar[_idx_]\n        ) {\n            shadowContrib = computeShadowContrib(\n                lightShadowMap, lightMatrices[_idx_], position, lightShadowMapSize,\n                vec2(1.0 / float(SHADOW_CASCADE), 1.0),\n                vec2(float(_idx_) / float(SHADOW_CASCADE), 0.0)\n            );\n        }\n    }}\n    gl_FragColor.rgb *= shadowContrib;\n#endif\n    gl_FragColor.a = 1.0;\n}\n@end\n"),Wr.import("@export qtek.deferred.ambient_light\nuniform sampler2D gBufferTexture1;\nuniform sampler2D gBufferTexture3;\nuniform vec3 lightColor;\nuniform vec2 windowSize: WINDOW_SIZE;\nvoid main()\n{\n    vec2 uv = gl_FragCoord.xy / windowSize;\n    vec4 texel1 = texture2D(gBufferTexture1, uv);\n    if (dot(texel1.rgb, vec3(1.0)) == 0.0) {\n        discard;\n    }\n    vec3 albedo = texture2D(gBufferTexture3, uv).rgb;\n    gl_FragColor.rgb = lightColor * albedo;\n    gl_FragColor.a = 1.0;\n}\n@end"),Wr.import("@export qtek.deferred.ambient_sh_light\nuniform sampler2D gBufferTexture1;\nuniform sampler2D gBufferTexture3;\nuniform vec3 lightColor;\nuniform vec3 lightCoefficients[9];\nuniform vec2 windowSize: WINDOW_SIZE;\nvec3 calcAmbientSHLight(vec3 N) {\n    return lightCoefficients[0]\n        + lightCoefficients[1] * N.x\n        + lightCoefficients[2] * N.y\n        + lightCoefficients[3] * N.z\n        + lightCoefficients[4] * N.x * N.z\n        + lightCoefficients[5] * N.z * N.y\n        + lightCoefficients[6] * N.y * N.x\n        + lightCoefficients[7] * (3.0 * N.z * N.z - 1.0)\n        + lightCoefficients[8] * (N.x * N.x - N.y * N.y);\n}\nvoid main()\n{\n    vec2 uv = gl_FragCoord.xy / windowSize;\n    vec4 texel1 = texture2D(gBufferTexture1, uv);\n    if (dot(texel1.rgb, vec3(1.0)) == 0.0) {\n        discard;\n    }\n    vec3 N = texel1.rgb * 2.0 - 1.0;\n    vec3 albedo = texture2D(gBufferTexture3, uv).rgb;\n    gl_FragColor.rgb = lightColor * albedo * calcAmbientSHLight(N);\n    gl_FragColor.a = 1.0;\n}\n@end"),Wr.import("@export qtek.deferred.ambient_cubemap_light\n@import qtek.deferred.chunk.light_head\nuniform vec3 lightColor;\nuniform samplerCube lightCubemap;\nuniform sampler2D brdfLookup;\nuniform vec3 eyePosition;\n@import qtek.util.rgbm\nvoid main()\n{\n    @import qtek.deferred.chunk.gbuffer_read\n    vec3 V = normalize(eyePosition - position);\n    vec3 L = reflect(-V, N);\n    float ndv = clamp(dot(N, V), 0.0, 1.0);\n    float rough = clamp(1.0 - glossiness, 0.0, 1.0);\n    float bias = rough * 5.0;\n    vec2 brdfParam = texture2D(brdfLookup, vec2(rough, ndv)).xy;\n    vec3 envWeight = specularColor * brdfParam.x + brdfParam.y;\n    vec3 envTexel = RGBMDecode(textureCubeLodEXT(lightCubemap, L, bias), 51.5);\n    gl_FragColor.rgb = lightColor * envTexel * envWeight;\n    gl_FragColor.a = 1.0;\n}\n@end"),Wr.import("@export qtek.deferred.point_light\n@import qtek.deferred.chunk.light_head\n@import qtek.util.calculate_attenuation\n@import qtek.deferred.chunk.light_equation\nuniform vec3 lightPosition;\nuniform vec3 lightColor;\nuniform float lightRange;\nuniform vec3 eyePosition;\n#ifdef SHADOWMAP_ENABLED\nuniform samplerCube lightShadowMap;\nuniform float lightShadowMapSize;\n#endif\nvarying vec3 v_Position;\n@import qtek.plugin.shadow_map_common\nvoid main()\n{\n    @import qtek.deferred.chunk.gbuffer_read\n    vec3 L = lightPosition - position;\n    vec3 V = normalize(eyePosition - position);\n    float dist = length(L);\n    L /= dist;\n    vec3 H = normalize(L + V);\n    float ndl = clamp(dot(N, L), 0.0, 1.0);\n    float ndh = clamp(dot(N, H), 0.0, 1.0);\n    float ndv = clamp(dot(N, V), 0.0, 1.0);\n    float attenuation = lightAttenuation(dist, lightRange);\n    gl_FragColor.rgb = attenuation * lightEquation(\n        lightColor, diffuseColor, specularColor, ndl, ndh, ndv, glossiness\n    );\n#ifdef SHADOWMAP_ENABLED\n    float shadowContrib = computeShadowContribOmni(\n        lightShadowMap, -L * dist, lightRange\n    );\n    gl_FragColor.rgb *= clamp(shadowContrib, 0.0, 1.0);\n#endif\n    gl_FragColor.a = 1.0;\n}\n@end"),Wr.import("@export qtek.deferred.sphere_light\n@import qtek.deferred.chunk.light_head\n@import qtek.util.calculate_attenuation\n@import qtek.deferred.chunk.light_equation\nuniform vec3 lightPosition;\nuniform vec3 lightColor;\nuniform float lightRange;\nuniform float lightRadius;\nuniform vec3 eyePosition;\nvarying vec3 v_Position;\nvoid main()\n{\n    @import qtek.deferred.chunk.gbuffer_read\n    vec3 L = lightPosition - position;\n    vec3 V = normalize(eyePosition - position);\n    float dist = length(L);\n    vec3 R = reflect(V, N);\n    float tmp = dot(L, R);\n    vec3 cToR = tmp * R - L;\n    float d = length(cToR);\n    L = L + cToR * clamp(lightRadius / d, 0.0, 1.0);\n    L = normalize(L);\n    vec3 H = normalize(L + V);\n    float ndl = clamp(dot(N, L), 0.0, 1.0);\n    float ndh = clamp(dot(N, H), 0.0, 1.0);\n    float ndv = clamp(dot(N, V), 0.0, 1.0);\n    float attenuation = lightAttenuation(dist, lightRange);\n    gl_FragColor.rgb = lightColor * ndl * attenuation;\n    glossiness = clamp(glossiness - lightRadius / 2.0 / dist, 0.0, 1.0);\n    gl_FragColor.rgb = attenuation * lightEquation(\n        lightColor, diffuseColor, specularColor, ndl, ndh, ndv, glossiness\n    );\n    gl_FragColor.a = 1.0;\n}\n@end"),
Wr.import("@export qtek.deferred.tube_light\n@import qtek.deferred.chunk.light_head\n@import qtek.util.calculate_attenuation\n@import qtek.deferred.chunk.light_equation\nuniform vec3 lightPosition;\nuniform vec3 lightColor;\nuniform float lightRange;\nuniform vec3 lightExtend;\nuniform vec3 eyePosition;\nvarying vec3 v_Position;\nvoid main()\n{\n    @import qtek.deferred.chunk.gbuffer_read\n    vec3 L = lightPosition - position;\n    vec3 V = normalize(eyePosition - position);\n    vec3 R = reflect(V, N);\n    vec3 L0 = lightPosition - lightExtend - position;\n    vec3 L1 = lightPosition + lightExtend - position;\n    vec3 LD = L1 - L0;\n    float len0 = length(L0);\n    float len1 = length(L1);\n    float irra = 2.0 * clamp(dot(N, L0) / (2.0 * len0) + dot(N, L1) / (2.0 * len1), 0.0, 1.0);\n    float LDDotR = dot(R, LD);\n    float t = (LDDotR * dot(R, L0) - dot(L0, LD)) / (dot(LD, LD) - LDDotR * LDDotR);\n    t = clamp(t, 0.0, 1.0);\n    L = L0 + t * LD;\n    float dist = length(L);\n    L /= dist;\n    vec3 H = normalize(L + V);\n    float ndh = clamp(dot(N, H), 0.0, 1.0);\n    float ndv = clamp(dot(N, V), 0.0, 1.0);\n    glossiness = clamp(glossiness - 0.0 / 2.0 / dist, 0.0, 1.0);\n    gl_FragColor.rgb = lightColor * irra * lightAttenuation(dist, lightRange)\n        * (diffuseColor + D_Phong(glossiness, ndh) * F_Schlick(ndv, specularColor));\n    gl_FragColor.a = 1.0;\n}\n@end"),Wr.import(pn);var Cn={},Ln=Rt.extend(function(){var t=Wr.source("qtek.compositor.vertex"),e=Wr.source("qtek.deferred.light_volume.vertex"),r=new Wr({vertex:t,fragment:Wr.source("qtek.deferred.directional_light")}),n=r.clone();n.define("fragment","SHADOWMAP_ENABLED");var i=function(t){t.blendEquation(t.FUNC_ADD),t.blendFunc(t.ONE,t.ONE)},a=function(t){return new Xr({shader:t,blend:i,transparent:!0,depthMask:!1})},o=function(t,r){var n=new Wr({vertex:e,fragment:Wr.source("qtek.deferred."+t)});return r&&n.define("fragment","SHADOWMAP_ENABLED"),n},s=new Mn({capSegments:10}),u=new ge;u.rotateX(Math.PI/2).translate(new ie(0,-1,0)),s.applyTransform(u);var l=new wn({capSegments:10});return u.identity().rotateZ(Math.PI/2),l.applyTransform(u),{shadowMapPass:null,autoResize:!0,_createLightPassMat:a,_gBuffer:new bn,_lightAccumFrameBuffer:new vr({depthBuffer:!1}),_lightAccumTex:new or({type:nr.HALF_FLOAT,minFilter:nr.NEAREST,magFilter:nr.NEAREST}),_fullQuadPass:new rn({blendWithPrevious:!0}),_directionalLightMat:a(r),_directionalLightMatWithShadow:a(n),_ambientMat:a(new Wr({vertex:t,fragment:Wr.source("qtek.deferred.ambient_light")})),_ambientSHMat:a(new Wr({vertex:t,fragment:Wr.source("qtek.deferred.ambient_sh_light")})),_ambientCubemapMat:a(new Wr({vertex:t,fragment:Wr.source("qtek.deferred.ambient_cubemap_light")})),_spotLightShader:o("spot_light"),_pointLightShader:o("point_light"),_spotLightShaderWithShadow:o("spot_light",!0),_pointLightShaderWithShadow:o("point_light",!0),_sphereLightShader:o("sphere_light"),_tubeLightShader:o("tube_light"),_lightSphereGeo:new Sn({widthSegments:10,heightSegements:10}),_lightConeGeo:s,_lightCylinderGeo:l,_outputPass:new rn({fragment:Wr.source("qtek.compositor.output")})}},{render:function(t,e,r,n){n=n||{},n.renderToTarget=n.renderToTarget||!1,n.notUpdateShadow=n.notUpdateShadow||!1,n.notUpdateScene=n.notUpdateScene||!1,n.notUpdateScene||e.update(!1,!0),r.update(!0);var i=t.getDevicePixelRatio();!this.autoResize||t.getWidth()*i===this._lightAccumTex.width&&t.getHeight()*i===this._lightAccumTex.height||this.resize(t.getWidth()*i,t.getHeight()*i),this._gBuffer.update(t,e,r),this._accumulateLightBuffer(t,e,r,!n.notUpdateShadow),n.renderToTarget||(this._outputPass.setUniform("texture",this._lightAccumTex),this._outputPass.render(t))},getTargetTexture:function(){return this._lightAccumTex},getTargetFrameBuffer:function(){return this._lightAccumFrameBuffer},getGBuffer:function(){return this._gBuffer},setViewport:function(t,e,r,n,i){this._gBuffer.setViewport(t,e,r,n,i),this._lightAccumFrameBuffer.viewport=this._gBuffer.getViewport()},resize:function(t,e){this._lightAccumTex.width=t,this._lightAccumTex.height=e,this._gBuffer.resize(t,e)},_accumulateLightBuffer:function(t,e,r,n){for(var i=t.gl,a=this._lightAccumTex,o=this._lightAccumFrameBuffer,s=r.getWorldPosition()._array,u=0;u<e.lights.length;u++)this._updateLightProxy(e.lights[u]);var l=this.shadowMapPass;l&&n&&(i.clearColor(1,1,1,1),this._prepareLightShadow(t,e,r)),this.trigger("beforelightaccumulate",t,e,r,n),o.attach(a),o.bind(t);var h=t.clearColor,c=o.viewport;if(c){var f=c.devicePixelRatio;i.enable(i.SCISSOR_TEST),i.scissor(c.x*f,c.y*f,c.width*f,c.height*f)}i.clearColor(h[0],h[1],h[2],h[3]),i.clear(i.COLOR_BUFFER_BIT),i.enable(i.BLEND),c&&i.disable(i.SCISSOR_TEST),this.trigger("startlightaccumulate",t,e,r);var d=new ge;ge.multiply(d,r.worldTransform,r.invProjectionMatrix);for(var _=[],u=0;u<e.lights.length;u++){var m=e.lights[u],p=m.uniformTemplates,v=m.volumeMesh||m.__volumeMesh;if(v){var g=v.material;v.castShadow=!1;var y=!1;switch(m.type){case"POINT_LIGHT":g.setUniform("lightColor",p.pointLightColor.value(m)),g.setUniform("lightRange",p.pointLightRange.value(m)),g.setUniform("lightPosition",p.pointLightPosition.value(m));break;case"SPOT_LIGHT":g.setUniform("lightPosition",p.spotLightPosition.value(m)),g.setUniform("lightColor",p.spotLightColor.value(m)),g.setUniform("lightRange",p.spotLightRange.value(m)),g.setUniform("lightDirection",p.spotLightDirection.value(m)),g.setUniform("umbraAngleCosine",p.spotLightUmbraAngleCosine.value(m)),g.setUniform("penumbraAngleCosine",p.spotLightPenumbraAngleCosine.value(m)),g.setUniform("falloffFactor",p.spotLightFalloffFactor.value(m));break;case"SPHERE_LIGHT":g.setUniform("lightColor",p.sphereLightColor.value(m)),g.setUniform("lightRange",p.sphereLightRange.value(m)),g.setUniform("lightRadius",p.sphereLightRadius.value(m)),g.setUniform("lightPosition",p.sphereLightPosition.value(m));break;case"TUBE_LIGHT":g.setUniform("lightColor",p.tubeLightColor.value(m)),g.setUniform("lightRange",p.tubeLightRange.value(m)),g.setUniform("lightExtend",p.tubeLightExtend.value(m)),g.setUniform("lightPosition",p.tubeLightPosition.value(m));break;default:y=!0}if(y)continue;g.setUniform("eyePosition",s),g.setUniform("viewProjectionInv",d._array),g.setUniform("gBufferTexture1",this._gBuffer.getTargetTexture1()),g.setUniform("gBufferTexture2",this._gBuffer.getTargetTexture2()),g.setUniform("gBufferTexture3",this._gBuffer.getTargetTexture3()),_.push(v)}else{var x=this._fullQuadPass,y=!1;switch(m.type){case"AMBIENT_LIGHT":x.material=this._ambientMat,x.material.setUniform("lightColor",p.ambientLightColor.value(m));break;case"AMBIENT_SH_LIGHT":x.material=this._ambientSHMat,x.material.setUniform("lightColor",p.ambientSHLightColor.value(m)),x.material.setUniform("lightCoefficients",p.ambientSHLightCoefficients.value(m));break;case"AMBIENT_CUBEMAP_LIGHT":x.material=this._ambientCubemapMat,x.material.setUniform("lightColor",p.ambientCubemapLightColor.value(m)),x.material.setUniform("lightCubemap",p.ambientCubemapLightCubemap.value(m)),x.material.setUniform("brdfLookup",p.ambientCubemapLightBRDFLookup.value(m));break;case"DIRECTIONAL_LIGHT":var T=l&&m.castShadow;x.material=T?this._directionalLightMatWithShadow:this._directionalLightMat,T&&x.material.shader.define("fragment","SHADOW_CASCADE",m.shadowCascade),x.material.setUniform("lightColor",p.directionalLightColor.value(m)),x.material.setUniform("lightDirection",p.directionalLightDirection.value(m));break;default:y=!0}if(y)continue;var E=x.material;E.setUniform("eyePosition",s),E.setUniform("viewProjectionInv",d._array),E.setUniform("gBufferTexture1",this._gBuffer.getTargetTexture1()),E.setUniform("gBufferTexture2",this._gBuffer.getTargetTexture2()),E.setUniform("gBufferTexture3",this._gBuffer.getTargetTexture3()),l&&m.castShadow&&(E.setUniform("lightShadowMap",m.__shadowMap),E.setUniform("lightMatrices",m.__lightMatrices),E.setUniform("shadowCascadeClipsNear",m.__cascadeClipsNear),E.setUniform("shadowCascadeClipsFar",m.__cascadeClipsFar),E.setUniform("lightShadowMapSize",m.shadowResolution)),x.renderQuad(t)}}this._renderVolumeMeshList(t,r,_),l&&this._shadowCasters&&l.restoreMaterial(this._shadowCasters),this.trigger("lightaccumulate",t,e,r),o.unbind(t),this.trigger("afterlightaccumulate",t,e,r)},_prepareLightShadow:function(){var t=new ge;return function(e,r,n){var i;i=this._shadowCasters||(this._shadowCasters=[]);for(var a=0,o=r.opaqueQueue,s=0;s<o.length;s++)o[s].castShadow&&(i[a++]=o[s]);i.length=a,this.shadowMapPass.saveMaterial(i);for(var s=0;s<r.lights.length;s++){var u=r.lights[s],l=u.volumeMesh||u.__volumeMesh;if(u.castShadow)switch(u.type){case"POINT_LIGHT":case"SPOT_LIGHT":if(ge.multiply(t,n.viewMatrix,l.worldTransform),e.isFrustumCulled(l,null,n,t._array,n.projectionMatrix._array))continue;this._prepareSingleLightShadow(e,r,n,u,i,l.material);break;case"DIRECTIONAL_LIGHT":this._prepareSingleLightShadow(e,r,n,u,i,null)}}}}(),_prepareSingleLightShadow:function(t,e,r,n,i,a){switch(n.type){case"POINT_LIGHT":var o=[];this.shadowMapPass.renderPointLightShadow(t,n,i,o),a.setUniform("lightShadowMap",o[0]),a.setUniform("lightShadowMapSize",n.shadowResolution);break;case"SPOT_LIGHT":var o=[],s=[];this.shadowMapPass.renderSpotLightShadow(t,n,i,s,o),a.setUniform("lightShadowMap",o[0]),a.setUniform("lightMatrix",s[0]),a.setUniform("lightShadowMapSize",n.shadowResolution);break;case"DIRECTIONAL_LIGHT":var o=[],s=[],u=[];this.shadowMapPass.renderDirectionalLightShadow(t,e,r,n,i,u,s,o);var l=u.slice(),h=u.slice();l.pop(),h.shift(),l.reverse(),h.reverse(),s.reverse(),n.__cascadeClipsNear=l,n.__cascadeClipsFar=h,n.__shadowMap=o[0],n.__lightMatrices=s}},_updateLightProxy:function(t){var e;if(t.volumeMesh)e=t.volumeMesh;else{var r=this.shadowMapPass&&t.castShadow;switch(t.type){case"POINT_LIGHT":case"SPHERE_LIGHT":var n="SPHERE_LIGHT"===t.type?this._sphereLightShader:r?this._pointLightShaderWithShadow:this._pointLightShader;t.__volumeMesh=t.__volumeMesh||new Jr({material:this._createLightPassMat(n),geometry:this._lightSphereGeo,culling:!1}),e=t.__volumeMesh,e.material.shader!==n&&e.material.attachShader(n,!0);var i=t.range+(t.radius||0);e.scale.set(i,i,i);break;case"SPOT_LIGHT":var n=r?this._spotLightShaderWithShadow:this._spotLightShader;t.__volumeMesh=t.__volumeMesh||new Jr({material:this._createLightPassMat(n),geometry:this._lightConeGeo,culling:!1}),e=t.__volumeMesh,e.material.shader!==n&&e.material.attachShader(n,!0);var a=Math.tan(t.penumbraAngle*Math.PI/180),o=t.range;e.scale.set(a*o,a*o,o/2);break;case"TUBE_LIGHT":t.__volumeMesh=t.__volumeMesh||new Jr({material:this._createLightPassMat(this._tubeLightShader),geometry:this._lightCylinderGeo,culling:!1}),e=t.__volumeMesh;var o=t.range;e.scale.set(t.length/2+o,o,o)}}e&&(e.update(),ge.multiply(e.worldTransform,t.worldTransform,e.worldTransform))},_renderVolumeMeshList:function(){var t=new ge,e=new ge,r=new Xr({shader:new Wr({vertex:Wr.source("qtek.prez.vertex"),fragment:Wr.source("qtek.prez.fragment")})});return function(n,i,a){var o=n.gl;o.enable(o.DEPTH_TEST),o.disable(o.CULL_FACE),o.blendEquation(o.FUNC_ADD),o.blendFuncSeparate(o.ONE,o.ONE,o.ONE,o.ONE),o.depthFunc(o.LEQUAL);for(var s=n.viewport,u=s.devicePixelRatio,l=[s.x*u,s.y*u,s.width*u,s.height*u],h=[this._lightAccumTex.width,this._lightAccumTex.height],c=0;c<a.length;c++){var f=a[c];if(ge.multiply(e,i.viewMatrix,f.worldTransform),!n.isFrustumCulled(f,null,i,e._array,i.projectionMatrix._array)){o.colorMask(!1,!1,!1,!1),o.depthMask(!0),o.clear(o.DEPTH_BUFFER_BIT),ge.multiply(t,i.projectionMatrix,e);var d=r.shader;this._bindShader(n,d);var _=d.matrixSemantics.WORLDVIEWPROJECTION;d.setUniform(o,_.type,_.symbol,t._array),f.render(n,d),o.colorMask(!0,!0,!0,!0),o.depthMask(!1);var m=f.material.shader;this._bindShader(n,m);var _=m.matrixSemantics.WORLDVIEWPROJECTION;m.setUniform(o,_.type,_.symbol,t._array),m.setUniformOfSemantic(o,"WINDOW_SIZE",h),m.setUniformOfSemantic(o,"VIEWPORT",l),f.material.bind(n),f.render(n,m)}}o.depthFunc(o.LESS),n.resetRenderStatus()}}(),_bindShader:function(t,e){var r=e.bind(t);if(r){if(Cn[e.__GUID__])return;if(Cn[e.__GUID__]=!0,t.throwError)throw new Error(r);t.trigger("error",r)}},dispose:function(t){this._gBuffer.dispose(t),this._lightAccumFrameBuffer.dispose(t),this._lightAccumTex.dispose(t),this._pointLightShader.dispose(t),this._pointLightShaderWithShadow.dispose(t),this._spotLightShader.dispose(t),this._spotLightShaderWithShadow.dispose(t),this._sphereLightShader.dispose(t),this._tubeLightShader.dispose(t),this._lightConeGeo.dispose(t),this._lightCylinderGeo.dispose(t),this._lightSphereGeo.dispose(t),this._fullQuadPass.dispose(t),this._outputPass.dispose(t),this._directionalLightMat.dispose(t),this._directionalLightMatWithShadow.dispose(t),this.shadowMapPass.dispose(t)}}),Pn=new ge,Dn=Mr.extend({dynamic:!1,widthSegments:1,heightSegments:1,depthSegments:1,inside:!1},function(){this.build()},{build:function(){var t={px:tt("px",this.depthSegments,this.heightSegments),nx:tt("nx",this.depthSegments,this.heightSegments),py:tt("py",this.widthSegments,this.depthSegments),ny:tt("ny",this.widthSegments,this.depthSegments),pz:tt("pz",this.widthSegments,this.heightSegments),nz:tt("nz",this.widthSegments,this.heightSegments)},e=["position","texcoord0","normal"],r=0,n=0;for(var i in t)r+=t[i].vertexCount,n+=t[i].indices.length;for(var a=0;a<e.length;a++)this.attributes[e[a]].init(r);this.indices=new Tr.Uint16Array(n);var o=0,s=0;for(var i in t){for(var u=t[i],a=0;a<e.length;a++)for(var l=e[a],h=u.attributes[l].value,c=u.attributes[l].size,f="normal"===l,d=0;d<h.length;d++){var _=h[d];this.inside&&f&&(_=-_),this.attributes[l].value[d+c*s]=_}for(var d=0;d<u.indices.length;d++)this.indices[d+o]=s+u.indices[d];o+=u.indices.length,s+=u.vertexCount}this.boundingBox=new Se,this.boundingBox.max.set(1,1,1),this.boundingBox.min.set(-1,-1,-1)}}),In=Rt.extend({name:"",index:-1,node:null,rootNode:null}),On=Me.extend(function(){return{color:[1,1,1],intensity:1,castShadow:!0,shadowResolution:512,group:0}},{type:"",clone:function(){var t=Me.prototype.clone.call(this);return t.color=Array.prototype.slice.call(this.color),t.intensity=this.intensity,t.castShadow=this.castShadow,t.shadowResolution=this.shadowResolution,t}}),kn=On.extend({castShadow:!1},{type:"AMBIENT_LIGHT",uniformTemplates:{ambientLightColor:{type:"3f",value:function(t){var e=t.color,r=t.intensity;return[e[0]*r,e[1]*r,e[2]*r]}}}}),Un="@export qtek.skybox.vertex\nuniform mat4 world : WORLD;\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\nattribute vec3 position : POSITION;\nvarying vec3 v_WorldPosition;\nvoid main()\n{\n    v_WorldPosition = (world * vec4(position, 1.0)).xyz;\n    gl_Position = worldViewProjection * vec4(position, 1.0);\n}\n@end\n@export qtek.skybox.fragment\nuniform mat4 viewInverse : VIEWINVERSE;\nuniform samplerCube environmentMap;\nuniform float lod: 0.0;\nvarying vec3 v_WorldPosition;\n@import qtek.util.rgbm\nvoid main()\n{\n    vec3 eyePos = viewInverse[3].xyz;\n    vec3 viewDirection = normalize(v_WorldPosition - eyePos);\n    vec3 tex = decodeHDR(textureCubeLodEXT(environmentMap, viewDirection, lod)).rgb;\n#ifdef SRGB_DECODE\n    tex.rgb = pow(tex.rgb, vec3(2.2));\n#endif\n    gl_FragColor = encodeHDR(vec4(tex, 1.0));\n}\n@end";Wr.import(Un);var Fn=Jr.extend(function(){var t=new Wr({vertex:Wr.source("qtek.skybox.vertex"),fragment:Wr.source("qtek.skybox.fragment")}),e=new Xr({shader:t,depthMask:!1});return{scene:null,geometry:new Dn,material:e,environmentMap:null,culling:!1}},function(){var t=this.scene;t&&this.attachScene(t),this.environmentMap&&this.setEnvironmentMap(this.environmentMap)},{attachScene:function(t){this.scene&&this.detachScene(),this.scene=t,t.on("beforerender",this._beforeRenderScene,this)},detachScene:function(){this.scene&&this.scene.off("beforerender",this._beforeRenderScene),this.scene=null},dispose:function(t){this.detachScene(),this.geometry.dispose(t),this.material.dispose(t)},setEnvironmentMap:function(t){this.material.set("environmentMap",t)},getEnvironmentMap:function(){return this.material.get("environmentMap")},_beforeRenderScene:function(t,e,r){this.renderSkybox(t,r)},renderSkybox:function(t,e){this.position.copy(e.getWorldPosition()),this.update(),t.gl.disable(t.gl.BLEND),t.renderQueue([this],e)}}),Bn=Me.extend(function(){return{material:null,autoUpdate:!0,opaqueQueue:[],transparentQueue:[],lights:[],viewBoundingBoxLastFrame:new Se,_lightUniforms:{},_lightNumber:{},_opaqueObjectCount:0,_transparentObjectCount:0,_nodeRepository:{}}},function(){this._scene=this},{addToScene:function(t){t.name&&(this._nodeRepository[t.name]=t)},removeFromScene:function(t){t.name&&delete this._nodeRepository[t.name]},getNode:function(t){return this._nodeRepository[t]},cloneNode:function(t){var e=t.clone(),r={},n=function(i,a){i.skeleton&&(a.skeleton=i.skeleton.clone(t,e),a.joints=i.joints.slice()),i.material&&(r[i.material.__GUID__]={oldMat:i.material});for(var o=0;o<i._children.length;o++)n(i._children[o],a._children[o])};n(t,e);for(var i in r)r[i].newMat=r[i].oldMat.clone();return e.traverse(function(t){t.material&&(t.material=r[t.material.__GUID__].newMat)}),e},update:function(t,e){if(this.autoUpdate||t){Me.prototype.update.call(this,t);var r=this.lights,n=this.material&&this.material.transparent;if(this._opaqueObjectCount=0,this._transparentObjectCount=0,r.length=0,this._updateRenderQueue(this,n),this.opaqueQueue.length=this._opaqueObjectCount,this.transparentQueue.length=this._transparentObjectCount,!e){var i=this._lightNumber;for(var a in i)for(var o in i[a])i[a][o]=0;for(var s=0;s<r.length;s++){var u=r[s],a=u.group;i[a]||(i[a]={}),i[a][u.type]=i[a][u.type]||0,i[a][u.type]++}this._updateLightUniforms()}}},_updateRenderQueue:function(t,e){if(!t.invisible)for(var r=0;r<t._children.length;r++){var n=t._children[r];n instanceof On&&this.lights.push(n),n.isRenderable()&&(n.material.transparent||e?this.transparentQueue[this._transparentObjectCount++]=n:this.opaqueQueue[this._opaqueObjectCount++]=n),n._children.length>0&&this._updateRenderQueue(n)}},_updateLightUniforms:function(){var t=this.lights;t.sort(et);var e=this._lightUniforms;for(var r in e)for(var n in e[r])e[r][n].value.length=0;for(var i=0;i<t.length;i++){var a=t[i],r=a.group;for(var n in a.uniformTemplates){var o=a.uniformTemplates[n];e[r]||(e[r]={}),e[r][n]||(e[r][n]={type:"",value:[]});var s=o.value(a),u=e[r][n];switch(u.type=o.type+"v",o.type){case"1i":case"1f":case"t":u.value.push(s);break;case"2f":case"3f":case"4f":for(var l=0;l<s.length;l++)u.value.push(s[l]);break;default:console.error("Unkown light uniform type "+o.type)}}}},isShaderLightNumberChanged:function(t){var e=t.lightGroup;for(var r in this._lightNumber[e])if(this._lightNumber[e][r]!==t.lightNumber[r])return!0;for(var r in t.lightNumber)if(this._lightNumber[e][r]!==t.lightNumber[r])return!0;return!1},setShaderLightNumber:function(t){var e=t.lightGroup;for(var r in this._lightNumber[e])t.lightNumber[r]=this._lightNumber[e][r];t.dirty()},setLightUniforms:function(t,e){var r=t.lightGroup;for(var n in this._lightUniforms[r]){var i=this._lightUniforms[r][n];if("tv"===i.type)for(var a=0;a<i.value.length;a++){var o=i.value[a],s=t.currentTextureSlot(),u=t.setUniform(e.gl,"1i",n,s);u&&t.takeCurrentTextureSlot(e,o)}else t.setUniform(e.gl,i.type,n,i.value)}},dispose:function(){this.material=null,this.opaqueQueue=[],this.transparentQueue=[],this.lights=[],this._lightUniforms={},this._lightNumber={},this._nodeRepository={}}}),Hn=["px","nx","py","ny","pz","nz"],Gn=Rt.extend(function(){var t={position:new ie,far:1e3,near:.1,texture:null,shadowMapPass:null},e=t._cameras={px:new ze({fov:90}),nx:new ze({fov:90}),py:new ze({fov:90}),ny:new ze({fov:90}),pz:new ze({fov:90}),nz:new ze({fov:90})};return e.px.lookAt(ie.POSITIVE_X,ie.NEGATIVE_Y),e.nx.lookAt(ie.NEGATIVE_X,ie.NEGATIVE_Y),e.py.lookAt(ie.POSITIVE_Y,ie.POSITIVE_Z),e.ny.lookAt(ie.NEGATIVE_Y,ie.NEGATIVE_Z),e.pz.lookAt(ie.POSITIVE_Z,ie.NEGATIVE_Y),e.nz.lookAt(ie.NEGATIVE_Z,ie.NEGATIVE_Y),t._frameBuffer=new vr,t},{getCamera:function(t){return this._cameras[t]},render:function(t,e,r){var n=t.gl;r||e.update();for(var i=this.texture.width,a=2*Math.atan(i/(i-.5))/Math.PI*180,o=0;o<6;o++){var s=Hn[o],u=this._cameras[s];if(ie.copy(u.position,this.position),u.far=this.far,u.near=this.near,u.fov=a,this.shadowMapPass){u.update();var l=e.getBoundingBox();l.applyTransform(u.viewMatrix),e.viewBoundingBoxLastFrame.copy(l),this.shadowMapPass.render(t,e,u,!0)}this._frameBuffer.attach(this.texture,n.COLOR_ATTACHMENT0,n.TEXTURE_CUBE_MAP_POSITIVE_X+o),this._frameBuffer.bind(t),t.render(e,u,!0),this._frameBuffer.unbind(t)}},dispose:function(t){this._frameBuffer.dispose(t)}}),Wn="@export qtek.basic.vertex\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\nuniform vec2 uvRepeat : [1.0, 1.0];\nuniform vec2 uvOffset : [0.0, 0.0];\nattribute vec2 texcoord : TEXCOORD_0;\nattribute vec3 position : POSITION;\nattribute vec3 barycentric;\n@import qtek.chunk.skinning_header\nvarying vec2 v_Texcoord;\nvarying vec3 v_Barycentric;\n#ifdef VERTEX_COLOR\nattribute vec4 a_Color : COLOR;\nvarying vec4 v_Color;\n#endif\nvoid main()\n{\n    vec3 skinnedPosition = position;\n#ifdef SKINNING\n    @import qtek.chunk.skin_matrix\n    skinnedPosition = (skinMatrixWS * vec4(position, 1.0)).xyz;\n#endif\n    v_Texcoord = texcoord * uvRepeat + uvOffset;\n    v_Barycentric = barycentric;\n    gl_Position = worldViewProjection * vec4(skinnedPosition, 1.0);\n#ifdef VERTEX_COLOR\n    v_Color = a_Color;\n#endif\n}\n@end\n@export qtek.basic.fragment\nvarying vec2 v_Texcoord;\nuniform sampler2D diffuseMap;\nuniform vec3 color : [1.0, 1.0, 1.0];\nuniform vec3 emission : [0.0, 0.0, 0.0];\nuniform float alpha : 1.0;\n#ifdef ALPHA_TEST\nuniform float alphaCutoff: 0.9;\n#endif\n#ifdef VERTEX_COLOR\nvarying vec4 v_Color;\n#endif\nuniform float lineWidth : 0.0;\nuniform vec4 lineColor : [0.0, 0.0, 0.0, 0.6];\nvarying vec3 v_Barycentric;\n@import qtek.util.edge_factor\n@import qtek.util.rgbm\n@import qtek.util.srgb\nvoid main()\n{\n#ifdef RENDER_TEXCOORD\n    gl_FragColor = vec4(v_Texcoord, 1.0, 1.0);\n    return;\n#endif\n    gl_FragColor = vec4(color, alpha);\n#ifdef VERTEX_COLOR\n    gl_FragColor *= v_Color;\n#endif\n#ifdef DIFFUSEMAP_ENABLED\n    vec4 tex = decodeHDR(texture2D(diffuseMap, v_Texcoord));\n#ifdef SRGB_DECODE\n    tex = sRGBToLinear(tex);\n#endif\n#if defined(DIFFUSEMAP_ALPHA_ALPHA)\n    gl_FragColor.a = tex.a;\n#endif\n    gl_FragColor.rgb *= tex.rgb;\n#endif\n    gl_FragColor.rgb += emission;\n    if( lineWidth > 0.)\n    {\n        gl_FragColor.rgb = mix(gl_FragColor.rgb, lineColor.rgb, (1.0 - edgeFactor(lineWidth)) * lineColor.a);\n    }\n#ifdef GAMMA_ENCODE\n    gl_FragColor.rgb = pow(gl_FragColor.rgb, vec3(1 / 2.2));\n#endif\n#ifdef ALPHA_TEST\n    if (gl_FragColor.a < alphaCutoff) {\n        discard;\n    }\n#endif\n    gl_FragColor = encodeHDR(gl_FragColor);\n}\n@end";Wr.import(Wn);var Vn=Jr.extend(function(){var t=new Wr({vertex:Wr.source("qtek.basic.vertex"),fragment:Wr.source("qtek.basic.fragment")});t.enableTexture("diffuseMap");var e=new Xr({shader:t,depthMask:!1});return{scene:null,geometry:new Sn({widthSegments:30,heightSegments:30}),material:e,environmentMap:null,culling:!1}},function(){var t=this.scene;t&&this.attachScene(t),this.environmentMap&&this.setEnvironmentMap(this.environmentMap)},{attachScene:function(t){this.scene&&this.detachScene(),this.scene=t,t.on("beforerender",this._beforeRenderScene,this)},detachScene:function(){this.scene&&this.scene.off("beforerender",this._beforeRenderScene),this.scene=null},_beforeRenderScene:function(t,e,r){this.position.copy(r.getWorldPosition()),this.update(),t.renderQueue([this],r)},setEnvironmentMap:function(t){this.material.set("diffuseMap",t)},getEnvironmentMap:function(){return this.material.get("diffuseMap")},dispose:function(t){this.detachScene(),this.geometry.dispose(t),this.material.dispose(t)}}),qn=rt("DXT1"),zn=rt("DXT3"),Xn=rt("DXT5"),jn={parse:function(t,e){var r=new Int32Array(t,0,31);if(542327876!==r[0])return null;if(4&!r(20))return null;var n,i,a=r(21),o=r[4],s=r[3],u=512&r[28],l=131072&r[2];switch(a){case qn:n=8,i=nr.COMPRESSED_RGB_S3TC_DXT1_EXT;break;case zn:n=16,i=nr.COMPRESSED_RGBA_S3TC_DXT3_EXT;break;case Xn:n=16,i=nr.COMPRESSED_RGBA_S3TC_DXT5_EXT;break;default:return null}var h=r[1]+4,c=u?6:1,f=1;l&&(f=Math.max(1,r[7]));for(var d=[],_=0;_<c;_++){var m=o,p=s;d[_]=new or({width:m,height:p,format:i});for(var v=[],g=0;g<f;g++){var y=Math.max(4,m)/4*Math.max(4,p)/4*n,x=new Uint8Array(t,h,y);h+=y,m*=.5,p*=.5,v[g]=x}d[_].pixels=v[0],l&&(d[_].mipmaps=v)}if(!e)return d[0];e.width=d[0].width,e.height=d[0].height,e.format=d[0].format,e.pixels=d[0].pixels,e.mipmaps=d[0].mipmaps}},Yn=String.fromCharCode,Kn=8,Qn=32767,Zn={parseRGBE:function(t,e,r){null==r&&(r=0);var n=new Uint8Array(t),i=n.length;if("#?"===it(n,0,2)){for(var a=2;a<i&&("\n"!==Yn(n[a])||"\n"!==Yn(n[a+1]));a++);if(!(a>=i)){a+=2;for(var o="";a<i;a++){var s=Yn(n[a]);if("\n"===s)break;o+=s}var u=o.split(" "),l=parseInt(u[1]),h=parseInt(u[3]);if(h&&l){for(var c=a+1,f=[],d=0;d<h;d++){f[d]=[];for(var _=0;_<4;_++)f[d][_]=0}for(var m=new Float32Array(h*l*4),p=0,v=0;v<l;v++){var c=st(f,n,c,h);if(!c)return null;for(var d=0;d<h;d++)nt(f[d],m,p,r),p+=4}return e||(e=new or),e.width=h,e.height=l,e.pixels=m,e.type=nr.FLOAT,e}}}},parseRGBEFromPNG:function(t){}},Jn={loadTexture:function(t,e,r,n){var i;if("function"==typeof e?(r=e,n=r,e={}):e=e||{},"string"==typeof t){if(t.match(/.hdr$/)||"hdr"===e.fileType)return i=new or({width:0,height:0}),Jn._fetchTexture(t,function(t){Zn.parseRGBE(t,i,e.exposure),i.dirty(),r&&r(i)},n),i;t.match(/.dds$/)||"dds"===e.fileType?(i=new or({width:0,height:0}),Jn._fetchTexture(t,function(t){jn.parse(t,i),i.dirty(),r&&r(i)},n)):(i=new or,i.load(t),i.success(r),i.error(n))}else if("object"==typeof t&&void 0!==t.px){var i=new fr;i.load(t),i.success(r),i.error(n)}return i},loadPanorama:function(t,e,r,n,i,a){var o=this;"function"==typeof n?(i=n,a=i,n={}):n=n||{},Jn.loadTexture(e,n,function(e){e.flipY=n.flipY||!1,o.panoramaToCubeMap(t,e,r,n),e.dispose(t),i&&i(r)},a)},panoramaToCubeMap:function(t,e,r,n){var i=new Gn,a=new Vn({scene:new Bn});return a.material.set("diffuseMap",e),n=n||{},n.encodeRGBM&&a.material.shader.define("fragment","RGBM_ENCODE"),i.texture=r,i.render(t,a.scene),i.texture=null,i.dispose(t),r},heightToNormal:function(t,e){var r=document.createElement("canvas"),n=r.width=t.width,i=r.height=t.height,a=r.getContext("2d");a.drawImage(t,0,0,n,i),e=e||!1;for(var o=a.getImageData(0,0,n,i),s=a.createImageData(n,i),u=0;u<o.data.length;u+=4){if(e){var l=o.data[u],h=o.data[u+1],c=o.data[u+2];if(Math.abs(l-h)+Math.abs(h-c)>20)return console.warn("Given image is not a height map"),t}var f,d,_,m;u%(4*n)==0?(f=o.data[u],_=o.data[u+4]):u%(4*n)==4*(n-1)?(f=o.data[u-4],_=o.data[u]):(f=o.data[u-4],_=o.data[u+4]),u<4*n?(d=o.data[u],m=o.data[u+4*n]):u>n*(i-1)*4?(d=o.data[u-4*n],m=o.data[u]):(d=o.data[u-4*n],m=o.data[u+4*n]),s.data[u]=f-_+127,s.data[u+1]=d-m+127,s.data[u+2]=255,s.data[u+3]=255}return a.putImageData(s,0,0),r},isHeightImage:function(t,e,r){if(!t||!t.width||!t.height)return!1;var n=document.createElement("canvas"),i=n.getContext("2d"),a=e||32;r=r||20,n.width=n.height=a,i.drawImage(t,0,0,a,a);for(var o=i.getImageData(0,0,a,a),s=0;s<o.data.length;s+=4){var u=o.data[s],l=o.data[s+1],h=o.data[s+2];if(Math.abs(u-l)+Math.abs(l-h)>r)return!1}return!0},_fetchTexture:function(t,e,r){$t.get({url:t,responseType:"arraybuffer",onload:e,onerror:r})},createChessboard:function(t,e,r,n){t=t||512,e=e||64,r=r||"black",n=n||"white";var i=Math.ceil(t/e),a=document.createElement("canvas");a.width=t,a.height=t;var o=a.getContext("2d");o.fillStyle=n,o.fillRect(0,0,t,t),o.fillStyle=r;for(var s=0;s<i;s++)for(var u=0;u<i;u++){var l=u%2?s%2:s%2-1;l&&o.fillRect(s*e,u*e,e,e)}return new or({image:a,anisotropic:8})},createBlank:function(t){var e=document.createElement("canvas");e.width=1,e.height=1;var r=e.getContext("2d");return r.fillStyle=t,r.fillRect(0,0,1,1),new or({image:e})}},$n={},ti=["px","nx","py","ny","pz","nz"];$n.prefilterEnvironmentMap=function(t,e,r,n,i){i&&n||(n=$n.generateNormalDistribution(),i=$n.integrateBRDF(t,n)),r=r||{};var a=r.width||64,o=r.height||64,s=r.type||e.type,u=new fr({width:a,height:o,type:s,flipY:!1,mipmaps:[]});u.isPowerOfTwo()||console.warn("Width and height must be power of two to enable mipmap.");var l=Math.min(a,o),h=Math.log(l)/Math.log(2)+1,c=new Xr({shader:new Wr({vertex:Wr.source("qtek.skybox.vertex"),fragment:"#define SAMPLE_NUMBER 1024\n#define PI 3.14159265358979\nuniform mat4 viewInverse : VIEWINVERSE;\nuniform samplerCube environmentMap;\nuniform sampler2D normalDistribution;\nuniform float roughness : 0.5;\nvarying vec2 v_Texcoord;\nvarying vec3 v_WorldPosition;\nconst float fSampleNumber = float(SAMPLE_NUMBER);\n@import qtek.util.rgbm\nvec3 importanceSampleNormal(float i, float roughness, vec3 N) {\n    vec3 H = texture2D(normalDistribution, vec2(roughness, i)).rgb;\n    vec3 upVector = abs(N.z) < 0.999 ? vec3(0.0, 0.0, 1.0) : vec3(1.0, 0.0, 0.0);\n    vec3 tangentX = normalize(cross(upVector, N));\n    vec3 tangentY = cross(N, tangentX);\n    return tangentX * H.x + tangentY * H.y + N * H.z;\n}\nvoid main() {\n    vec3 eyePos = viewInverse[3].xyz;\n    vec3 V = normalize(v_WorldPosition - eyePos);\n    vec3 N = V;\n    vec3 R = V;\n    vec3 prefilteredColor = vec3(0.0);\n    float totalWeight = 0.0;\n    for (int i = 0; i < SAMPLE_NUMBER; i++) {\n        vec3 H = importanceSampleNormal(float(i) / fSampleNumber, roughness, N);\n        vec3 L = reflect(-V, H);\n        float NoL = clamp(dot(N, L), 0.0, 1.0);\n        if (NoL > 0.0) {\n            prefilteredColor += decodeHDR(textureCube(environmentMap, L)).rgb * NoL;\n            totalWeight += NoL;\n        }\n    }\n    gl_FragColor = encodeHDR(vec4(prefilteredColor / totalWeight, 1.0));\n}\n"})});c.set("normalDistribution",n),r.encodeRGBM&&c.shader.define("fragment","RGBM_ENCODE"),r.decodeRGBM&&c.shader.define("fragment","RGBM_DECODE");var f,d=new Bn;if(e instanceof or){var _=new fr({width:a,height:o,type:s===nr.FLOAT?nr.HALF_FLOAT:s});Jn.panoramaToCubeMap(t,e,_,{encodeRGBM:r.decodeRGBM}),e=_}f=new Fn({scene:d,material:c}),f.material.set("environmentMap",e);var m=new Gn({texture:u});r.encodeRGBM&&(s=u.type=nr.UNSIGNED_BYTE);for(var p=new or({width:a,height:o,type:s}),v=new vr({depthBuffer:!1}),g=Tr[s===nr.UNSIGNED_BYTE?"Uint8Array":"Float32Array"],y=0;y<h;y++){u.mipmaps[y]={pixels:{}},f.material.set("roughness",y/(ti.length-1));for(var x=p.width,T=2*Math.atan(x/(x-.5))/Math.PI*180,E=0;E<ti.length;E++){var b=new g(p.width*p.height*4);v.attach(p),v.bind(t);var S=m.getCamera(ti[E]);S.fov=T,t.render(d,S),t.gl.readPixels(0,0,p.width,p.height,nr.RGBA,s,b),v.unbind(t),u.mipmaps[y].pixels[ti[E]]=b}p.width/=2,p.height/=2,p.dirty()}return v.dispose(t),p.dispose(t),f.dispose(t),n.dispose(t),{environmentMap:u,brdfLookup:i,normalDistribution:n,maxMipmapLevel:h}},$n.integrateBRDF=function(t,e){e=e||$n.generateNormalDistribution();var r=new vr({depthBuffer:!1}),n=new rn({
fragment:"#define SAMPLE_NUMBER 1024\n#define PI 3.14159265358979\nuniform sampler2D normalDistribution;\nuniform vec2 viewportSize : [512, 256];\nconst vec3 N = vec3(0.0, 0.0, 1.0);\nconst float fSampleNumber = float(SAMPLE_NUMBER);\nvec3 importanceSampleNormal(float i, float roughness, vec3 N) {\n    vec3 H = texture2D(normalDistribution, vec2(roughness, i)).rgb;\n    vec3 upVector = abs(N.z) < 0.999 ? vec3(0.0, 0.0, 1.0) : vec3(1.0, 0.0, 0.0);\n    vec3 tangentX = normalize(cross(upVector, N));\n    vec3 tangentY = cross(N, tangentX);\n    return tangentX * H.x + tangentY * H.y + N * H.z;\n}\nfloat G_Smith(float roughness, float NoV, float NoL) {\n    float k = roughness * roughness / 2.0;\n    float G1V = NoV / (NoV * (1.0 - k) + k);\n    float G1L = NoL / (NoL * (1.0 - k) + k);\n    return G1L * G1V;\n}\nvoid main() {\n    vec2 uv = gl_FragCoord.xy / viewportSize;\n    float NoV = uv.x;\n    float roughness = uv.y;\n    vec3 V;\n    V.x = sqrt(1.0 - NoV * NoV);\n    V.y = 0.0;\n    V.z = NoV;\n    float A = 0.0;\n    float B = 0.0;\n    for (int i = 0; i < SAMPLE_NUMBER; i++) {\n        vec3 H = importanceSampleNormal(float(i) / fSampleNumber, roughness, N);\n        vec3 L = reflect(-V, H);\n        float NoL = clamp(L.z, 0.0, 1.0);\n        float NoH = clamp(H.z, 0.0, 1.0);\n        float VoH = clamp(dot(V, H), 0.0, 1.0);\n        if (NoL > 0.0) {\n            float G = G_Smith(roughness, NoV, NoL);\n            float G_Vis = G * VoH / (NoH * NoV);\n            float Fc = pow(1.0 - VoH, 5.0);\n            A += (1.0 - Fc) * G_Vis;\n            B += Fc * G_Vis;\n        }\n    }\n    gl_FragColor = vec4(vec2(A, B) / fSampleNumber, 0.0, 1.0);\n}\n"}),i=new or({width:512,height:256,type:nr.HALF_FLOAT,minFilter:nr.NEAREST,magFilter:nr.NEAREST,useMipmap:!1});return n.setUniform("normalDistribution",e),n.setUniform("viewportSize",[512,256]),n.attachOutput(i),n.render(t,r),r.dispose(t),i},$n.generateNormalDistribution=function(t,e){for(var t=t||256,e=e||1024,r=new or({width:t,height:e,type:nr.FLOAT,minFilter:nr.NEAREST,magFilter:nr.NEAREST,useMipmap:!1}),n=new Float32Array(e*t*4),i=0;i<e;i++){var a=i/e,o=(i<<16|i>>>16)>>>0;o=((1431655765&o)<<1|(2863311530&o)>>>1)>>>0,o=((858993459&o)<<2|(3435973836&o)>>>2)>>>0,o=((252645135&o)<<4|(4042322160&o)>>>4)>>>0,o=(((16711935&o)<<8|(4278255360&o)>>>8)>>>0)/4294967296;for(var s=0;s<t;s++){var u=s/t,l=u*u,h=2*Math.PI*a,c=Math.sqrt((1-o)/(1+(l*l-1)*o)),f=Math.sqrt(1-c*c),d=4*(i*t+s);n[d]=f*Math.cos(h),n[d+1]=f*Math.sin(h),n[d+2]=c,n[d+3]=1}}return r.pixels=n,r};var ei=On.extend({cubemap:null,castShadow:!1,_normalDistribution:null,_brdfLookup:null},{type:"AMBIENT_CUBEMAP_LIGHT",prefilter:function(t,e){this._brdfLookup||(this._normalDistribution=$n.generateNormalDistribution(),this._brdfLookup=$n.integrateBRDF(t,this._normalDistribution));var r=this.cubemap;if(!r.__prefiltered){var n=$n.prefilterEnvironmentMap(t,r,{encodeRGBM:!0,width:e,height:e},this._normalDistribution,this._brdfLookup);this.cubemap=n.environmentMap,this.cubemap.__prefiltered=!0,r.dispose(t)}},uniformTemplates:{ambientCubemapLightColor:{type:"3f",value:function(t){var e=t.color,r=t.intensity;return[e[0]*r,e[1]*r,e[2]*r]}},ambientCubemapLightCubemap:{type:"t",value:function(t){return t.cubemap}},ambientCubemapLightBRDFLookup:{type:"t",value:function(t){return t._brdfLookup}}}}),ri=On.extend({castShadow:!1,coefficients:[]},function(){this._coefficientsTmpArr=new Tr.Float32Array(27)},{type:"AMBIENT_SH_LIGHT",uniformTemplates:{ambientSHLightColor:{type:"3f",value:function(t){var e=t.color,r=t.intensity;return[e[0]*r,e[1]*r,e[2]*r]}},ambientSHLightCoefficients:{type:"3f",value:function(t){for(var e=t._coefficientsTmpArr,r=0;r<t.coefficients.length;r++)e[r]=t.coefficients[r];return e}}}}),ni=On.extend({shadowBias:.001,shadowSlopeScale:2,shadowCascade:1,cascadeSplitLogFactor:.2},{type:"DIRECTIONAL_LIGHT",uniformTemplates:{directionalLightDirection:{type:"3f",value:function(t){return t.__dir=t.__dir||new ie,t.__dir.copy(t.worldTransform.z).normalize().negate()._array}},directionalLightColor:{type:"3f",value:function(t){var e=t.color,r=t.intensity;return[e[0]*r,e[1]*r,e[2]*r]}}},clone:function(){var t=On.prototype.clone.call(this);return t.shadowBias=this.shadowBias,t.shadowSlopeScale=this.shadowSlopeScale,t}}),ii=On.extend({range:100,castShadow:!1},{type:"POINT_LIGHT",uniformTemplates:{pointLightPosition:{type:"3f",value:function(t){return t.getWorldPosition()._array}},pointLightRange:{type:"1f",value:function(t){return t.range}},pointLightColor:{type:"3f",value:function(t){var e=t.color,r=t.intensity;return[e[0]*r,e[1]*r,e[2]*r]}}},clone:function(){var t=On.prototype.clone.call(this);return t.range=this.range,t}}),ai=On.extend({range:100,radius:5},{type:"SPHERE_LIGHT",uniformTemplates:{sphereLightPosition:{type:"3f",value:function(t){return t.getWorldPosition()._array}},sphereLightRange:{type:"1f",value:function(t){return t.range}},sphereLightRadius:{type:"1f",value:function(t){return t.radius}},sphereLightColor:{type:"3f",value:function(t){var e=t.color,r=t.intensity;return[e[0]*r,e[1]*r,e[2]*r]}}}}),oi=On.extend({range:20,umbraAngle:30,penumbraAngle:45,falloffFactor:2,shadowBias:2e-4,shadowSlopeScale:2},{type:"SPOT_LIGHT",uniformTemplates:{spotLightPosition:{type:"3f",value:function(t){return t.getWorldPosition()._array}},spotLightRange:{type:"1f",value:function(t){return t.range}},spotLightUmbraAngleCosine:{type:"1f",value:function(t){return Math.cos(t.umbraAngle*Math.PI/180)}},spotLightPenumbraAngleCosine:{type:"1f",value:function(t){return Math.cos(t.penumbraAngle*Math.PI/180)}},spotLightFalloffFactor:{type:"1f",value:function(t){return t.falloffFactor}},spotLightDirection:{type:"3f",value:function(t){return t.__dir=t.__dir||new ie,t.__dir.copy(t.worldTransform.z).negate()._array}},spotLightColor:{type:"3f",value:function(t){var e=t.color,r=t.intensity;return[e[0]*r,e[1]*r,e[2]*r]}}},clone:function(){var t=On.prototype.clone.call(this);return t.range=this.range,t.umbraAngle=this.umbraAngle,t.penumbraAngle=this.penumbraAngle,t.falloffFactor=this.falloffFactor,t.shadowBias=this.shadowBias,t.shadowSlopeScale=this.shadowSlopeScale,t}}),si=On.extend({range:100,length:10},{type:"TUBE_LIGHT",uniformTemplates:{tubeLightPosition:{type:"3f",value:function(t){return t.getWorldPosition()._array}},tubeLightExtend:{type:"3f",value:function(){var t=new ie;return function(e){return t.copy(e.worldTransform.x).normalize().scale(e.length/2)._array}}()},tubeLightRange:{type:"1f",value:function(t){return t.range}},tubeLightColor:{type:"3f",value:function(t){var e=t.color,r=t.intensity;return[e[0]*r,e[1]*r,e[2]*r]}}}}),ui=/#source\((.*?)\)/,li=/#url\((.*?)\)/,hi=Rt.extend({rootPath:"",textureRootPath:"",shaderRootPath:"",scene:null,camera:null},{load:function(t){var e=this;this.rootPath||(this.rootPath=t.slice(0,t.lastIndexOf("/"))),$t.get({url:t,onprogress:function(t,r,n){e.trigger("progress",t,r,n)},onerror:function(t){e.trigger("error",t)},responseType:"text",onload:function(t){e.parse(JSON.parse(t))}})},parse:function(t){var e=this,r=new gr,n={textures:{},shaders:{},parameters:{}},i=function(i,a){for(var o=0;o<t.nodes.length;o++){var s=t.nodes[o],u=e._createNode(s,n);u&&r.addNode(u)}e.trigger("success",r)};for(var a in t.parameters){var o=t.parameters[a];n.parameters[a]=this._convertParameter(o)}return this._loadShaders(t,function(r){e._loadTextures(t,n,function(t){n.textures=t,n.shaders=r,i()})}),r},_createNode:function(t,e){var r,n,i,a=t.type||"filter";if("filter"===a){var o=t.shader.trim(),s=ui.exec(o);if(s?r=Wr.source(s[1].trim()):"#"===o.charAt(0)&&(r=e.shaders[o.substr(1)]),r||(r=o),!r)return}if(t.inputs){n={};for(var u in t.inputs)"string"==typeof t.inputs[u]?n[u]=t.inputs[u]:n[u]={node:t.inputs[u].node,pin:t.inputs[u].pin}}if(t.outputs){i={};for(var u in t.outputs){var l=t.outputs[u];if(i[u]={},null!=l.attachment&&(i[u].attachment=l.attachment),null!=l.keepLastFrame&&(i[u].keepLastFrame=l.keepLastFrame),null!=l.outputLastFrame&&(i[u].outputLastFrame=l.outputLastFrame),"string"==typeof l.parameters){var h=l.parameters;"#"===h.charAt(0)&&(i[u].parameters=e.parameters[h.substr(1)])}else l.parameters&&(i[u].parameters=this._convertParameter(l.parameters))}}var c;if(c="scene"===a?new an({name:t.name,scene:this.scene,camera:this.camera,outputs:i}):"texture"===a?new on({name:t.name,outputs:i}):new nn({name:t.name,shader:r,inputs:n,outputs:i})){if(t.parameters)for(var u in t.parameters){var f=t.parameters[u];"string"==typeof f&&(f=f.trim(),"#"===f.charAt(0)?f=e.textures[f.substr(1)]:c.on("beforerender",ut(u,ht(f)))),c.setParameter(u,f)}if(t.defines&&c.pass)for(var u in t.defines){var f=t.defines[u];c.pass.material.shader.define("fragment",u,f)}}return c},_convertParameter:function(t){var e={};return t?(["type","minFilter","magFilter","wrapS","wrapT","flipY","useMipmap"].forEach(function(r){var n=t[r];null!=n&&("string"==typeof n&&(n=nr[n]),e[r]=n)}),["width","height"].forEach(function(r){if(null!=t[r]){var n=t[r];"string"==typeof n?(n=n.trim(),e[r]=lt(r,ht(n))):e[r]=n}}),null!=t.useMipmap&&(e.useMipmap=t.useMipmap),e):e},_loadShaders:function(t,e){if(!t.shaders)return void e({});var r={},n=0,i=!1,a=this.shaderRootPath||this.rootPath;wt.each(t.shaders,function(t,o){var s=li.exec(t);if(s){var u=s[1];u=wt.relative2absolute(u,a),n++,$t.get({url:u,onload:function(t){r[o]=t,Wr.import(t),0===--n&&(e(r),i=!0)}})}else r[o]=t,Wr.import(t)},this),0!==n||i||e(r)},_loadTextures:function(t,e,r){if(!t.textures)return void r({});var n={},i=0,a=!1,o=this.textureRootPath||this.rootPath;wt.each(t.textures,function(t,e){var s,u=t.path,l=this._convertParameter(t.parameters);if(Array.isArray(u)&&6===u.length)u=u.map(function(t){return wt.relative2absolute(t,o)}),s=new fr(l);else{if("string"!=typeof u)return;u=wt.relative2absolute(u,o),s=new or(l)}s.load(u),i++,s.once("success",function(){n[e]=s,0===--i&&(r(n),a=!0)})},this),0!==i||a||r(n)}}),ci="\n@export qtek.standard.vertex\n#define SHADER_NAME standard\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\nuniform mat4 worldInverseTranspose : WORLDINVERSETRANSPOSE;\nuniform mat4 world : WORLD;\nuniform vec2 uvRepeat : [1.0, 1.0];\nuniform vec2 uvOffset : [0.0, 0.0];\nattribute vec3 position : POSITION;\nattribute vec2 texcoord : TEXCOORD_0;\n#if defined(AOMAP_ENABLED)\nattribute vec2 texcoord2 : TEXCOORD_1;\n#endif\nattribute vec3 normal : NORMAL;\nattribute vec4 tangent : TANGENT;\n#ifdef VERTEX_COLOR\nattribute vec4 a_Color : COLOR;\nvarying vec4 v_Color;\n#endif\nattribute vec3 barycentric;\n@import qtek.chunk.skinning_header\nvarying vec2 v_Texcoord;\nvarying vec3 v_Normal;\nvarying vec3 v_WorldPosition;\nvarying vec3 v_Barycentric;\n#if defined(PARALLAXOCCLUSIONMAP_ENABLED) || defined(NORMALMAP_ENABLED)\nvarying vec3 v_Tangent;\nvarying vec3 v_Bitangent;\n#endif\n#if defined(AOMAP_ENABLED)\nvarying vec2 v_Texcoord2;\n#endif\nvoid main()\n{\n    vec3 skinnedPosition = position;\n    vec3 skinnedNormal = normal;\n    vec3 skinnedTangent = tangent.xyz;\n#ifdef SKINNING\n    @import qtek.chunk.skin_matrix\n    skinnedPosition = (skinMatrixWS * vec4(position, 1.0)).xyz;\n    skinnedNormal = (skinMatrixWS * vec4(normal, 0.0)).xyz;\n    skinnedTangent = (skinMatrixWS * vec4(tangent.xyz, 0.0)).xyz;\n#endif\n    gl_Position = worldViewProjection * vec4(skinnedPosition, 1.0);\n    v_Texcoord = texcoord * uvRepeat + uvOffset;\n    v_WorldPosition = (world * vec4(skinnedPosition, 1.0)).xyz;\n    v_Barycentric = barycentric;\n    v_Normal = normalize((worldInverseTranspose * vec4(skinnedNormal, 0.0)).xyz);\n#if defined(PARALLAXOCCLUSIONMAP_ENABLED) || defined(NORMALMAP_ENABLED)\n    v_Tangent = normalize((worldInverseTranspose * vec4(skinnedTangent, 0.0)).xyz);\n    v_Bitangent = normalize(cross(v_Normal, v_Tangent) * tangent.w);\n#endif\n#ifdef VERTEX_COLOR\n    v_Color = a_Color;\n#endif\n#if defined(AOMAP_ENABLED)\n    v_Texcoord2 = texcoord2;\n#endif\n}\n@end\n@export qtek.standard.fragment\n#define PI 3.14159265358979\n#define GLOSSINESS_CHANNEL 0\n#define ROUGHNESS_CHANNEL 0\n#define METALNESS_CHANNEL 1\nuniform mat4 viewInverse : VIEWINVERSE;\nvarying vec2 v_Texcoord;\nvarying vec3 v_Normal;\nvarying vec3 v_WorldPosition;\n#ifdef VERTEX_COLOR\nvarying vec4 v_Color;\n#endif\n#if defined(PARALLAXOCCLUSIONMAP_ENABLED) || defined(NORMALMAP_ENABLED)\nvarying vec3 v_Tangent;\nvarying vec3 v_Bitangent;\n#endif\n#ifdef NORMALMAP_ENABLED\nuniform sampler2D normalMap;\n#endif\n#ifdef DIFFUSEMAP_ENABLED\nuniform sampler2D diffuseMap;\n#endif\n#ifdef SPECULARMAP_ENABLED\nuniform sampler2D specularMap;\n#endif\n#ifdef USE_ROUGHNESS\nuniform float roughness : 0.5;\n    #ifdef ROUGHNESSMAP_ENABLED\nuniform sampler2D roughnessMap;\n    #endif\n#else\nuniform float glossiness: 0.5;\n    #ifdef GLOSSINESSMAP_ENABLED\nuniform sampler2D glossinessMap;\n    #endif\n#endif\n#ifdef METALNESSMAP_ENABLED\nuniform sampler2D metalnessMap;\n#endif\n#ifdef ENVIRONMENTMAP_ENABLED\nuniform samplerCube environmentMap;\n    #ifdef PARALLAX_CORRECTED\nuniform vec3 environmentBoxMin;\nuniform vec3 environmentBoxMax;\n    #endif\n#endif\n#ifdef BRDFLOOKUP_ENABLED\nuniform sampler2D brdfLookup;\n#endif\n#ifdef EMISSIVEMAP_ENABLED\nuniform sampler2D emissiveMap;\n#endif\n#ifdef SSAOMAP_ENABLED\nuniform sampler2D ssaoMap;\nuniform vec4 viewport : VIEWPORT;\n#endif\n#ifdef AOMAP_ENABLED\nuniform sampler2D aoMap;\nuniform float aoIntensity;\nvarying vec2 v_Texcoord2;\n#endif\nuniform vec3 color : [1.0, 1.0, 1.0];\nuniform float alpha : 1.0;\n#ifdef ALPHA_TEST\nuniform float alphaCutoff: 0.9;\n#endif\n#ifdef USE_METALNESS\nuniform float metalness : 0.0;\n#else\nuniform vec3 specularColor : [0.1, 0.1, 0.1];\n#endif\nuniform vec3 emission : [0.0, 0.0, 0.0];\nuniform float emissionIntensity: 1;\nuniform float lineWidth : 0.0;\nuniform vec4 lineColor : [0.0, 0.0, 0.0, 0.6];\nvarying vec3 v_Barycentric;\n#ifdef ENVIRONMENTMAP_PREFILTER\nuniform float maxMipmapLevel: 5;\n#endif\n#ifdef AMBIENT_LIGHT_COUNT\n@import qtek.header.ambient_light\n#endif\n#ifdef AMBIENT_SH_LIGHT_COUNT\n@import qtek.header.ambient_sh_light\n#endif\n#ifdef AMBIENT_CUBEMAP_LIGHT_COUNT\n@import qtek.header.ambient_cubemap_light\n#endif\n#ifdef POINT_LIGHT_COUNT\n@import qtek.header.point_light\n#endif\n#ifdef DIRECTIONAL_LIGHT_COUNT\n@import qtek.header.directional_light\n#endif\n#ifdef SPOT_LIGHT_COUNT\n@import qtek.header.spot_light\n#endif\n@import qtek.util.calculate_attenuation\n@import qtek.util.edge_factor\n@import qtek.util.rgbm\n@import qtek.util.srgb\n@import qtek.plugin.compute_shadow_map\n@import qtek.util.parallax_correct\nfloat G_Smith(float g, float ndv, float ndl)\n{\n    float roughness = 1.0 - g;\n    float k = roughness * roughness / 2.0;\n    float G1V = ndv / (ndv * (1.0 - k) + k);\n    float G1L = ndl / (ndl * (1.0 - k) + k);\n    return G1L * G1V;\n}\nvec3 F_Schlick(float ndv, vec3 spec) {\n    return spec + (1.0 - spec) * pow(1.0 - ndv, 5.0);\n}\nfloat D_Phong(float g, float ndh) {\n    float a = pow(8192.0, g);\n    return (a + 2.0) / 8.0 * pow(ndh, a);\n}\nfloat D_GGX(float g, float ndh) {\n    float r = 1.0 - g;\n    float a = r * r;\n    float tmp = ndh * ndh * (a - 1.0) + 1.0;\n    return a / (PI * tmp * tmp);\n}\n#ifdef PARALLAXOCCLUSIONMAP_ENABLED\nuniform float parallaxOcclusionScale : 0.02;\nuniform float parallaxMaxLayers : 20;\nuniform float parallaxMinLayers : 5;\nuniform sampler2D parallaxOcclusionMap;\nmat3 transpose(in mat3 inMat)\n{\n    vec3 i0 = inMat[0];\n    vec3 i1 = inMat[1];\n    vec3 i2 = inMat[2];\n    return mat3(\n        vec3(i0.x, i1.x, i2.x),\n        vec3(i0.y, i1.y, i2.y),\n        vec3(i0.z, i1.z, i2.z)\n    );\n}\nvec2 parallaxUv(vec2 uv, vec3 viewDir)\n{\n    float numLayers = mix(parallaxMaxLayers, parallaxMinLayers, abs(dot(vec3(0.0, 0.0, 1.0), viewDir)));\n    float layerHeight = 1.0 / numLayers;\n    float curLayerHeight = 0.0;\n    vec2 deltaUv = viewDir.xy * parallaxOcclusionScale / (viewDir.z * numLayers);\n    vec2 curUv = uv;\n    float height = 1.0 - texture2D(parallaxOcclusionMap, curUv).r;\n    for (int i = 0; i < 30; i++) {\n        curLayerHeight += layerHeight;\n        curUv -= deltaUv;\n        height = 1.0 - texture2D(parallaxOcclusionMap, curUv).r;\n        if (height < curLayerHeight) {\n            break;\n        }\n    }\n    vec2 prevUv = curUv + deltaUv;\n    float next = height - curLayerHeight;\n    float prev = 1.0 - texture2D(parallaxOcclusionMap, prevUv).r - curLayerHeight + layerHeight;\n    return mix(curUv, prevUv, next / (next - prev));\n}\n#endif\nvoid main() {\n    \n    vec4 albedoColor = vec4(color, alpha);\n#ifdef VERTEX_COLOR\n    albedoColor *= v_Color;\n#endif\n    vec3 eyePos = viewInverse[3].xyz;\n    vec3 V = normalize(eyePos - v_WorldPosition);\n    vec2 uv = v_Texcoord;\n#if defined(PARALLAXOCCLUSIONMAP_ENABLED) || defined(NORMALMAP_ENABLED)\n    mat3 tbn = mat3(v_Tangent, v_Bitangent, v_Normal);\n#endif\n#ifdef PARALLAXOCCLUSIONMAP_ENABLED\n    uv = parallaxUv(v_Texcoord, normalize(transpose(tbn) * -V));\n#endif\n#ifdef DIFFUSEMAP_ENABLED\n    vec4 texel = texture2D(diffuseMap, uv);\n    #ifdef SRGB_DECODE\n    texel = sRGBToLinear(texel);\n    #endif\n    albedoColor.rgb *= texel.rgb;\n    #ifdef DIFFUSEMAP_ALPHA_ALPHA\n    albedoColor.a *= texel.a;\n    #endif\n#endif\n#ifdef USE_METALNESS\n    float m = metalness;\n    #ifdef METALNESSMAP_ENABLED\n    float m2 = texture2D(metalnessMap, uv)[METALNESS_CHANNEL];\n    m = clamp(m2 + (m - 0.5) * 2.0, 0.0, 1.0);\n    #endif\n    vec3 baseColor = albedoColor.rgb;\n    albedoColor.rgb = baseColor * (1.0 - m);\n    vec3 spec = mix(vec3(0.04), baseColor, m);\n#else\n    vec3 spec = specularColor;\n#endif\n#ifdef USE_ROUGHNESS\n    float g = 1.0 - roughness;\n    #ifdef ROUGHNESSMAP_ENABLED\n    float g2 = 1.0 - texture2D(roughnessMap, uv)[ROUGHNESS_CHANNEL];\n    g = clamp(g2 + (g - 0.5) * 2.0, 0.0, 1.0);\n    #endif\n#else\n    float g = glossiness;\n    #ifdef GLOSSINESSMAP_ENABLED\n    float g2 = texture2D(glossinessMap, uv)[GLOSSINESS_CHANNEL];\n    g = clamp(g2 + (g - 0.5) * 2.0, 0.0, 1.0);\n    #endif\n#endif\n#ifdef SPECULARMAP_ENABLED\n    spec *= sRGBToLinear(texture2D(specularMap, uv)).rgb;\n#endif\n    vec3 N = v_Normal;\n#ifdef DOUBLE_SIDED\n    if (dot(N, V) < 0.0) {\n        N = -N;\n    }\n#endif\n#ifdef NORMALMAP_ENABLED\n    if (dot(v_Tangent, v_Tangent) > 0.0) {\n        vec3 normalTexel = texture2D(normalMap, uv).xyz;\n        if (dot(normalTexel, normalTexel) > 0.0) {            N = normalTexel * 2.0 - 1.0;\n            tbn[1] = -tbn[1];\n            N = normalize(tbn * N);\n        }\n    }\n#endif\n    vec3 diffuseTerm = vec3(0.0, 0.0, 0.0);\n    vec3 specularTerm = vec3(0.0, 0.0, 0.0);\n    float ndv = clamp(dot(N, V), 0.0, 1.0);\n    vec3 fresnelTerm = F_Schlick(ndv, spec);\n#ifdef AMBIENT_LIGHT_COUNT\n    for(int _idx_ = 0; _idx_ < AMBIENT_LIGHT_COUNT; _idx_++)\n    {{\n        diffuseTerm += ambientLightColor[_idx_];\n    }}\n#endif\n#ifdef AMBIENT_SH_LIGHT_COUNT\n    for(int _idx_ = 0; _idx_ < AMBIENT_SH_LIGHT_COUNT; _idx_++)\n    {{\n        diffuseTerm += calcAmbientSHLight(_idx_, N) * ambientSHLightColor[_idx_];\n    }}\n#endif\n#ifdef POINT_LIGHT_COUNT\n#if defined(POINT_LIGHT_SHADOWMAP_COUNT)\n    float shadowContribsPoint[POINT_LIGHT_COUNT];\n    if(shadowEnabled)\n    {\n        computeShadowOfPointLights(v_WorldPosition, shadowContribsPoint);\n    }\n#endif\n    for(int _idx_ = 0; _idx_ < POINT_LIGHT_COUNT; _idx_++)\n    {{\n        vec3 lightPosition = pointLightPosition[_idx_];\n        vec3 lc = pointLightColor[_idx_];\n        float range = pointLightRange[_idx_];\n        vec3 L = lightPosition - v_WorldPosition;\n        float dist = length(L);\n        float attenuation = lightAttenuation(dist, range);\n        L /= dist;\n        vec3 H = normalize(L + V);\n        float ndl = clamp(dot(N, L), 0.0, 1.0);\n        float ndh = clamp(dot(N, H), 0.0, 1.0);\n        float shadowContrib = 1.0;\n#if defined(POINT_LIGHT_SHADOWMAP_COUNT)\n        if(shadowEnabled)\n        {\n            shadowContrib = shadowContribsPoint[_idx_];\n        }\n#endif\n        vec3 li = lc * ndl * attenuation * shadowContrib;\n        diffuseTerm += li;\n        specularTerm += li * fresnelTerm * D_Phong(g, ndh);\n    }}\n#endif\n#ifdef DIRECTIONAL_LIGHT_COUNT\n#if defined(DIRECTIONAL_LIGHT_SHADOWMAP_COUNT)\n    float shadowContribsDir[DIRECTIONAL_LIGHT_COUNT];\n    if(shadowEnabled)\n    {\n        computeShadowOfDirectionalLights(v_WorldPosition, shadowContribsDir);\n    }\n#endif\n    for(int _idx_ = 0; _idx_ < DIRECTIONAL_LIGHT_COUNT; _idx_++)\n    {{\n        vec3 L = -normalize(directionalLightDirection[_idx_]);\n        vec3 lc = directionalLightColor[_idx_];\n        vec3 H = normalize(L + V);\n        float ndl = clamp(dot(N, L), 0.0, 1.0);\n        float ndh = clamp(dot(N, H), 0.0, 1.0);\n        float shadowContrib = 1.0;\n#if defined(DIRECTIONAL_LIGHT_SHADOWMAP_COUNT)\n        if(shadowEnabled)\n        {\n            shadowContrib = shadowContribsDir[_idx_];\n        }\n#endif\n        vec3 li = lc * ndl * shadowContrib;\n        diffuseTerm += li;\n        specularTerm += li * fresnelTerm * D_Phong(g, ndh);\n    }}\n#endif\n#ifdef SPOT_LIGHT_COUNT\n#if defined(SPOT_LIGHT_SHADOWMAP_COUNT)\n    float shadowContribsSpot[SPOT_LIGHT_COUNT];\n    if(shadowEnabled)\n    {\n        computeShadowOfSpotLights(v_WorldPosition, shadowContribsSpot);\n    }\n#endif\n    for(int i = 0; i < SPOT_LIGHT_COUNT; i++)\n    {\n        vec3 lightPosition = spotLightPosition[i];\n        vec3 spotLightDirection = -normalize(spotLightDirection[i]);\n        vec3 lc = spotLightColor[i];\n        float range = spotLightRange[i];\n        float a = spotLightUmbraAngleCosine[i];\n        float b = spotLightPenumbraAngleCosine[i];\n        float falloffFactor = spotLightFalloffFactor[i];\n        vec3 L = lightPosition - v_WorldPosition;\n        float dist = length(L);\n        float attenuation = lightAttenuation(dist, range);\n        L /= dist;\n        float c = dot(spotLightDirection, L);\n        float falloff;\n        falloff = clamp((c - a) /( b - a), 0.0, 1.0);\n        falloff = pow(falloff, falloffFactor);\n        vec3 H = normalize(L + V);\n        float ndl = clamp(dot(N, L), 0.0, 1.0);\n        float ndh = clamp(dot(N, H), 0.0, 1.0);\n        float shadowContrib = 1.0;\n#if defined(SPOT_LIGHT_SHADOWMAP_COUNT)\n        if (shadowEnabled)\n        {\n            shadowContrib = shadowContribsSpot[i];\n        }\n#endif\n        vec3 li = lc * attenuation * (1.0 - falloff) * shadowContrib * ndl;\n        diffuseTerm += li;\n        specularTerm += li * fresnelTerm * D_Phong(g, ndh);\n    }\n#endif\n    vec4 outColor = albedoColor;\n    outColor.rgb *= diffuseTerm;\n    outColor.rgb += specularTerm;\n#ifdef AMBIENT_CUBEMAP_LIGHT_COUNT\n    vec3 L = reflect(-V, N);\n    float rough2 = clamp(1.0 - g, 0.0, 1.0);\n    float bias2 = rough2 * 5.0;\n    vec2 brdfParam2 = texture2D(ambientCubemapLightBRDFLookup[0], vec2(rough2, ndv)).xy;\n    vec3 envWeight2 = spec * brdfParam2.x + brdfParam2.y;\n    vec3 envTexel2;\n    for(int _idx_ = 0; _idx_ < AMBIENT_CUBEMAP_LIGHT_COUNT; _idx_++)\n    {{\n        envTexel2 = RGBMDecode(textureCubeLodEXT(ambientCubemapLightCubemap[_idx_], L, bias2), 51.5);\n        outColor.rgb += ambientCubemapLightColor[_idx_] * envTexel2 * envWeight2;\n    }}\n#endif\n#ifdef ENVIRONMENTMAP_ENABLED\n    vec3 envWeight = g * fresnelTerm;\n    vec3 L = reflect(-V, N);\n    #ifdef PARALLAX_CORRECTED\n    L = parallaxCorrect(L, v_WorldPosition, environmentBoxMin, environmentBoxMax);\n    #endif\n    #ifdef ENVIRONMENTMAP_PREFILTER\n    float rough = clamp(1.0 - g, 0.0, 1.0);\n    float bias = rough * maxMipmapLevel;\n    vec3 envTexel = decodeHDR(textureCubeLodEXT(environmentMap, L, bias)).rgb;\n        #ifdef BRDFLOOKUP_ENABLED\n    vec2 brdfParam = texture2D(brdfLookup, vec2(rough, ndv)).xy;\n    envWeight = spec * brdfParam.x + brdfParam.y;\n        #endif\n    #else\n    vec3 envTexel = textureCube(environmentMap, L).xyz;\n    #endif\n    outColor.rgb += envTexel * envWeight;\n#endif\n    float aoFactor = 1.0;\n#ifdef SSAOMAP_ENABLED\n    aoFactor = min(texture2D(ssaoMap, (gl_FragCoord.xy - viewport.xy) / viewport.zw).r, aoFactor);\n#endif\n#ifdef AOMAP_ENABLED\n    aoFactor = min(1.0 - clamp((1.0 - texture2D(aoMap, v_Texcoord2).r) * aoIntensity, 0.0, 1.0), aoFactor);\n#endif\n    outColor.rgb *= aoFactor;\n    vec3 lEmission = emission;\n#ifdef EMISSIVEMAP_ENABLED\n    lEmission *= texture2D(emissiveMap, uv).rgb;\n#endif\n    outColor.rgb += lEmission * emissionIntensity;\n#ifdef GAMMA_ENCODE\n    outColor.rgb = pow(outColor.rgb, vec3(1 / 2.2));\n#endif\n    if(lineWidth > 0.)\n    {\n        outColor.rgb = mix(outColor.rgb, lineColor.rgb, (1.0 - edgeFactor(lineWidth)) * lineColor.a);\n    }\n#ifdef ALPHA_TEST\n    if (outColor.a < alphaCutoff) {\n        discard;\n    }\n#endif\n    gl_FragColor = encodeHDR(outColor);\n}\n@end\n";Wr.import(ci);var fi={},di={},_i=["diffuseMap","normalMap","roughnessMap","metalnessMap","emissiveMap","environmentMap","brdfLookup","ssaoMap","aoMap"],mi=["color","emission","emissionIntensity","alpha","roughness","metalness","uvRepeat","uvOffset","aoIntensity","alphaCutoff"],pi=["jointCount","linear","encodeRGBM","decodeRGBM","doubleSided","alphaTest","roughnessChannel","metalnessChannel"],vi=["environmentMapPrefiltered","linear","encodeRGBM","decodeRGBM","doubleSided","alphaTest","parallaxCorrected"],gi=_i.concat(vi),yi=gi.reduce(function(t,e,r){return t[e]=4096<<r,t},{}),xi=Xr.extend(function(){return{color:[1,1,1],emission:[0,0,0],emissionIntensity:0,roughness:.5,metalness:0,alpha:1,alphaTest:!1,alphaCutoff:.9,doubleSided:!1,uvRepeat:[1,1],uvOffset:[0,0],aoIntensity:1,jointCount:0,environmentMapPrefiltered:!1,linear:!1,encodeRGBM:!1,decodeRGBM:!1,roughnessChannel:0,metalnessChannel:1}},{_doUpdateShader:function(t){var e=_i.filter(function(t){return!!this[t]},this);this._shader&&(dt(this._shader,t),this._shader.detached());var r=ft(t,e,this.jointCount||0,{environmentMapPrefiltered:this.environmentMapPrefiltered,linear:this.linear,encodeRGBM:this.encodeRGBM,decodeRGBM:this.decodeRGBM,parallaxCorrected:!!this._environmentBox,alphaTest:this.alphaTest,doubleSided:this.doubleSided,metalnessChannel:this.metalnessChannel,roughnessChannel:this.roughnessChannel}),n=this.uniforms;this.uniforms=r.createUniforms(),this._shader=r;var i=this.uniforms;this._enabledUniforms=Object.keys(i);for(var a in n)i[a]&&(i[a].value=n[a].value);r.attached(),this._shaderDirty=!1},updateShader:function(t){this._shaderDirty&&(this._doUpdateShader(t),this._shaderDirty=!1)},attachShader:function(){},dispose:function(t,e){this._shader&&dt(this._shader),Xr.prototype.dispose.call(t,e)},clone:function(){var t=new xi({name:this.name});return _i.forEach(function(e){this[e]&&(t[e]=this[e])},this),mi.concat(pi).forEach(function(e){t[e]=this[e]},this),t}});mi.forEach(function(t){Object.defineProperty(xi.prototype,t,{get:function(){return this.get(t)},set:function(e){var r=this.uniforms=this.uniforms||{};r[t]=r[t]||{value:null},this.setUniform(t,e)}})}),_i.forEach(function(t){Object.defineProperty(xi.prototype,t,{get:function(){return this.get(t)},set:function(e){var r=this.uniforms=this.uniforms||{};r[t]=r[t]||{value:null};var n=this.get(t);this.setUniform(t,e),!n!=!e&&(this._shaderDirty=!0)}})}),pi.forEach(function(t){var e="_"+t;Object.defineProperty(xi.prototype,t,{get:function(){return this[e]},set:function(t){var r=this[e];this[e]=t,r!==t&&(this._shaderDirty=!0)}})}),Object.defineProperty(xi.prototype,"environmentBox",{get:function(){var t=this._environmentBox;return t&&(t.min.setArray(this.get("environmentBoxMin")),t.max.setArray(this.get("environmentBoxMax"))),t},set:function(t){var e=this._environmentBox;this._environmentBox=t;var r=this.uniforms=this.uniforms||{};r.environmentBoxMin=r.environmentBoxMin||{value:null},r.environmentBoxMax=r.environmentBoxMax||{value:null},t&&(this.setUniform("environmentBoxMin",t.min._array),this.setUniform("environmentBoxMax",t.max._array)),e!==t&&(this._shaderDirty=!0)}}),Object.defineProperty(xi.prototype,"shader",{get:function(){return this._shader},set:function(){console.warn("StandardMaterial can't change shader")}});var Ti=Bt.quat,Ei=Bt.vec3,bi=Bt.mat4,Si=Rt.extend(function(){return{relativeRootNode:null,name:"",joints:[],_clips:[],_invBindPoseMatricesArray:null,_jointMatricesSubArrays:[],_skinMatricesArray:null,_skinMatricesSubArrays:[],_subSkinMatricesArray:{}}},{addClip:function(t,e){for(var r=0;r<this._clips.length;r++)if(this._clips[r].clip===t)return;for(var n=[],r=0;r<this.joints.length;r++)n[r]=-1;for(var r=0;r<t.tracks.length;r++)for(var i=0;i<this.joints.length;i++){var a=this.joints[i],o=t.tracks[r],s=a.name;if(e&&(s=e[s]),o.name===s){n[i]=r;break}}return this._clips.push({maps:n,clip:t}),this._clips.length-1},removeClip:function(t){for(var e=-1,r=0;r<this._clips.length;r++)if(this._clips[r].clip===t){e=r;break}e>0&&this._clips.splice(e,1)},removeClipsAll:function(){this._clips=[]},getClip:function(t){if(this._clips[t])return this._clips[t].clip},getClipNumber:function(){return this._clips.length},updateJointMatrices:function(){var t=bi.create();return function(){this._invBindPoseMatricesArray=new Float32Array(16*this.joints.length),this._skinMatricesArray=new Float32Array(16*this.joints.length);for(var e=0;e<this.joints.length;e++){var r=this.joints[e];bi.copy(t,r.node.worldTransform._array),bi.invert(t,t);for(var n=16*e,i=0;i<16;i++)this._invBindPoseMatricesArray[n+i]=t[i]}this.updateMatricesSubArrays()}}(),setJointMatricesArray:function(t){this._invBindPoseMatricesArray=t,this._skinMatricesArray=new Float32Array(t.length),this.updateMatricesSubArrays()},updateMatricesSubArrays:function(){for(var t=0;t<this.joints.length;t++)this._jointMatricesSubArrays[t]=this._invBindPoseMatricesArray.subarray(16*t,16*(t+1)),this._skinMatricesSubArrays[t]=this._skinMatricesArray.subarray(16*t,16*(t+1))},update:function(){return function(){for(var t=0;t<this.joints.length;t++){var e=this.joints[t];bi.multiply(this._skinMatricesSubArrays[t],e.node.worldTransform._array,this._jointMatricesSubArrays[t])}}}(),getSubSkinMatrices:function(t,e){var r=this._subSkinMatricesArray[t];r||(r=this._subSkinMatricesArray[t]=new Float32Array(16*e.length));for(var n=0,i=0;i<e.length;i++)for(var a=e[i],o=0;o<16;o++)r[n++]=this._skinMatricesArray[16*a+o];return r},setPose:function(t){if(this._clips[t])for(var e=this._clips[t].clip,r=this._clips[t].maps,n=0;n<this.joints.length;n++){var i=this.joints[n];if(-1!==r[n]){var a=e.tracks[r[n]];a.channels.position&&Ei.copy(i.node.position._array,a.position),a.channels.rotation&&Ti.copy(i.node.rotation._array,a.rotation),a.channels.scale&&Ei.copy(i.node.scale._array,a.scale),i.node.position._dirty=!0,i.node.rotation._dirty=!0,i.node.scale._dirty=!0}}this.update()},clone:function(t,e){var r=new Si;r.name=this.name;for(var n=0;n<this.joints.length;n++){var i=new In;i.name=this.joints[n].name,i.index=this.joints[n].index;var a=this.joints[n].node.getPath(t),o=this.joints[n].rootNode.getPath(t);null!=a&&null!=o?i.node=e.queryNode(a):console.warn("Something wrong in clone, may be the skeleton root nodes is not mounted on the cloned root node."),r.joints.push(i)}if(this._invBindPoseMatricesArray){var s=this._invBindPoseMatricesArray.length;r._invBindPoseMatricesArray=new Float32Array(s);for(var n=0;n<s;n++)r._invBindPoseMatricesArray[n]=this._invBindPoseMatricesArray[n];r._skinMatricesArray=new Float32Array(s),r.updateMatricesSubArrays()}return r.update(),r}});Wr.import(mn),Wr.import(Rn),Wr.import(Wn),
Wr.import("\n@export qtek.lambert.vertex\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\nuniform mat4 worldInverseTranspose : WORLDINVERSETRANSPOSE;\nuniform mat4 world : WORLD;\nuniform vec2 uvRepeat : [1.0, 1.0];\nuniform vec2 uvOffset : [0.0, 0.0];\nattribute vec3 position : POSITION;\nattribute vec2 texcoord : TEXCOORD_0;\nattribute vec3 normal : NORMAL;\nattribute vec3 barycentric;\n#ifdef VERTEX_COLOR\nattribute vec4 a_Color : COLOR;\nvarying vec4 v_Color;\n#endif\n@import qtek.chunk.skinning_header\nvarying vec2 v_Texcoord;\nvarying vec3 v_Normal;\nvarying vec3 v_WorldPosition;\nvarying vec3 v_Barycentric;\nvoid main()\n{\n    vec3 skinnedPosition = position;\n    vec3 skinnedNormal = normal;\n#ifdef SKINNING\n    @import qtek.chunk.skin_matrix\n    skinnedPosition = (skinMatrixWS * vec4(position, 1.0)).xyz;\n    skinnedNormal = (skinMatrixWS * vec4(normal, 0.0)).xyz;\n#endif\n    gl_Position = worldViewProjection * vec4( skinnedPosition, 1.0 );\n    v_Texcoord = texcoord * uvRepeat + uvOffset;\n    v_Normal = normalize( ( worldInverseTranspose * vec4(skinnedNormal, 0.0) ).xyz );\n    v_WorldPosition = ( world * vec4( skinnedPosition, 1.0) ).xyz;\n    v_Barycentric = barycentric;\n#ifdef VERTEX_COLOR\n    v_Color = a_Color;\n#endif\n}\n@end\n@export qtek.lambert.fragment\nvarying vec2 v_Texcoord;\nvarying vec3 v_Normal;\nvarying vec3 v_WorldPosition;\nuniform sampler2D diffuseMap;\nuniform sampler2D alphaMap;\nuniform vec3 color : [1.0, 1.0, 1.0];\nuniform vec3 emission : [0.0, 0.0, 0.0];\nuniform float alpha : 1.0;\n#ifdef ALPHA_TEST\nuniform float alphaCutoff: 0.9;\n#endif\nuniform float lineWidth : 0.0;\nuniform vec4 lineColor : [0.0, 0.0, 0.0, 0.6];\nvarying vec3 v_Barycentric;\n#ifdef VERTEX_COLOR\nvarying vec4 v_Color;\n#endif\n#ifdef AMBIENT_LIGHT_COUNT\n@import qtek.header.ambient_light\n#endif\n#ifdef AMBIENT_SH_LIGHT_COUNT\n@import qtek.header.ambient_sh_light\n#endif\n#ifdef POINT_LIGHT_COUNT\n@import qtek.header.point_light\n#endif\n#ifdef DIRECTIONAL_LIGHT_COUNT\n@import qtek.header.directional_light\n#endif\n#ifdef SPOT_LIGHT_COUNT\n@import qtek.header.spot_light\n#endif\n@import qtek.util.calculate_attenuation\n@import qtek.util.edge_factor\n@import qtek.util.rgbm\n@import qtek.plugin.compute_shadow_map\nvoid main()\n{\n#ifdef RENDER_NORMAL\n    gl_FragColor = vec4(v_Normal * 0.5 + 0.5, 1.0);\n    return;\n#endif\n#ifdef RENDER_TEXCOORD\n    gl_FragColor = vec4(v_Texcoord, 1.0, 1.0);\n    return;\n#endif\n    gl_FragColor = vec4(color, alpha);\n#ifdef VERTEX_COLOR\n    gl_FragColor *= v_Color;\n#endif\n#ifdef DIFFUSEMAP_ENABLED\n    vec4 tex = texture2D( diffuseMap, v_Texcoord );\n#ifdef SRGB_DECODE\n    tex.rgb = pow(tex.rgb, vec3(2.2));\n#endif\n    gl_FragColor.rgb *= tex.rgb;\n#ifdef DIFFUSEMAP_ALPHA_ALPHA\n    gl_FragColor.a *= tex.a;\n#endif\n#endif\n    vec3 diffuseColor = vec3(0.0, 0.0, 0.0);\n#ifdef AMBIENT_LIGHT_COUNT\n    for(int _idx_ = 0; _idx_ < AMBIENT_LIGHT_COUNT; _idx_++)\n    {\n        diffuseColor += ambientLightColor[_idx_];\n    }\n#endif\n#ifdef AMBIENT_SH_LIGHT_COUNT\n    for(int _idx_ = 0; _idx_ < AMBIENT_SH_LIGHT_COUNT; _idx_++)\n    {{\n        diffuseColor += calcAmbientSHLight(_idx_, v_Normal) * ambientSHLightColor[_idx_];\n    }}\n#endif\n#ifdef POINT_LIGHT_COUNT\n#if defined(POINT_LIGHT_SHADOWMAP_COUNT)\n    float shadowContribsPoint[POINT_LIGHT_COUNT];\n    if( shadowEnabled )\n    {\n        computeShadowOfPointLights(v_WorldPosition, shadowContribsPoint);\n    }\n#endif\n    for(int i = 0; i < POINT_LIGHT_COUNT; i++)\n    {\n        vec3 lightPosition = pointLightPosition[i];\n        vec3 lightColor = pointLightColor[i];\n        float range = pointLightRange[i];\n        vec3 lightDirection = lightPosition - v_WorldPosition;\n        float dist = length(lightDirection);\n        float attenuation = lightAttenuation(dist, range);\n        lightDirection /= dist;\n        float ndl = dot( v_Normal, lightDirection );\n        float shadowContrib = 1.0;\n#if defined(POINT_LIGHT_SHADOWMAP_COUNT)\n        if( shadowEnabled )\n        {\n            shadowContrib = shadowContribsPoint[i];\n        }\n#endif\n        diffuseColor += lightColor * clamp(ndl, 0.0, 1.0) * attenuation * shadowContrib;\n    }\n#endif\n#ifdef DIRECTIONAL_LIGHT_COUNT\n#if defined(DIRECTIONAL_LIGHT_SHADOWMAP_COUNT)\n    float shadowContribsDir[DIRECTIONAL_LIGHT_COUNT];\n    if(shadowEnabled)\n    {\n        computeShadowOfDirectionalLights(v_WorldPosition, shadowContribsDir);\n    }\n#endif\n    for(int i = 0; i < DIRECTIONAL_LIGHT_COUNT; i++)\n    {\n        vec3 lightDirection = -directionalLightDirection[i];\n        vec3 lightColor = directionalLightColor[i];\n        float ndl = dot(v_Normal, normalize(lightDirection));\n        float shadowContrib = 1.0;\n#if defined(DIRECTIONAL_LIGHT_SHADOWMAP_COUNT)\n        if( shadowEnabled )\n        {\n            shadowContrib = shadowContribsDir[i];\n        }\n#endif\n        diffuseColor += lightColor * clamp(ndl, 0.0, 1.0) * shadowContrib;\n    }\n#endif\n#ifdef SPOT_LIGHT_COUNT\n#if defined(SPOT_LIGHT_SHADOWMAP_COUNT)\n    float shadowContribsSpot[SPOT_LIGHT_COUNT];\n    if(shadowEnabled)\n    {\n        computeShadowOfSpotLights(v_WorldPosition, shadowContribsSpot);\n    }\n#endif\n    for(int i = 0; i < SPOT_LIGHT_COUNT; i++)\n    {\n        vec3 lightPosition = -spotLightPosition[i];\n        vec3 spotLightDirection = -normalize( spotLightDirection[i] );\n        vec3 lightColor = spotLightColor[i];\n        float range = spotLightRange[i];\n        float a = spotLightUmbraAngleCosine[i];\n        float b = spotLightPenumbraAngleCosine[i];\n        float falloffFactor = spotLightFalloffFactor[i];\n        vec3 lightDirection = lightPosition - v_WorldPosition;\n        float dist = length(lightDirection);\n        float attenuation = lightAttenuation(dist, range);\n        lightDirection /= dist;\n        float c = dot(spotLightDirection, lightDirection);\n        float falloff;\n        falloff = clamp((c - a) /( b - a), 0.0, 1.0);\n        falloff = pow(falloff, falloffFactor);\n        float ndl = dot(v_Normal, lightDirection);\n        ndl = clamp(ndl, 0.0, 1.0);\n        float shadowContrib = 1.0;\n#if defined(SPOT_LIGHT_SHADOWMAP_COUNT)\n        if( shadowEnabled )\n        {\n            shadowContrib = shadowContribsSpot[i];\n        }\n#endif\n        diffuseColor += lightColor * ndl * attenuation * (1.0-falloff) * shadowContrib;\n    }\n#endif\n    gl_FragColor.rgb *= diffuseColor;\n    gl_FragColor.rgb += emission;\n    if(lineWidth > 0.)\n    {\n        gl_FragColor.rgb = mix(gl_FragColor.rgb, lineColor.rgb, (1.0 - edgeFactor(lineWidth)) * lineColor.a);\n    }\n#ifdef ALPHA_TEST\n    if (gl_FragColor.a < alphaCutoff) {\n        discard;\n    }\n#endif\n    gl_FragColor = encodeHDR(gl_FragColor);\n}\n@end"),Wr.import(ci),Wr.import("@export qtek.wireframe.vertex\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\nuniform mat4 world : WORLD;\nattribute vec3 position : POSITION;\nattribute vec3 barycentric;\n@import qtek.chunk.skinning_header\nvarying vec3 v_Barycentric;\nvoid main()\n{\n    vec3 skinnedPosition = position;\n#ifdef SKINNING\n    @import qtek.chunk.skin_matrix\n    skinnedPosition = (skinMatrixWS * vec4(position, 1.0)).xyz;\n#endif\n    gl_Position = worldViewProjection * vec4(skinnedPosition, 1.0 );\n    v_Barycentric = barycentric;\n}\n@end\n@export qtek.wireframe.fragment\nuniform vec3 color : [0.0, 0.0, 0.0];\nuniform float alpha : 1.0;\nuniform float lineWidth : 1.0;\nvarying vec3 v_Barycentric;\n@import qtek.util.edge_factor\nvoid main()\n{\n    gl_FragColor.rgb = color;\n    gl_FragColor.a = (1.0-edgeFactor(lineWidth)) * alpha;\n}\n@end"),Wr.import(Un),Wr.import(pn),dn.template("qtek.basic",Wr.source("qtek.basic.vertex"),Wr.source("qtek.basic.fragment")),dn.template("qtek.lambert",Wr.source("qtek.lambert.vertex"),Wr.source("qtek.lambert.fragment")),dn.template("qtek.wireframe",Wr.source("qtek.wireframe.vertex"),Wr.source("qtek.wireframe.fragment")),dn.template("qtek.skybox",Wr.source("qtek.skybox.vertex"),Wr.source("qtek.skybox.fragment")),dn.template("qtek.prez",Wr.source("qtek.prez.vertex"),Wr.source("qtek.prez.fragment")),dn.template("qtek.standard",Wr.source("qtek.standard.vertex"),Wr.source("qtek.standard.fragment")),Wr.import("@export qtek.compositor.coloradjust\nvarying vec2 v_Texcoord;\nuniform sampler2D texture;\nuniform float brightness : 0.0;\nuniform float contrast : 1.0;\nuniform float exposure : 0.0;\nuniform float gamma : 1.0;\nuniform float saturation : 1.0;\nconst vec3 w = vec3(0.2125, 0.7154, 0.0721);\nvoid main()\n{\n    vec4 tex = texture2D( texture, v_Texcoord);\n    vec3 color = clamp(tex.rgb + vec3(brightness), 0.0, 1.0);\n    color = clamp( (color-vec3(0.5))*contrast+vec3(0.5), 0.0, 1.0);\n    color = clamp( color * pow(2.0, exposure), 0.0, 1.0);\n    color = clamp( pow(color, vec3(gamma)), 0.0, 1.0);\n    float luminance = dot( color, w );\n    color = mix(vec3(luminance), color, saturation);\n    gl_FragColor = vec4(color, tex.a);\n}\n@end\n@export qtek.compositor.brightness\nvarying vec2 v_Texcoord;\nuniform sampler2D texture;\nuniform float brightness : 0.0;\nvoid main()\n{\n    vec4 tex = texture2D( texture, v_Texcoord);\n    vec3 color = tex.rgb + vec3(brightness);\n    gl_FragColor = vec4(color, tex.a);\n}\n@end\n@export qtek.compositor.contrast\nvarying vec2 v_Texcoord;\nuniform sampler2D texture;\nuniform float contrast : 1.0;\nvoid main()\n{\n    vec4 tex = texture2D( texture, v_Texcoord);\n    vec3 color = (tex.rgb-vec3(0.5))*contrast+vec3(0.5);\n    gl_FragColor = vec4(color, tex.a);\n}\n@end\n@export qtek.compositor.exposure\nvarying vec2 v_Texcoord;\nuniform sampler2D texture;\nuniform float exposure : 0.0;\nvoid main()\n{\n    vec4 tex = texture2D(texture, v_Texcoord);\n    vec3 color = tex.rgb * pow(2.0, exposure);\n    gl_FragColor = vec4(color, tex.a);\n}\n@end\n@export qtek.compositor.gamma\nvarying vec2 v_Texcoord;\nuniform sampler2D texture;\nuniform float gamma : 1.0;\nvoid main()\n{\n    vec4 tex = texture2D(texture, v_Texcoord);\n    vec3 color = pow(tex.rgb, vec3(gamma));\n    gl_FragColor = vec4(color, tex.a);\n}\n@end\n@export qtek.compositor.saturation\nvarying vec2 v_Texcoord;\nuniform sampler2D texture;\nuniform float saturation : 1.0;\nconst vec3 w = vec3(0.2125, 0.7154, 0.0721);\nvoid main()\n{\n    vec4 tex = texture2D(texture, v_Texcoord);\n    vec3 color = tex.rgb;\n    float luminance = dot(color, w);\n    color = mix(vec3(luminance), color, saturation);\n    gl_FragColor = vec4(color, tex.a);\n}\n@end"),Wr.import("@export qtek.compositor.kernel.gaussian_9\nfloat gaussianKernel[9];\ngaussianKernel[0] = 0.07;\ngaussianKernel[1] = 0.09;\ngaussianKernel[2] = 0.12;\ngaussianKernel[3] = 0.14;\ngaussianKernel[4] = 0.16;\ngaussianKernel[5] = 0.14;\ngaussianKernel[6] = 0.12;\ngaussianKernel[7] = 0.09;\ngaussianKernel[8] = 0.07;\n@end\n@export qtek.compositor.kernel.gaussian_13\nfloat gaussianKernel[13];\ngaussianKernel[0] = 0.02;\ngaussianKernel[1] = 0.03;\ngaussianKernel[2] = 0.06;\ngaussianKernel[3] = 0.08;\ngaussianKernel[4] = 0.11;\ngaussianKernel[5] = 0.13;\ngaussianKernel[6] = 0.14;\ngaussianKernel[7] = 0.13;\ngaussianKernel[8] = 0.11;\ngaussianKernel[9] = 0.08;\ngaussianKernel[10] = 0.06;\ngaussianKernel[11] = 0.03;\ngaussianKernel[12] = 0.02;\n@end\n@export qtek.compositor.gaussian_blur\n#define SHADER_NAME gaussian_blur\nuniform sampler2D texture;varying vec2 v_Texcoord;\nuniform float blurSize : 2.0;\nuniform vec2 textureSize : [512.0, 512.0];\nuniform float blurDir : 0.0;\n@import qtek.util.rgbm\n@import qtek.util.clamp_sample\nvoid main (void)\n{\n    @import qtek.compositor.kernel.gaussian_9\n    vec2 off = blurSize / textureSize;\n    off *= vec2(1.0 - blurDir, blurDir);\n    vec4 sum = vec4(0.0);\n    float weightAll = 0.0;\n    for (int i = 0; i < 9; i++) {\n        float w = gaussianKernel[i];\n        vec4 texel = decodeHDR(clampSample(texture, v_Texcoord + float(i - 4) * off));\n        sum += texel * w;\n        weightAll += w;\n    }\n    gl_FragColor = encodeHDR(sum / max(weightAll, 0.01));\n}\n@end\n"),Wr.import("@export qtek.compositor.hdr.log_lum\nvarying vec2 v_Texcoord;\nuniform sampler2D texture;\nconst vec3 w = vec3(0.2125, 0.7154, 0.0721);\n@import qtek.util.rgbm\nvoid main()\n{\n    vec4 tex = decodeHDR(texture2D(texture, v_Texcoord));\n    float luminance = dot(tex.rgb, w);\n    luminance = log(luminance + 0.001);\n    gl_FragColor = encodeHDR(vec4(vec3(luminance), 1.0));\n}\n@end\n@export qtek.compositor.hdr.lum_adaption\nvarying vec2 v_Texcoord;\nuniform sampler2D adaptedLum;\nuniform sampler2D currentLum;\nuniform float frameTime : 0.02;\n@import qtek.util.rgbm\nvoid main()\n{\n    float fAdaptedLum = decodeHDR(texture2D(adaptedLum, vec2(0.5, 0.5))).r;\n    float fCurrentLum = exp(encodeHDR(texture2D(currentLum, vec2(0.5, 0.5))).r);\n    fAdaptedLum += (fCurrentLum - fAdaptedLum) * (1.0 - pow(0.98, 30.0 * frameTime));\n    gl_FragColor = encodeHDR(vec4(vec3(fAdaptedLum), 1.0));\n}\n@end\n@export qtek.compositor.lum\nvarying vec2 v_Texcoord;\nuniform sampler2D texture;\nconst vec3 w = vec3(0.2125, 0.7154, 0.0721);\nvoid main()\n{\n    vec4 tex = texture2D( texture, v_Texcoord );\n    float luminance = dot(tex.rgb, w);\n    gl_FragColor = vec4(vec3(luminance), 1.0);\n}\n@end"),Wr.import("\n@export qtek.compositor.lut\nvarying vec2 v_Texcoord;\nuniform sampler2D texture;\nuniform sampler2D lookup;\nvoid main()\n{\n    vec4 tex = texture2D(texture, v_Texcoord);\n    float blueColor = tex.b * 63.0;\n    vec2 quad1;\n    quad1.y = floor(floor(blueColor) / 8.0);\n    quad1.x = floor(blueColor) - (quad1.y * 8.0);\n    vec2 quad2;\n    quad2.y = floor(ceil(blueColor) / 8.0);\n    quad2.x = ceil(blueColor) - (quad2.y * 8.0);\n    vec2 texPos1;\n    texPos1.x = (quad1.x * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * tex.r);\n    texPos1.y = (quad1.y * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * tex.g);\n    vec2 texPos2;\n    texPos2.x = (quad2.x * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * tex.r);\n    texPos2.y = (quad2.y * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * tex.g);\n    vec4 newColor1 = texture2D(lookup, texPos1);\n    vec4 newColor2 = texture2D(lookup, texPos2);\n    vec4 newColor = mix(newColor1, newColor2, fract(blueColor));\n    gl_FragColor = vec4(newColor.rgb, tex.w);\n}\n@end"),Wr.import("@export qtek.compositor.vignette\n#define OUTPUT_ALPHA\nvarying vec2 v_Texcoord;\nuniform sampler2D texture;\nuniform float darkness: 1;\nuniform float offset: 1;\n@import qtek.util.rgbm\nvoid main()\n{\n    vec4 texel = decodeHDR(texture2D(texture, v_Texcoord));\n    gl_FragColor.rgb = texel.rgb;\n    vec2 uv = (v_Texcoord - vec2(0.5)) * vec2(offset);\n    gl_FragColor = encodeHDR(vec4(mix(texel.rgb, vec3(1.0 - darkness), dot(uv, uv)), texel.a));\n}\n@end"),Wr.import("@export qtek.compositor.output\n#define OUTPUT_ALPHA\nvarying vec2 v_Texcoord;\nuniform sampler2D texture;\n@import qtek.util.rgbm\nvoid main()\n{\n    vec4 tex = decodeHDR(texture2D(texture, v_Texcoord));\n    gl_FragColor.rgb = tex.rgb;\n#ifdef OUTPUT_ALPHA\n    gl_FragColor.a = tex.a;\n#else\n    gl_FragColor.a = 1.0;\n#endif\n    gl_FragColor = encodeHDR(gl_FragColor);\n#ifdef PREMULTIPLY_ALPHA\n    gl_FragColor.rgb *= gl_FragColor.a;\n#endif\n}\n@end"),Wr.import("@export qtek.compositor.bright\nuniform sampler2D texture;\nuniform float threshold : 1;\nuniform float scale : 1.0;\nuniform vec2 textureSize: [512, 512];\nvarying vec2 v_Texcoord;\nconst vec3 lumWeight = vec3(0.2125, 0.7154, 0.0721);\n@import qtek.util.rgbm\nvec4 median(vec4 a, vec4 b, vec4 c)\n{\n    return a + b + c - min(min(a, b), c) - max(max(a, b), c);\n}\nvoid main()\n{\n    vec4 texel = decodeHDR(texture2D(texture, v_Texcoord));\n#ifdef ANTI_FLICKER\n    vec3 d = 1.0 / textureSize.xyx * vec3(1.0, 1.0, 0.0);\n    vec4 s1 = decodeHDR(texture2D(texture, v_Texcoord - d.xz));\n    vec4 s2 = decodeHDR(texture2D(texture, v_Texcoord + d.xz));\n    vec4 s3 = decodeHDR(texture2D(texture, v_Texcoord - d.zy));\n    vec4 s4 = decodeHDR(texture2D(texture, v_Texcoord + d.zy));\n    texel = median(median(texel, s1, s2), s3, s4);\n#endif\n    float lum = dot(texel.rgb , lumWeight);\n    vec4 color;\n    if (lum > threshold && texel.a > 0.0)\n    {\n        color = vec4(texel.rgb * scale, texel.a * scale);\n    }\n    else\n    {\n        color = vec4(0.0);\n    }\n    gl_FragColor = encodeHDR(color);\n}\n@end\n"),Wr.import("@export qtek.compositor.downsample\nuniform sampler2D texture;\nuniform vec2 textureSize : [512, 512];\nvarying vec2 v_Texcoord;\n@import qtek.util.rgbm\nfloat brightness(vec3 c)\n{\n    return max(max(c.r, c.g), c.b);\n}\n@import qtek.util.clamp_sample\nvoid main()\n{\n    vec4 d = vec4(-1.0, -1.0, 1.0, 1.0) / textureSize.xyxy;\n#ifdef ANTI_FLICKER\n    vec3 s1 = decodeHDR(clampSample(texture, v_Texcoord + d.xy)).rgb;\n    vec3 s2 = decodeHDR(clampSample(texture, v_Texcoord + d.zy)).rgb;\n    vec3 s3 = decodeHDR(clampSample(texture, v_Texcoord + d.xw)).rgb;\n    vec3 s4 = decodeHDR(clampSample(texture, v_Texcoord + d.zw)).rgb;\n    float s1w = 1.0 / (brightness(s1) + 1.0);\n    float s2w = 1.0 / (brightness(s2) + 1.0);\n    float s3w = 1.0 / (brightness(s3) + 1.0);\n    float s4w = 1.0 / (brightness(s4) + 1.0);\n    float oneDivideSum = 1.0 / (s1w + s2w + s3w + s4w);\n    vec4 color = vec4(\n        (s1 * s1w + s2 * s2w + s3 * s3w + s4 * s4w) * oneDivideSum,\n        1.0\n    );\n#else\n    vec4 color = decodeHDR(clampSample(texture, v_Texcoord + d.xy));\n    color += decodeHDR(clampSample(texture, v_Texcoord + d.zy));\n    color += decodeHDR(clampSample(texture, v_Texcoord + d.xw));\n    color += decodeHDR(clampSample(texture, v_Texcoord + d.zw));\n    color *= 0.25;\n#endif\n    gl_FragColor = encodeHDR(color);\n}\n@end"),Wr.import("\n@export qtek.compositor.upsample\n#define HIGH_QUALITY\nuniform sampler2D texture;\nuniform vec2 textureSize : [512, 512];\nuniform float sampleScale: 0.5;\nvarying vec2 v_Texcoord;\n@import qtek.util.rgbm\n@import qtek.util.clamp_sample\nvoid main()\n{\n#ifdef HIGH_QUALITY\n    vec4 d = vec4(1.0, 1.0, -1.0, 0.0) / textureSize.xyxy * sampleScale;\n    vec4 s;\n    s  = decodeHDR(clampSample(texture, v_Texcoord - d.xy));\n    s += decodeHDR(clampSample(texture, v_Texcoord - d.wy)) * 2.0;\n    s += decodeHDR(clampSample(texture, v_Texcoord - d.zy));\n    s += decodeHDR(clampSample(texture, v_Texcoord + d.zw)) * 2.0;\n    s += decodeHDR(clampSample(texture, v_Texcoord       )) * 4.0;\n    s += decodeHDR(clampSample(texture, v_Texcoord + d.xw)) * 2.0;\n    s += decodeHDR(clampSample(texture, v_Texcoord + d.zy));\n    s += decodeHDR(clampSample(texture, v_Texcoord + d.wy)) * 2.0;\n    s += decodeHDR(clampSample(texture, v_Texcoord + d.xy));\n    gl_FragColor = encodeHDR(s / 16.0);\n#else\n    vec4 d = vec4(-1.0, -1.0, +1.0, +1.0) / textureSize.xyxy;\n    vec4 s;\n    s  = decodeHDR(clampSample(texture, v_Texcoord + d.xy));\n    s += decodeHDR(clampSample(texture, v_Texcoord + d.zy));\n    s += decodeHDR(clampSample(texture, v_Texcoord + d.xw));\n    s += decodeHDR(clampSample(texture, v_Texcoord + d.zw));\n    gl_FragColor = encodeHDR(s / 4.0);\n#endif\n}\n@end"),Wr.import("@export qtek.compositor.hdr.composite\nuniform sampler2D texture;\n#ifdef BLOOM_ENABLED\nuniform sampler2D bloom;\n#endif\n#ifdef LENSFLARE_ENABLED\nuniform sampler2D lensflare;\nuniform sampler2D lensdirt;\n#endif\n#ifdef LUM_ENABLED\nuniform sampler2D lum;\n#endif\n#ifdef LUT_ENABLED\nuniform sampler2D lut;\n#endif\n#ifdef COLOR_CORRECTION\nuniform float brightness : 0.0;\nuniform float contrast : 1.0;\nuniform float saturation : 1.0;\n#endif\n#ifdef VIGNETTE\nuniform float vignetteDarkness: 1.0;\nuniform float vignetteOffset: 1.0;\n#endif\nuniform float exposure : 1.0;\nuniform float bloomIntensity : 0.25;\nuniform float lensflareIntensity : 1;\nvarying vec2 v_Texcoord;\n@import qtek.util.srgb\nvec3 ACESToneMapping(vec3 color)\n{\n    const float A = 2.51;\n    const float B = 0.03;\n    const float C = 2.43;\n    const float D = 0.59;\n    const float E = 0.14;\n    return (color * (A * color + B)) / (color * (C * color + D) + E);\n}\nfloat eyeAdaption(float fLum)\n{\n    return mix(0.2, fLum, 0.5);\n}\n#ifdef LUT_ENABLED\nvec3 lutTransform(vec3 color) {\n    float blueColor = color.b * 63.0;\n    vec2 quad1;\n    quad1.y = floor(floor(blueColor) / 8.0);\n    quad1.x = floor(blueColor) - (quad1.y * 8.0);\n    vec2 quad2;\n    quad2.y = floor(ceil(blueColor) / 8.0);\n    quad2.x = ceil(blueColor) - (quad2.y * 8.0);\n    vec2 texPos1;\n    texPos1.x = (quad1.x * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * color.r);\n    texPos1.y = (quad1.y * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * color.g);\n    vec2 texPos2;\n    texPos2.x = (quad2.x * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * color.r);\n    texPos2.y = (quad2.y * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * color.g);\n    vec4 newColor1 = texture2D(lut, texPos1);\n    vec4 newColor2 = texture2D(lut, texPos2);\n    vec4 newColor = mix(newColor1, newColor2, fract(blueColor));\n    return newColor.rgb;\n}\n#endif\n@import qtek.util.rgbm\nvoid main()\n{\n    vec4 texel = vec4(0.0);\n    vec4 originalTexel = vec4(0.0);\n#ifdef TEXTURE_ENABLED\n    texel = decodeHDR(texture2D(texture, v_Texcoord));\n    originalTexel = texel;\n#endif\n#ifdef BLOOM_ENABLED\n    vec4 bloomTexel = decodeHDR(texture2D(bloom, v_Texcoord));\n    texel.rgb += bloomTexel.rgb * bloomIntensity;\n    texel.a += bloomTexel.a * bloomIntensity;\n#endif\n#ifdef LENSFLARE_ENABLED\n    texel += decodeHDR(texture2D(lensflare, v_Texcoord)) * texture2D(lensdirt, v_Texcoord) * lensflareIntensity;\n#endif\n    texel.a = min(texel.a, 1.0);\n#ifdef LUM_ENABLED\n    float fLum = texture2D(lum, vec2(0.5, 0.5)).r;\n    float adaptedLumDest = 3.0 / (max(0.1, 1.0 + 10.0*eyeAdaption(fLum)));\n    float exposureBias = adaptedLumDest * exposure;\n#else\n    float exposureBias = exposure;\n#endif\n    texel.rgb *= exposureBias;\n    texel.rgb = ACESToneMapping(texel.rgb);\n    texel = linearTosRGB(texel);\n#ifdef LUT_ENABLED\n    texel.rgb = lutTransform(clamp(texel.rgb,vec3(0.0),vec3(1.0)));\n#endif\n#ifdef COLOR_CORRECTION\n    texel.rgb = clamp(texel.rgb + vec3(brightness), 0.0, 1.0);\n    texel.rgb = clamp((texel.rgb - vec3(0.5))*contrast+vec3(0.5), 0.0, 1.0);\n    float lum = dot(texel.rgb, vec3(0.2125, 0.7154, 0.0721));\n    texel.rgb = mix(vec3(lum), texel.rgb, saturation);\n#endif\n#ifdef VIGNETTE\n    vec2 uv = (v_Texcoord - vec2(0.5)) * vec2(vignetteOffset);\n    texel.rgb = mix(texel.rgb, vec3(1.0 - vignetteDarkness), dot(uv, uv));\n#endif\n    gl_FragColor = encodeHDR(texel);\n#ifdef DEBUG\n    #if DEBUG == 1\n    gl_FragColor = encodeHDR(decodeHDR(texture2D(texture, v_Texcoord)));\n    #elif DEBUG == 2\n    gl_FragColor = encodeHDR(decodeHDR(texture2D(bloom, v_Texcoord)) * bloomIntensity);\n    #elif DEBUG == 3\n    gl_FragColor = encodeHDR(decodeHDR(texture2D(lensflare, v_Texcoord) * lensflareIntensity));\n    #endif\n#endif\n    if (originalTexel.a <= 0.01) {\n        gl_FragColor.a = dot(gl_FragColor.rgb, vec3(0.2125, 0.7154, 0.0721));\n    }\n#ifdef PREMULTIPLY_ALPHA\n    gl_FragColor.rgb *= gl_FragColor.a;\n#endif\n}\n@end"),
Wr.import("@export qtek.compositor.dof.coc\nuniform sampler2D depth;\nuniform float zNear: 0.1;\nuniform float zFar: 2000;\nuniform float focalDist: 3;\nuniform float focalRange: 1;\nuniform float focalLength: 30;\nuniform float fstop: 2.8;\nvarying vec2 v_Texcoord;\n@import qtek.util.encode_float\nvoid main()\n{\n    float z = texture2D(depth, v_Texcoord).r * 2.0 - 1.0;\n    float dist = 2.0 * zNear * zFar / (zFar + zNear - z * (zFar - zNear));\n    float aperture = focalLength / fstop;\n    float coc;\n    float uppper = focalDist + focalRange;\n    float lower = focalDist - focalRange;\n    if (dist <= uppper && dist >= lower) {\n        coc = 0.5;\n    }\n    else {\n        float focalAdjusted = dist > uppper ? uppper : lower;\n        coc = abs(aperture * (focalLength * (dist - focalAdjusted)) / (dist * (focalAdjusted - focalLength)));\n        coc = clamp(coc, 0.0, 0.4) / 0.4000001;\n        if (dist < lower) {\n            coc = -coc;\n        }\n        coc = coc * 0.5 + 0.5;\n    }\n    gl_FragColor = encodeFloat(coc);\n}\n@end\n@export qtek.compositor.dof.premultiply\nuniform sampler2D texture;\nuniform sampler2D coc;\nvarying vec2 v_Texcoord;\n@import qtek.util.rgbm\n@import qtek.util.decode_float\nvoid main() {\n    float fCoc = max(abs(decodeFloat(texture2D(coc, v_Texcoord)) * 2.0 - 1.0), 0.1);\n    gl_FragColor = encodeHDR(\n        vec4(decodeHDR(texture2D(texture, v_Texcoord)).rgb * fCoc, 1.0)\n    );\n}\n@end\n@export qtek.compositor.dof.min_coc\nuniform sampler2D coc;\nvarying vec2 v_Texcoord;\nuniform vec2 textureSize : [512.0, 512.0];\n@import qtek.util.float\nvoid main()\n{\n    vec4 d = vec4(-1.0, -1.0, 1.0, 1.0) / textureSize.xyxy;\n    float fCoc = decodeFloat(texture2D(coc, v_Texcoord + d.xy));\n    fCoc = min(fCoc, decodeFloat(texture2D(coc, v_Texcoord + d.zy)));\n    fCoc = min(fCoc, decodeFloat(texture2D(coc, v_Texcoord + d.xw)));\n    fCoc = min(fCoc, decodeFloat(texture2D(coc, v_Texcoord + d.zw)));\n    gl_FragColor = encodeFloat(fCoc);\n}\n@end\n@export qtek.compositor.dof.max_coc\nuniform sampler2D coc;\nvarying vec2 v_Texcoord;\nuniform vec2 textureSize : [512.0, 512.0];\n@import qtek.util.float\nvoid main()\n{\n    vec4 d = vec4(-1.0, -1.0, 1.0, 1.0) / textureSize.xyxy;\n    float fCoc = decodeFloat(texture2D(coc, v_Texcoord + d.xy));\n    fCoc = max(fCoc, decodeFloat(texture2D(coc, v_Texcoord + d.zy)));\n    fCoc = max(fCoc, decodeFloat(texture2D(coc, v_Texcoord + d.xw)));\n    fCoc = max(fCoc, decodeFloat(texture2D(coc, v_Texcoord + d.zw)));\n    gl_FragColor = encodeFloat(fCoc);\n}\n@end\n@export qtek.compositor.dof.coc_upsample\n#define HIGH_QUALITY\nuniform sampler2D coc;\nuniform vec2 textureSize : [512, 512];\nuniform float sampleScale: 0.5;\nvarying vec2 v_Texcoord;\n@import qtek.util.float\nvoid main()\n{\n#ifdef HIGH_QUALITY\n    vec4 d = vec4(1.0, 1.0, -1.0, 0.0) / textureSize.xyxy * sampleScale;\n    float s;\n    s  = decodeFloat(texture2D(coc, v_Texcoord - d.xy));\n    s += decodeFloat(texture2D(coc, v_Texcoord - d.wy)) * 2.0;\n    s += decodeFloat(texture2D(coc, v_Texcoord - d.zy));\n    s += decodeFloat(texture2D(coc, v_Texcoord + d.zw)) * 2.0;\n    s += decodeFloat(texture2D(coc, v_Texcoord       )) * 4.0;\n    s += decodeFloat(texture2D(coc, v_Texcoord + d.xw)) * 2.0;\n    s += decodeFloat(texture2D(coc, v_Texcoord + d.zy));\n    s += decodeFloat(texture2D(coc, v_Texcoord + d.wy)) * 2.0;\n    s += decodeFloat(texture2D(coc, v_Texcoord + d.xy));\n    gl_FragColor = encodeFloat(s / 16.0);\n#else\n    vec4 d = vec4(-1.0, -1.0, +1.0, +1.0) / textureSize.xyxy;\n    float s;\n    s  = decodeFloat(texture2D(coc, v_Texcoord + d.xy));\n    s += decodeFloat(texture2D(coc, v_Texcoord + d.zy));\n    s += decodeFloat(texture2D(coc, v_Texcoord + d.xw));\n    s += decodeFloat(texture2D(coc, v_Texcoord + d.zw));\n    gl_FragColor = encodeFloat(s / 4.0);\n#endif\n}\n@end\n@export qtek.compositor.dof.upsample\n#define HIGH_QUALITY\nuniform sampler2D coc;\nuniform sampler2D texture;\nuniform vec2 textureSize : [512, 512];\nuniform float sampleScale: 0.5;\nvarying vec2 v_Texcoord;\n@import qtek.util.rgbm\n@import qtek.util.decode_float\nfloat tap(vec2 uv, inout vec4 color, float baseWeight) {\n    float weight = abs(decodeFloat(texture2D(coc, uv)) * 2.0 - 1.0) * baseWeight;\n    color += decodeHDR(texture2D(texture, uv)) * weight;\n    return weight;\n}\nvoid main()\n{\n#ifdef HIGH_QUALITY\n    vec4 d = vec4(1.0, 1.0, -1.0, 0.0) / textureSize.xyxy * sampleScale;\n    vec4 color = vec4(0.0);\n    float baseWeight = 1.0 / 16.0;\n    float w  = tap(v_Texcoord - d.xy, color, baseWeight);\n    w += tap(v_Texcoord - d.wy, color, baseWeight * 2.0);\n    w += tap(v_Texcoord - d.zy, color, baseWeight);\n    w += tap(v_Texcoord + d.zw, color, baseWeight * 2.0);\n    w += tap(v_Texcoord       , color, baseWeight * 4.0);\n    w += tap(v_Texcoord + d.xw, color, baseWeight * 2.0);\n    w += tap(v_Texcoord + d.zy, color, baseWeight);\n    w += tap(v_Texcoord + d.wy, color, baseWeight * 2.0);\n    w += tap(v_Texcoord + d.xy, color, baseWeight);\n    gl_FragColor = encodeHDR(color / w);\n#else\n    vec4 d = vec4(-1.0, -1.0, +1.0, +1.0) / textureSize.xyxy;\n    vec4 color = vec4(0.0);\n    float baseWeight = 1.0 / 4.0;\n    float w  = tap(v_Texcoord + d.xy, color, baseWeight);\n    w += tap(v_Texcoord + d.zy, color, baseWeight);\n    w += tap(v_Texcoord + d.xw, color, baseWeight);\n    w += tap(v_Texcoord + d.zw, color, baseWeight);\n    gl_FragColor = encodeHDR(color / w);\n#endif\n}\n@end\n@export qtek.compositor.dof.downsample\nuniform sampler2D texture;\nuniform sampler2D coc;\nuniform vec2 textureSize : [512, 512];\nvarying vec2 v_Texcoord;\n@import qtek.util.rgbm\n@import qtek.util.decode_float\nfloat tap(vec2 uv, inout vec4 color) {\n    float weight = abs(decodeFloat(texture2D(coc, uv)) * 2.0 - 1.0) * 0.25;\n    color += decodeHDR(texture2D(texture, uv)) * weight;\n    return weight;\n}\nvoid main()\n{\n    vec4 d = vec4(-1.0, -1.0, 1.0, 1.0) / textureSize.xyxy;\n    vec4 color = vec4(0.0);\n    float weight = tap(v_Texcoord + d.xy, color);\n    weight += tap(v_Texcoord + d.zy, color);\n    weight += tap(v_Texcoord + d.xw, color);\n    weight += tap(v_Texcoord + d.zw, color);\n    color /= weight;\n    gl_FragColor = encodeHDR(color);\n}\n@end\n@export qtek.compositor.dof.hexagonal_blur_frag\n@import qtek.util.float\nvec4 doBlur(sampler2D targetTexture, vec2 offset) {\n#ifdef BLUR_COC\n    float cocSum = 0.0;\n#else\n    vec4 color = vec4(0.0);\n#endif\n    float weightSum = 0.0;\n    float kernelWeight = 1.0 / float(KERNEL_SIZE);\n    for (int i = 0; i < KERNEL_SIZE; i++) {\n        vec2 coord = v_Texcoord + offset * float(i);\n        float w = kernelWeight;\n#ifdef BLUR_COC\n        float fCoc = decodeFloat(texture2D(targetTexture, coord)) * 2.0 - 1.0;\n        cocSum += clamp(fCoc, -1.0, 0.0) * w;\n#else\n        float fCoc = decodeFloat(texture2D(coc, coord)) * 2.0 - 1.0;\n        vec4 texel = texture2D(targetTexture, coord);\n    #if !defined(BLUR_NEARFIELD)\n        w *= abs(fCoc);\n    #endif\n        color += decodeHDR(texel) * w;\n#endif\n        weightSum += w;\n    }\n#ifdef BLUR_COC\n    return encodeFloat(clamp(cocSum / weightSum, -1.0, 0.0) * 0.5 + 0.5);\n#else\n    return color / weightSum;\n#endif\n}\n@end\n@export qtek.compositor.dof.hexagonal_blur_1\n#define KERNEL_SIZE 5\nuniform sampler2D texture;\nuniform sampler2D coc;\nvarying vec2 v_Texcoord;\nuniform float blurSize : 1.0;\nuniform vec2 textureSize : [512.0, 512.0];\n@import qtek.util.rgbm\n@import qtek.compositor.dof.hexagonal_blur_frag\nvoid main()\n{\n    vec2 offset = blurSize / textureSize;\n#if !defined(BLUR_NEARFIELD) && !defined(BLUR_COC)\n    offset *= abs(decodeFloat(texture2D(coc, v_Texcoord)) * 2.0 - 1.0);\n#endif\n    gl_FragColor = doBlur(texture, vec2(0.0, offset.y));\n#if !defined(BLUR_COC)\n    gl_FragColor = encodeHDR(gl_FragColor);\n#endif\n}\n@end\n@export qtek.compositor.dof.hexagonal_blur_2\n#define KERNEL_SIZE 5\nuniform sampler2D texture;\nuniform sampler2D coc;\nvarying vec2 v_Texcoord;\nuniform float blurSize : 1.0;\nuniform vec2 textureSize : [512.0, 512.0];\n@import qtek.util.rgbm\n@import qtek.compositor.dof.hexagonal_blur_frag\nvoid main()\n{\n    vec2 offset = blurSize / textureSize;\n#if !defined(BLUR_NEARFIELD) && !defined(BLUR_COC)\n    offset *= abs(decodeFloat(texture2D(coc, v_Texcoord)) * 2.0 - 1.0);\n#endif\n    offset.y /= 2.0;\n    gl_FragColor = doBlur(texture, -offset);\n#if !defined(BLUR_COC)\n    gl_FragColor = encodeHDR(gl_FragColor);\n#endif\n}\n@end\n@export qtek.compositor.dof.hexagonal_blur_3\n#define KERNEL_SIZE 5\nuniform sampler2D texture1;\nuniform sampler2D texture2;\nuniform sampler2D coc;\nvarying vec2 v_Texcoord;\nuniform float blurSize : 1.0;\nuniform vec2 textureSize : [512.0, 512.0];\n@import qtek.util.rgbm\n@import qtek.compositor.dof.hexagonal_blur_frag\nvoid main()\n{\n    vec2 offset = blurSize / textureSize;\n#if !defined(BLUR_NEARFIELD) && !defined(BLUR_COC)\n    offset *= abs(decodeFloat(texture2D(coc, v_Texcoord)) * 2.0 - 1.0);\n#endif\n    offset.y /= 2.0;\n    vec2 vDownRight = vec2(offset.x, -offset.y);\n    vec4 texel1 = doBlur(texture1, -offset);\n    vec4 texel2 = doBlur(texture1, vDownRight);\n    vec4 texel3 = doBlur(texture2, vDownRight);\n#ifdef BLUR_COC\n    float coc1 = decodeFloat(texel1) * 2.0 - 1.0;\n    float coc2 = decodeFloat(texel2) * 2.0 - 1.0;\n    float coc3 = decodeFloat(texel3) * 2.0 - 1.0;\n    gl_FragColor = encodeFloat(\n        ((coc1 + coc2 + coc3) / 3.0) * 0.5 + 0.5\n    );\n#else\n    vec4 color = (texel1 + texel2 + texel3) / 3.0;\n    gl_FragColor = encodeHDR(color);\n#endif\n}\n@end\n@export qtek.compositor.dof.composite\n#define DEBUG 0\nuniform sampler2D original;\nuniform sampler2D blurred;\nuniform sampler2D nearfield;\nuniform sampler2D coc;\nuniform sampler2D nearcoc;\nvarying vec2 v_Texcoord;\n@import qtek.util.rgbm\n@import qtek.util.float\nvoid main()\n{\n    vec4 blurredColor = decodeHDR(texture2D(blurred, v_Texcoord));\n    vec4 originalColor = decodeHDR(texture2D(original, v_Texcoord));\n    float fCoc = decodeFloat(texture2D(coc, v_Texcoord));\n    fCoc = abs(fCoc * 2.0 - 1.0);\n    float weight = smoothstep(0.0, 1.0, fCoc);\n#ifdef NEARFIELD_ENABLED\n    vec4 nearfieldColor = decodeHDR(texture2D(nearfield, v_Texcoord));\n    float fNearCoc = decodeFloat(texture2D(nearcoc, v_Texcoord));\n    fNearCoc = abs(fNearCoc * 2.0 - 1.0);\n    gl_FragColor = encodeHDR(\n        mix(\n            nearfieldColor, mix(originalColor, blurredColor, weight),\n            pow(1.0 - fNearCoc, 4.0)\n        )\n    );\n#else\n    gl_FragColor = encodeHDR(mix(originalColor, blurredColor, weight));\n#endif\n#if DEBUG == 1\n    gl_FragColor = vec4(vec3(fCoc), 1.0);\n#elif DEBUG == 2\n    gl_FragColor = vec4(vec3(fNearCoc), 1.0);\n#elif DEBUG == 3\n    gl_FragColor = encodeHDR(blurredColor);\n#elif DEBUG == 4\n    gl_FragColor = encodeHDR(nearfieldColor);\n#endif\n}\n@end"),Wr.import("@export qtek.compositor.lensflare\n#define SAMPLE_NUMBER 8\nuniform sampler2D texture;\nuniform sampler2D lenscolor;\nuniform vec2 textureSize : [512, 512];\nuniform float dispersal : 0.3;\nuniform float haloWidth : 0.4;\nuniform float distortion : 1.0;\nvarying vec2 v_Texcoord;\n@import qtek.util.rgbm\nvec4 textureDistorted(\n    in vec2 texcoord,\n    in vec2 direction,\n    in vec3 distortion\n) {\n    return vec4(\n        decodeHDR(texture2D(texture, texcoord + direction * distortion.r)).r,\n        decodeHDR(texture2D(texture, texcoord + direction * distortion.g)).g,\n        decodeHDR(texture2D(texture, texcoord + direction * distortion.b)).b,\n        1.0\n    );\n}\nvoid main()\n{\n    vec2 texcoord = -v_Texcoord + vec2(1.0);    vec2 textureOffset = 1.0 / textureSize;\n    vec2 ghostVec = (vec2(0.5) - texcoord) * dispersal;\n    vec2 haloVec = normalize(ghostVec) * haloWidth;\n    vec3 distortion = vec3(-textureOffset.x * distortion, 0.0, textureOffset.x * distortion);\n    vec4 result = vec4(0.0);\n    for (int i = 0; i < SAMPLE_NUMBER; i++)\n    {\n        vec2 offset = fract(texcoord + ghostVec * float(i));\n        float weight = length(vec2(0.5) - offset) / length(vec2(0.5));\n        weight = pow(1.0 - weight, 10.0);\n        result += textureDistorted(offset, normalize(ghostVec), distortion) * weight;\n    }\n    result *= texture2D(lenscolor, vec2(length(vec2(0.5) - texcoord)) / length(vec2(0.5)));\n    float weight = length(vec2(0.5) - fract(texcoord + haloVec)) / length(vec2(0.5));\n    weight = pow(1.0 - weight, 10.0);\n    vec2 offset = fract(texcoord + haloVec);\n    result += textureDistorted(offset, normalize(ghostVec), distortion) * weight;\n    gl_FragColor = result;\n}\n@end"),Wr.import("@export qtek.compositor.blend\n#ifdef TEXTURE1_ENABLED\nuniform sampler2D texture1;\nuniform float weight1 : 1.0;\n#endif\n#ifdef TEXTURE2_ENABLED\nuniform sampler2D texture2;\nuniform float weight2 : 1.0;\n#endif\n#ifdef TEXTURE3_ENABLED\nuniform sampler2D texture3;\nuniform float weight3 : 1.0;\n#endif\n#ifdef TEXTURE4_ENABLED\nuniform sampler2D texture4;\nuniform float weight4 : 1.0;\n#endif\n#ifdef TEXTURE5_ENABLED\nuniform sampler2D texture5;\nuniform float weight5 : 1.0;\n#endif\n#ifdef TEXTURE6_ENABLED\nuniform sampler2D texture6;\nuniform float weight6 : 1.0;\n#endif\nvarying vec2 v_Texcoord;\n@import qtek.util.rgbm\nvoid main()\n{\n    vec4 tex = vec4(0.0);\n#ifdef TEXTURE1_ENABLED\n    tex += decodeHDR(texture2D(texture1, v_Texcoord)) * weight1;\n#endif\n#ifdef TEXTURE2_ENABLED\n    tex += decodeHDR(texture2D(texture2, v_Texcoord)) * weight2;\n#endif\n#ifdef TEXTURE3_ENABLED\n    tex += decodeHDR(texture2D(texture3, v_Texcoord)) * weight3;\n#endif\n#ifdef TEXTURE4_ENABLED\n    tex += decodeHDR(texture2D(texture4, v_Texcoord)) * weight4;\n#endif\n#ifdef TEXTURE5_ENABLED\n    tex += decodeHDR(texture2D(texture5, v_Texcoord)) * weight5;\n#endif\n#ifdef TEXTURE6_ENABLED\n    tex += decodeHDR(texture2D(texture6, v_Texcoord)) * weight6;\n#endif\n    gl_FragColor = encodeHDR(tex);\n}\n@end"),Wr.import("@export qtek.compositor.fxaa\nuniform sampler2D texture;\nuniform vec4 viewport : VIEWPORT;\nvarying vec2 v_Texcoord;\n#define FXAA_REDUCE_MIN   (1.0/128.0)\n#define FXAA_REDUCE_MUL   (1.0/8.0)\n#define FXAA_SPAN_MAX     8.0\n@import qtek.util.rgbm\nvoid main()\n{\n    vec2 resolution = 1.0 / viewport.zw;\n    vec3 rgbNW =  decodeHDR( texture2D( texture, ( gl_FragCoord.xy + vec2( -1.0, -1.0 ) ) * resolution ) ).xyz;\n    vec3 rgbNE = decodeHDR( texture2D( texture, ( gl_FragCoord.xy + vec2( 1.0, -1.0 ) ) * resolution ) ).xyz;\n    vec3 rgbSW = decodeHDR( texture2D( texture, ( gl_FragCoord.xy + vec2( -1.0, 1.0 ) ) * resolution ) ).xyz;\n    vec3 rgbSE = decodeHDR( texture2D( texture, ( gl_FragCoord.xy + vec2( 1.0, 1.0 ) ) * resolution ) ).xyz;\n    vec4 rgbaM  = decodeHDR( texture2D( texture,  gl_FragCoord.xy  * resolution ) );\n    vec3 rgbM  = rgbaM.xyz;\n    float opacity  = rgbaM.w;\n    vec3 luma = vec3( 0.299, 0.587, 0.114 );\n    float lumaNW = dot( rgbNW, luma );\n    float lumaNE = dot( rgbNE, luma );\n    float lumaSW = dot( rgbSW, luma );\n    float lumaSE = dot( rgbSE, luma );\n    float lumaM  = dot( rgbM,  luma );\n    float lumaMin = min( lumaM, min( min( lumaNW, lumaNE ), min( lumaSW, lumaSE ) ) );\n    float lumaMax = max( lumaM, max( max( lumaNW, lumaNE) , max( lumaSW, lumaSE ) ) );\n    vec2 dir;\n    dir.x = -((lumaNW + lumaNE) - (lumaSW + lumaSE));\n    dir.y =  ((lumaNW + lumaSW) - (lumaNE + lumaSE));\n    float dirReduce = max( ( lumaNW + lumaNE + lumaSW + lumaSE ) * ( 0.25 * FXAA_REDUCE_MUL ), FXAA_REDUCE_MIN );\n    float rcpDirMin = 1.0 / ( min( abs( dir.x ), abs( dir.y ) ) + dirReduce );\n    dir = min( vec2( FXAA_SPAN_MAX,  FXAA_SPAN_MAX),\n          max( vec2(-FXAA_SPAN_MAX, -FXAA_SPAN_MAX),\n                dir * rcpDirMin)) * resolution;\n    vec3 rgbA = decodeHDR( texture2D( texture, gl_FragCoord.xy  * resolution + dir * ( 1.0 / 3.0 - 0.5 ) ) ).xyz;\n    rgbA += decodeHDR( texture2D( texture, gl_FragCoord.xy  * resolution + dir * ( 2.0 / 3.0 - 0.5 ) ) ).xyz;\n    rgbA *= 0.5;\n    vec3 rgbB = decodeHDR( texture2D( texture, gl_FragCoord.xy  * resolution + dir * -0.5 ) ).xyz;\n    rgbB += decodeHDR( texture2D( texture, gl_FragCoord.xy  * resolution + dir * 0.5 ) ).xyz;\n    rgbB *= 0.25;\n    rgbB += rgbA * 0.5;\n    float lumaB = dot( rgbB, luma );\n    if ( ( lumaB < lumaMin ) || ( lumaB > lumaMax ) )\n    {\n        gl_FragColor = vec4( rgbA, opacity );\n    }\n    else {\n        gl_FragColor = vec4( rgbB, opacity );\n    }\n}\n@end"),Wr.import("@export qtek.compositor.fxaa3\nuniform sampler2D texture;\nuniform vec4 viewport : VIEWPORT;\nuniform float subpixel: 0.75;\nuniform float edgeThreshold: 0.125;\nuniform float edgeThresholdMin: 0.0625;\nvarying vec2 v_Texcoord;\n@import qtek.util.rgbm\nfloat FxaaLuma(vec4 rgba) { return rgba.y; }\nvec4 FxaaPixelShader(\n    vec2 pos\n    ,sampler2D tex\n    ,vec2 fxaaQualityRcpFrame\n    ,float fxaaQualitySubpix\n    ,float fxaaQualityEdgeThreshold\n    ,float fxaaQualityEdgeThresholdMin\n) {\n    vec2 posM;\n    posM.x = pos.x;\n    posM.y = pos.y;\n    vec4 rgbyM = decodeHDR(texture2D(texture, posM, 0.0));\n    float lumaS = FxaaLuma(decodeHDR(texture2D(texture, posM + (vec2( 0.0, 1.0) * fxaaQualityRcpFrame.xy), 0.0)));\n    float lumaE = FxaaLuma(decodeHDR(texture2D(texture, posM + (vec2( 1.0, 0.0) * fxaaQualityRcpFrame.xy), 0.0)));\n    float lumaN = FxaaLuma(decodeHDR(texture2D(texture, posM + (vec2( 0.0,-1.0) * fxaaQualityRcpFrame.xy), 0.0)));\n    float lumaW = FxaaLuma(decodeHDR(texture2D(texture, posM + (vec2(-1.0, 0.0) * fxaaQualityRcpFrame.xy), 0.0)));\n    float maxSM = max(lumaS, rgbyM.y);\n    float minSM = min(lumaS, rgbyM.y);\n    float maxESM = max(lumaE, maxSM);\n    float minESM = min(lumaE, minSM);\n    float maxWN = max(lumaN, lumaW);\n    float minWN = min(lumaN, lumaW);\n    float rangeMax = max(maxWN, maxESM);\n    float rangeMin = min(minWN, minESM);\n    float rangeMaxScaled = rangeMax * fxaaQualityEdgeThreshold;\n    float range = rangeMax - rangeMin;\n    float rangeMaxClamped = max(fxaaQualityEdgeThresholdMin, rangeMaxScaled);\n    bool earlyExit = range < rangeMaxClamped;\n    if(earlyExit) return rgbyM;\n    float lumaNW = FxaaLuma(decodeHDR(texture2D(texture, posM + (vec2(-1.0,-1.0) * fxaaQualityRcpFrame.xy), 0.0)));\n    float lumaSE = FxaaLuma(decodeHDR(texture2D(texture, posM + (vec2( 1.0, 1.0) * fxaaQualityRcpFrame.xy), 0.0)));\n    float lumaNE = FxaaLuma(decodeHDR(texture2D(texture, posM + (vec2( 1.0,-1.0) * fxaaQualityRcpFrame.xy), 0.0)));\n    float lumaSW = FxaaLuma(decodeHDR(texture2D(texture, posM + (vec2(-1.0, 1.0) * fxaaQualityRcpFrame.xy), 0.0)));\n    float lumaNS = lumaN + lumaS;\n    float lumaWE = lumaW + lumaE;\n    float subpixRcpRange = 1.0/range;\n    float subpixNSWE = lumaNS + lumaWE;\n    float edgeHorz1 = (-2.0 * rgbyM.y) + lumaNS;\n    float edgeVert1 = (-2.0 * rgbyM.y) + lumaWE;\n    float lumaNESE = lumaNE + lumaSE;\n    float lumaNWNE = lumaNW + lumaNE;\n    float edgeHorz2 = (-2.0 * lumaE) + lumaNESE;\n    float edgeVert2 = (-2.0 * lumaN) + lumaNWNE;\n    float lumaNWSW = lumaNW + lumaSW;\n    float lumaSWSE = lumaSW + lumaSE;\n    float edgeHorz4 = (abs(edgeHorz1) * 2.0) + abs(edgeHorz2);\n    float edgeVert4 = (abs(edgeVert1) * 2.0) + abs(edgeVert2);\n    float edgeHorz3 = (-2.0 * lumaW) + lumaNWSW;\n    float edgeVert3 = (-2.0 * lumaS) + lumaSWSE;\n    float edgeHorz = abs(edgeHorz3) + edgeHorz4;\n    float edgeVert = abs(edgeVert3) + edgeVert4;\n    float subpixNWSWNESE = lumaNWSW + lumaNESE;\n    float lengthSign = fxaaQualityRcpFrame.x;\n    bool horzSpan = edgeHorz >= edgeVert;\n    float subpixA = subpixNSWE * 2.0 + subpixNWSWNESE;\n    if(!horzSpan) lumaN = lumaW;\n    if(!horzSpan) lumaS = lumaE;\n    if(horzSpan) lengthSign = fxaaQualityRcpFrame.y;\n    float subpixB = (subpixA * (1.0/12.0)) - rgbyM.y;\n    float gradientN = lumaN - rgbyM.y;\n    float gradientS = lumaS - rgbyM.y;\n    float lumaNN = lumaN + rgbyM.y;\n    float lumaSS = lumaS + rgbyM.y;\n    bool pairN = abs(gradientN) >= abs(gradientS);\n    float gradient = max(abs(gradientN), abs(gradientS));\n    if(pairN) lengthSign = -lengthSign;\n    float subpixC = clamp(abs(subpixB) * subpixRcpRange, 0.0, 1.0);\n    vec2 posB;\n    posB.x = posM.x;\n    posB.y = posM.y;\n    vec2 offNP;\n    offNP.x = (!horzSpan) ? 0.0 : fxaaQualityRcpFrame.x;\n    offNP.y = ( horzSpan) ? 0.0 : fxaaQualityRcpFrame.y;\n    if(!horzSpan) posB.x += lengthSign * 0.5;\n    if( horzSpan) posB.y += lengthSign * 0.5;\n    vec2 posN;\n    posN.x = posB.x - offNP.x * 1.0;\n    posN.y = posB.y - offNP.y * 1.0;\n    vec2 posP;\n    posP.x = posB.x + offNP.x * 1.0;\n    posP.y = posB.y + offNP.y * 1.0;\n    float subpixD = ((-2.0)*subpixC) + 3.0;\n    float lumaEndN = FxaaLuma(decodeHDR(texture2D(texture, posN, 0.0)));\n    float subpixE = subpixC * subpixC;\n    float lumaEndP = FxaaLuma(decodeHDR(texture2D(texture, posP, 0.0)));\n    if(!pairN) lumaNN = lumaSS;\n    float gradientScaled = gradient * 1.0/4.0;\n    float lumaMM = rgbyM.y - lumaNN * 0.5;\n    float subpixF = subpixD * subpixE;\n    bool lumaMLTZero = lumaMM < 0.0;\n    lumaEndN -= lumaNN * 0.5;\n    lumaEndP -= lumaNN * 0.5;\n    bool doneN = abs(lumaEndN) >= gradientScaled;\n    bool doneP = abs(lumaEndP) >= gradientScaled;\n    if(!doneN) posN.x -= offNP.x * 1.5;\n    if(!doneN) posN.y -= offNP.y * 1.5;\n    bool doneNP = (!doneN) || (!doneP);\n    if(!doneP) posP.x += offNP.x * 1.5;\n    if(!doneP) posP.y += offNP.y * 1.5;\n    if(doneNP) {\n        if(!doneN) lumaEndN = FxaaLuma(decodeHDR(texture2D(texture, posN.xy, 0.0)));\n        if(!doneP) lumaEndP = FxaaLuma(decodeHDR(texture2D(texture, posP.xy, 0.0)));\n        if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\n        if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\n        doneN = abs(lumaEndN) >= gradientScaled;\n        doneP = abs(lumaEndP) >= gradientScaled;\n        if(!doneN) posN.x -= offNP.x * 2.0;\n        if(!doneN) posN.y -= offNP.y * 2.0;\n        doneNP = (!doneN) || (!doneP);\n        if(!doneP) posP.x += offNP.x * 2.0;\n        if(!doneP) posP.y += offNP.y * 2.0;\n        if(doneNP) {\n            if(!doneN) lumaEndN = FxaaLuma(decodeHDR(texture2D(texture, posN.xy, 0.0)));\n            if(!doneP) lumaEndP = FxaaLuma(decodeHDR(texture2D(texture, posP.xy, 0.0)));\n            if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\n            if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\n            doneN = abs(lumaEndN) >= gradientScaled;\n            doneP = abs(lumaEndP) >= gradientScaled;\n            if(!doneN) posN.x -= offNP.x * 4.0;\n            if(!doneN) posN.y -= offNP.y * 4.0;\n            doneNP = (!doneN) || (!doneP);\n            if(!doneP) posP.x += offNP.x * 4.0;\n            if(!doneP) posP.y += offNP.y * 4.0;\n            if(doneNP) {\n                if(!doneN) lumaEndN = FxaaLuma(decodeHDR(texture2D(texture, posN.xy, 0.0)));\n                if(!doneP) lumaEndP = FxaaLuma(decodeHDR(texture2D(texture, posP.xy, 0.0)));\n                if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\n                if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\n                doneN = abs(lumaEndN) >= gradientScaled;\n                doneP = abs(lumaEndP) >= gradientScaled;\n                if(!doneN) posN.x -= offNP.x * 12.0;\n                if(!doneN) posN.y -= offNP.y * 12.0;\n                doneNP = (!doneN) || (!doneP);\n                if(!doneP) posP.x += offNP.x * 12.0;\n                if(!doneP) posP.y += offNP.y * 12.0;\n            }\n        }\n    }\n    float dstN = posM.x - posN.x;\n    float dstP = posP.x - posM.x;\n    if(!horzSpan) dstN = posM.y - posN.y;\n    if(!horzSpan) dstP = posP.y - posM.y;\n    bool goodSpanN = (lumaEndN < 0.0) != lumaMLTZero;\n    float spanLength = (dstP + dstN);\n    bool goodSpanP = (lumaEndP < 0.0) != lumaMLTZero;\n    float spanLengthRcp = 1.0/spanLength;\n    bool directionN = dstN < dstP;\n    float dst = min(dstN, dstP);\n    bool goodSpan = directionN ? goodSpanN : goodSpanP;\n    float subpixG = subpixF * subpixF;\n    float pixelOffset = (dst * (-spanLengthRcp)) + 0.5;\n    float subpixH = subpixG * fxaaQualitySubpix;\n    float pixelOffsetGood = goodSpan ? pixelOffset : 0.0;\n    float pixelOffsetSubpix = max(pixelOffsetGood, subpixH);\n    if(!horzSpan) posM.x += pixelOffsetSubpix * lengthSign;\n    if( horzSpan) posM.y += pixelOffsetSubpix * lengthSign;\n    return vec4(decodeHDR(texture2D(texture, posM, 0.0)).xyz, rgbyM.y);\n}\nvoid main()\n{\n    vec4 color = FxaaPixelShader(\n        v_Texcoord,\n        texture,\n        vec2(1.0) / viewport.zw,\n        subpixel,\n        edgeThreshold,\n        edgeThresholdMin\n    );\n    gl_FragColor = vec4(color.rgb, 1.0);\n}\n@end");var Ai={NORMAL:"normal",POSITION:"position",TEXCOORD_0:"texcoord0",TEXCOORD_1:"texcoord1",WEIGHTS_0:"weight",JOINTS_0:"joint",COLOR:"color"},Ni={5120:Tr.Int8Array,5121:Tr.Uint8Array,5122:Tr.Int16Array,5123:Tr.Uint16Array,5125:Tr.Uint32Array,5126:Tr.Float32Array},Mi={SCALAR:1,VEC2:2,VEC3:3,VEC4:4,MAT2:4,MAT3:9,MAT4:16},wi=Rt.extend({rootNode:null,rootPath:null,textureRootPath:null,bufferRootPath:null,shaderName:"qtek.standard",useStandardMaterial:!1,includeCamera:!0,includeAnimation:!0,includeMesh:!0,includeTexture:!0,crossOrigin:"",textureFlipY:!1,shaderLibrary:null},function(){this.shaderLibrary||(this.shaderLibrary=dn.createLibrary())},{load:function(t){var e=this,r=t.endsWith(".glb");null==this.rootPath&&(this.rootPath=t.slice(0,t.lastIndexOf("/"))),$t.get({url:t,onprogress:function(t,r,n){e.trigger("progress",t,r,n)},onerror:function(t){e.trigger("error",t)},responseType:r?"arraybuffer":"text",onload:function(t){r?e.parseBinary(t):e.parse(JSON.parse(t))}})},parseBinary:function(t){var e=new Uint32Array(t,0,4);if(1179937895!==e[0])return void this.trigger("error","Invalid glTF binary format: Invalid header");if(e[0]<2)return void this.trigger("error","Only glTF2.0 is supported.");for(var r,n=new DataView(t,12),i=[],a=0;a<n.byteLength;){var o=n.getUint32(a,!0);a+=4;var s=n.getUint32(a,!0);if(a+=4,1313821514===s){var u=new Uint8Array(t,a+12,o),l=new TextDecoder,h=l.decode(u);try{r=JSON.parse(h)}catch(t){return void this.trigger("error","JSON Parse error:"+t.toString())}}else 5130562===s&&i.push(t.slice(a+12,a+12+o));a+=o}return r?this.parse(r,i):void this.trigger("error","Invalid glTF binary format: Can't find JSON.")},parse:function(t,e){function r(){0===--u&&i()}function n(){return{json:t,scene:a.rootNode?null:s,rootNode:a.rootNode?s:null,cameras:o.cameras,textures:o.textures,materials:o.materials,skeletons:o.skeletons,meshes:o.meshes,clips:o.clips,nodes:o.nodes}}function i(e){if(o.buffers.length!==t.buffers.length)return void setTimeout(function(){a.trigger("error","Buffer not load complete.")});if(t.bufferViews.forEach(function(t,e){o.bufferViews[e]=o.buffers[t.buffer].slice(t.byteOffset||0,(t.byteOffset||0)+(t.byteLength||0))}),o.buffers=null,a.includeMesh&&(a.includeTexture&&a._parseTextures(t,o),a._parseMaterials(t,o),a._parseMeshes(t,o)),a._parseNodes(t,o),t.scenes){var r=t.scenes[t.scene||0];if(r)for(var i=0;i<r.nodes.length;i++){var u=o.nodes[r.nodes[i]];u.update(),s.add(u)}}a.includeMesh&&a._parseSkins(t,o),a.includeAnimation&&a._parseAnimations(t,o),e?setTimeout(function(){a.trigger("success",n())}):a.trigger("success",n())}var a=this,o={json:t,buffers:[],bufferViews:[],materials:[],textures:[],meshes:[],joints:[],skeletons:[],cameras:[],nodes:[],clips:[]},s=this.rootNode||new Bn,u=0;return e?(o.buffers=e.slice(),i(!0)):wt.each(t.buffers,function(t,e){u++;var n=t.uri;a._loadBuffer(n,function(t){o.buffers[e]=t,r()},r)}),n()},resolveBinaryPath:function(t){if(t&&t.match(/^data:(.*?)base64,/))return t;var e=this.bufferRootPath;return null==e&&(e=this.rootPath),wt.relative2absolute(t,e)},resolveTexturePath:function(t){if(t&&t.match(/^data:(.*?)base64,/))return t;var e=this.textureRootPath;return null==e&&(e=this.rootPath),wt.relative2absolute(t,e)},_loadBuffer:function(t,e,r){$t.get({url:this.resolveBinaryPath(t),responseType:"arraybuffer",onload:function(t){e&&e(t)},onerror:function(t){r&&r(t)}})},_parseSkins:function(t,e){function r(t,e,r){t.skeleton=e,t.joints=r;var n=t.material.shader,o=t.material.clone();t.material=o,o instanceof xi?o.jointCount=r.length:o.shader=i.get(a,{textures:n.getEnabledTextures(),vertexDefines:{SKINNING:null,JOINT_COUNT:r.length}})}function n(t){return t.index}wt.each(t.skins,function(r,n){for(var i=new Si({name:r.name}),a=0;a<r.joints.length;a++){var o=r.joints[a],s=e.nodes[o],u=new In({name:s.name,node:s,index:i.joints.length});i.joints.push(u)}if(i.relativeRootNode=e.nodes[r.skeleton]||this.rootNode,r.inverseBindMatrices){var l=t.accessors[r.inverseBindMatrices],h=e.bufferViews[l.bufferView],c=l.byteOffset||0,f=16*l.count,d=new Tr.Float32Array(h,c,f);i.setJointMatricesArray(d)}else i.updateJointMatrices();e.skeletons[n]=i},this);var i=this.shaderLibrary,a=this.shaderName;wt.each(t.nodes,function(t,i){if(null!=t.skin){var a=t.skin,o=e.skeletons[a],s=e.nodes[i],u=o.joints.map(n);if(s instanceof Jr)r(s,o,u);else for(var l=s.children(),h=0;h<l.length;h++)r(l[h],o,u)}},this)},_parseTextures:function(t,e){wt.each(t.textures,function(r,n){var i=t.samplers&&t.samplers[r.sampler]||{},a={};["wrapS","wrapT","magFilter","minFilter"].forEach(function(t){var e=i[t];null!=e&&(a[t]=e)}),wt.defaults(a,{wrapS:nr.REPEAT,wrapT:nr.REPEAT,flipY:this.textureFlipY});var o=r.target||je.TEXTURE_2D,s=r.format;if(null!=s&&(a.format=s),o===je.TEXTURE_2D){var u,l=new or(a),h=t.images[r.source];h.uri?u=this.resolveTexturePath(h.uri):null!=h.bufferView&&(u=URL.createObjectURL(new Blob([e.bufferViews[h.bufferView]],{type:h.mimeType}))),u&&(l.load(u,this.crossOrigin),e.textures[n]=l)}},this)},_KHRCommonMaterialToStandard:function(t,e){var r={};r=t.extensions.KHR_materials_common.values||{},"number"==typeof r.diffuse&&(r.diffuse=e.textures[r.diffuse]||null),"number"==typeof r.emission&&(r.emission=e.textures[r.emission]||null);var n=[];r.diffuse instanceof or&&n.push("diffuseMap"),t.normalTexture&&n.push("normalMap"),r.emission instanceof or&&n.push("emissiveMap");var i,a=this.useStandardMaterial;if(a)i=new xi({name:t.name,doubleSided:t.doubleSided});else{var o={USE_ROUGHNESS:null,USE_METALNESS:null};t.doubleSided&&(o.DOUBLE_SIDED=null),i=new Xr({name:t.name,shader:this.shaderLibrary.get(this.shaderName,{fragmentDefines:o,textures:n})})}r.transparent&&(i.depthMask=!1,i.depthTest=!0,i.transparent=!0);var s=r.diffuse;s&&(Array.isArray(s)?(s=s.slice(0,3),a?i.color=s:i.set("color",s)):a?i.diffuseMap=s:i.set("diffuseMap",s));var u=r.emission;if(null!=u&&(Array.isArray(u)?(u=u.slice(0,3),a?i.emission=u:i.set("emission",u)):a?i.emissiveMap=u:i.set("emissiveMap",u)),null!=t.normalTexture){var l=t.normalTexture.index;a?i.normalMap=e.textures[l]||null:i.set("normalMap",e.textures[l]||null)}if(null!=r.shininess){var h=Math.log(r.shininess)/Math.log(8192);i.set("glossiness",h),i.set("roughness",1-h)}else i.set("glossiness",.3),i.set("roughness",.3);return null!=r.specular&&i.set("specularColor",r.specular.slice(0,3)),null!=r.transparency&&i.set("alpha",r.transparency),i},_pbrMetallicRoughnessToStandard:function(t,e,r){var n,i,a,o,s,u,l="MASK"===t.alphaMode,h=this.useStandardMaterial,c=[];e.baseColorTexture&&(i=r.textures[e.baseColorTexture.index]||null)&&c.push("diffuseMap"),e.metallicRoughnessTexture&&(a=o=r.textures[e.metallicRoughnessTexture.index]||null)&&c.push("metalnessMap","roughnessMap"),t.normalTexture&&(s=r.textures[t.normalTexture.index]||null)&&c.push("normalMap"),t.emissiveTexture&&(u=r.textures[t.emissiveTexture.index]||null)&&c.push("emissiveMap");var f=e.baseColorFactor||[1,1,1,1],d={diffuseMap:i||null,roughnessMap:a||null,metalnessMap:o||null,normalMap:s||null,emissiveMap:u||null,color:f.slice(0,3),alpha:f[3],metalness:e.metallicFactor||0,roughness:e.roughnessFactor||0,emission:t.emissiveFactor||[0,0,0],alphaCutoff:t.alphaCutoff||0}
;if(d.roughnessMap&&(d.metalness=.5,d.roughness=.5),h)n=new xi(wt.extend({name:t.name,alphaTest:l,doubleSided:t.doubleSided,roughnessChannel:1,metalnessChannel:2},d));else{var _={ROUGHNESS_CHANNEL:1,METALNESS_CHANNEL:2,USE_ROUGHNESS:null,USE_METALNESS:null};l&&(_.ALPHA_TEST=null),t.doubleSided&&(_.DOUBLE_SIDED=null),n=new Xr({name:t.name,shader:this.shaderLibrary.get(this.shaderName,{fragmentDefines:_,textures:c})}),n.set(d)}return"BLEND"===t.alphaMode&&(n.depthMask=!1,n.depthTest=!0,n.transparent=!0),n},_pbrSpecularGlossinessToStandard:function(t,e,r){var n="MASK"===t.alphaMode;this.useStandardMaterial&&console.error("StandardMaterial doesn't support specular glossiness workflow yet");var i,a,o,s,u,l,h=[];e.diffuseTexture&&(a=r.textures[e.diffuseTexture.index]||null)&&h.push("diffuseMap"),e.specularGlossinessTexture&&(o=s=r.textures[e.specularGlossinessTexture.index]||null)&&h.push("specularMap","glossinessMap"),t.normalTexture&&(u=r.textures[t.normalTexture.index]||null)&&h.push("normalMap"),t.emissiveTexture&&(l=r.textures[t.emissiveTexture.index]||null)&&h.push("emissiveMap");var c=e.diffuseFactor||[1,1,1,1],f={diffuseMap:a||null,glossinessMap:o||null,specularMap:s||null,normalMap:u||null,emissiveMap:l||null,color:c.slice(0,3),alpha:c[3],specularColor:e.specularFactor||[1,1,1],glossiness:e.glossinessFactor||0,emission:t.emissiveFactor||[0,0,0],alphaCutoff:null==t.alphaCutoff?.9:t.alphaCutoff};f.glossinessMap&&(f.glossiness=.5),f.specularMap&&(f.specularColor=[1,1,1]);var d={GLOSSINESS_CHANNEL:3};return n&&(d.ALPHA_TEST=null),t.doubleSided&&(d.DOUBLE_SIDED=null),i=new Xr({name:t.name,shader:this.shaderLibrary.get(this.shaderName,{fragmentDefines:d,textures:h})}),i.set(f),"BLEND"===t.alphaMode&&(i.depthMask=!1,i.depthTest=!0,i.transparent=!0),i},_parseMaterials:function(t,e){wt.each(t.materials,function(t,r){t.extensions&&t.extensions.KHR_materials_common?e.materials[r]=this._KHRCommonMaterialToStandard(t,e):t.extensions&&t.extensions.KHR_materials_pbrSpecularGlossiness?e.materials[r]=this._pbrSpecularGlossinessToStandard(t,t.extensions.KHR_materials_pbrSpecularGlossiness,e):e.materials[r]=this._pbrMetallicRoughnessToStandard(t,t.pbrMetallicRoughness||{},e)},this)},_parseMeshes:function(t,e){var r=this;wt.each(t.meshes,function(n,i){e.meshes[i]=[];for(var a=0;a<n.primitives.length;a++){for(var o=n.primitives[a],s=new Mr({dynamic:!1,name:n.name,boundingBox:new Se}),u=Object.keys(o.attributes),l=0;l<u.length;l++){var h=u[l],c=o.attributes[h],f=t.accessors[c],d=Ai[h];if(d){var _=Mi[f.type],m=_t(t,e,c);if(m instanceof Tr.Uint32Array&&(m=new Float32Array(m)),"WEIGHTS_0"===h&&4===_){for(var p=new m.constructor(3*f.count),v=0;v<f.count;v++){var g=4*v,y=3*v,x=m[g],T=m[g+1],E=m[g+2],b=m[g+3],S=x+T+E+b;p[y]=x/S,p[y+1]=T/S,p[y+2]=E/S}s.attributes[d].value=p}else s.attributes[d].value=m;var A="float";if(m instanceof Tr.Uint16Array?A="ushort":m instanceof Tr.Int16Array?A="short":m instanceof Tr.Uint8Array?A="ubyte":m instanceof Tr.Int8Array&&(A="byte"),s.attributes[d].type=A,"POSITION"===h){var N=f.min,M=f.max;N&&s.boundingBox.min.set(N[0],N[1],N[2]),M&&s.boundingBox.max.set(M[0],M[1],M[2])}}}null!=o.indices&&(s.indices=_t(t,e,o.indices,!0),s.vertexCount<=65535&&s.indices instanceof Tr.Uint32Array&&(s.indices=new Tr.Uint16Array(s.indices)));var w=e.materials[o.material],R=(t.materials||[])[o.material];w||(w=new Xr({shader:this.shaderLibrary.get(r.shaderName)}));var C=new Jr({geometry:s,material:w,mode:[Jr.POINTS,Jr.LINES,Jr.LINE_LOOP,Jr.LINE_STRIP,Jr.TRIANGLES,Jr.TRIANGLE_STRIP,Jr.TRIANGLE_FAN][o.mode]||Jr.TRIANGLES,ignoreGBuffer:w.transparent});null!=R&&(C.culling=!R.doubleSided),C.geometry.attributes.normal.value||C.geometry.generateVertexNormals(),(w instanceof xi&&w.normalMap||w.shader&&w.shader.isTextureEnabled("normalMap"))&&(C.geometry.attributes.tangent.value||C.geometry.generateTangents()),C.name=wi.generateMeshName(t.meshes,i,a),e.meshes[i].push(C)}},this)},_instanceCamera:function(t,e){var r=t.cameras[e.camera];if("perspective"===r.type){var n=r.perspective||{};return new ze({name:e.name,aspect:n.aspectRatio,fov:n.yfov,far:n.zfar,near:n.znear})}var i=r.orthographic||{};return new qe({name:e.name,top:i.ymag,right:i.xmag,left:-i.xmag,bottom:-i.ymag,near:i.znear,far:i.zfar})},_parseNodes:function(t,e){function r(t){return new Jr({name:t.name,geometry:t.geometry,material:t.material,culling:t.culling,mode:t.mode})}wt.each(t.nodes,function(n,i){var a;if(null!=n.camera&&this.includeCamera)a=this._instanceCamera(t,n),e.cameras.push(a);else if(null!=n.mesh&&this.includeMesh){var o=e.meshes[n.mesh];if(o)if(1===o.length)a=r(o[0]),a.setName(n.name);else{a=new Me,a.setName(n.name);for(var s=0;s<o.length;s++)a.add(r(o[s]))}}else a=new Me,a.setName(n.name);n.matrix?(a.localTransform.setArray(n.matrix),a.decomposeLocalTransform()):(n.translation&&a.position.setArray(n.translation),n.rotation&&a.rotation.setArray(n.rotation),n.scale&&a.scale.setArray(n.scale)),e.nodes[i]=a},this),wt.each(t.nodes,function(t,r){var n=e.nodes[r];if(t.children)for(var i=0;i<t.children.length;i++){var a=t.children[i],o=e.nodes[a];n.add(o)}})},_parseAnimations:function(t,e){function r(t){return"weights"!==t.path||(console.warn("GLTFLoader not support morph targets yet."),!1)}function n(t,e){return t.target.node+"_"+e.samplers[t.sampler].input}var i={};wt.each(t.animations,function(a,o){var s=a.channels.filter(r);if(s.length){for(var u={},l=0;l<s.length;l++){var h=s[l],c=n(h,a),f=e.nodes[h.target.node],d=u[c],_=a.samplers[h.sampler];if(!d){d=u[c]=new Kt({name:f?f.name:"",target:f}),d.targetNodeIndex=h.target.node,d.channels.time=_t(t,e,_.input);var m=d.channels.time.length;if(!i[_.input]){for(var p=0;p<m;p++)d.channels.time[p]*=1e3;i[_.input]=!0}}"LINEAR"!==(_.interpolation||"LINEAR")&&console.warn("GLTFLoader only support LINEAR interpolation.");var v=h.target.path;"translation"===v&&(v="position"),d.channels[v]=_t(t,e,_.output)}var g=new Jt({name:a.name,loop:!0});for(var y in u)g.addTrack(u[y]);g.calcLifeFromTracks(),e.clips.push(g)}},this);var a=e.clips.reduce(function(t,e){return Math.max(t,e.life)},0);return e.clips.forEach(function(t){t.life=a}),e.clips}});wi.generateMeshName=function(t,e,r){var n=t[e],i=n.name||"mesh_"+e;return 0===r?i:i+"$"+r};var Ri=Bt.mat2,Ci=function(){this._array=Ri.create(),this._dirty=!0};Ci.prototype={constructor:Ci,setArray:function(t){for(var e=0;e<this._array.length;e++)this._array[e]=t[e];return this._dirty=!0,this},clone:function(){return(new Ci).copy(this)},copy:function(t){return Ri.copy(this._array,t._array),this._dirty=!0,this},adjoint:function(){return Ri.adjoint(this._array,this._array),this._dirty=!0,this},determinant:function(){return Ri.determinant(this._array)},identity:function(){return Ri.identity(this._array),this._dirty=!0,this},invert:function(){return Ri.invert(this._array,this._array),this._dirty=!0,this},mul:function(t){return Ri.mul(this._array,this._array,t._array),this._dirty=!0,this},mulLeft:function(t){return Ri.mul(this._array,t._array,this._array),this._dirty=!0,this},multiply:function(t){return Ri.multiply(this._array,this._array,t._array),this._dirty=!0,this},multiplyLeft:function(t){return Ri.multiply(this._array,t._array,this._array),this._dirty=!0,this},rotate:function(t){return Ri.rotate(this._array,this._array,t),this._dirty=!0,this},scale:function(t){return Ri.scale(this._array,this._array,t._array),this._dirty=!0,this},transpose:function(){return Ri.transpose(this._array,this._array),this._dirty=!0,this},toString:function(){return"["+Array.prototype.join.call(this._array,",")+"]"},toArray:function(){return Array.prototype.slice.call(this._array)}},Ci.adjoint=function(t,e){return Ri.adjoint(t._array,e._array),t._dirty=!0,t},Ci.copy=function(t,e){return Ri.copy(t._array,e._array),t._dirty=!0,t},Ci.determinant=function(t){return Ri.determinant(t._array)},Ci.identity=function(t){return Ri.identity(t._array),t._dirty=!0,t},Ci.invert=function(t,e){return Ri.invert(t._array,e._array),t._dirty=!0,t},Ci.mul=function(t,e,r){return Ri.mul(t._array,e._array,r._array),t._dirty=!0,t},Ci.multiply=Ci.mul,Ci.rotate=function(t,e,r){return Ri.rotate(t._array,e._array,r),t._dirty=!0,t},Ci.scale=function(t,e,r){return Ri.scale(t._array,e._array,r._array),t._dirty=!0,t},Ci.transpose=function(t,e){return Ri.transpose(t._array,e._array),t._dirty=!0,t};var Li=Bt.mat2d,Pi=function(){this._array=Li.create(),this._dirty=!0};Pi.prototype={constructor:Pi,setArray:function(t){for(var e=0;e<this._array.length;e++)this._array[e]=t[e];return this._dirty=!0,this},clone:function(){return(new Pi).copy(this)},copy:function(t){return Li.copy(this._array,t._array),this._dirty=!0,this},determinant:function(){return Li.determinant(this._array)},identity:function(){return Li.identity(this._array),this._dirty=!0,this},invert:function(){return Li.invert(this._array,this._array),this._dirty=!0,this},mul:function(t){return Li.mul(this._array,this._array,t._array),this._dirty=!0,this},mulLeft:function(t){return Li.mul(this._array,t._array,this._array),this._dirty=!0,this},multiply:function(t){return Li.multiply(this._array,this._array,t._array),this._dirty=!0,this},multiplyLeft:function(t){return Li.multiply(this._array,t._array,this._array),this._dirty=!0,this},rotate:function(t){return Li.rotate(this._array,this._array,t),this._dirty=!0,this},scale:function(t){return Li.scale(this._array,this._array,t._array),this._dirty=!0,this},translate:function(t){return Li.translate(this._array,this._array,t._array),this._dirty=!0,this},toString:function(){return"["+Array.prototype.join.call(this._array,",")+"]"},toArray:function(){return Array.prototype.slice.call(this._array)}},Pi.copy=function(t,e){return Li.copy(t._array,e._array),t._dirty=!0,t},Pi.determinant=function(t){return Li.determinant(t._array)},Pi.identity=function(t){return Li.identity(t._array),t._dirty=!0,t},Pi.invert=function(t,e){return Li.invert(t._array,e._array),t._dirty=!0,t},Pi.mul=function(t,e,r){return Li.mul(t._array,e._array,r._array),t._dirty=!0,t},Pi.multiply=Pi.mul,Pi.rotate=function(t,e,r){return Li.rotate(t._array,e._array,r),t._dirty=!0,t},Pi.scale=function(t,e,r){return Li.scale(t._array,e._array,r._array),t._dirty=!0,t},Pi.translate=function(t,e,r){return Li.translate(t._array,e._array,r._array),t._dirty=!0,t};var Di=Bt.mat3,Ii=function(){this._array=Di.create(),this._dirty=!0};Ii.prototype={constructor:Ii,setArray:function(t){for(var e=0;e<this._array.length;e++)this._array[e]=t[e];return this._dirty=!0,this},adjoint:function(){return Di.adjoint(this._array,this._array),this._dirty=!0,this},clone:function(){return(new Ii).copy(this)},copy:function(t){return Di.copy(this._array,t._array),this._dirty=!0,this},determinant:function(){return Di.determinant(this._array)},fromMat2d:function(t){return Di.fromMat2d(this._array,t._array),this._dirty=!0,this},fromMat4:function(t){return Di.fromMat4(this._array,t._array),this._dirty=!0,this},fromQuat:function(t){return Di.fromQuat(this._array,t._array),this._dirty=!0,this},identity:function(){return Di.identity(this._array),this._dirty=!0,this},invert:function(){return Di.invert(this._array,this._array),this._dirty=!0,this},mul:function(t){return Di.mul(this._array,this._array,t._array),this._dirty=!0,this},mulLeft:function(t){return Di.mul(this._array,t._array,this._array),this._dirty=!0,this},multiply:function(t){return Di.multiply(this._array,this._array,t._array),this._dirty=!0,this},multiplyLeft:function(t){return Di.multiply(this._array,t._array,this._array),this._dirty=!0,this},rotate:function(t){return Di.rotate(this._array,this._array,t),this._dirty=!0,this},scale:function(t){return Di.scale(this._array,this._array,t._array),this._dirty=!0,this},translate:function(t){return Di.translate(this._array,this._array,t._array),this._dirty=!0,this},normalFromMat4:function(t){return Di.normalFromMat4(this._array,t._array),this._dirty=!0,this},transpose:function(){return Di.transpose(this._array,this._array),this._dirty=!0,this},toString:function(){return"["+Array.prototype.join.call(this._array,",")+"]"},toArray:function(){return Array.prototype.slice.call(this._array)}},Ii.adjoint=function(t,e){return Di.adjoint(t._array,e._array),t._dirty=!0,t},Ii.copy=function(t,e){return Di.copy(t._array,e._array),t._dirty=!0,t},Ii.determinant=function(t){return Di.determinant(t._array)},Ii.identity=function(t){return Di.identity(t._array),t._dirty=!0,t},Ii.invert=function(t,e){return Di.invert(t._array,e._array),t},Ii.mul=function(t,e,r){return Di.mul(t._array,e._array,r._array),t._dirty=!0,t},Ii.multiply=Ii.mul,Ii.fromMat2d=function(t,e){return Di.fromMat2d(t._array,e._array),t._dirty=!0,t},Ii.fromMat4=function(t,e){return Di.fromMat4(t._array,e._array),t._dirty=!0,t},Ii.fromQuat=function(t,e){return Di.fromQuat(t._array,e._array),t._dirty=!0,t},Ii.normalFromMat4=function(t,e){return Di.normalFromMat4(t._array,e._array),t._dirty=!0,t},Ii.rotate=function(t,e,r){return Di.rotate(t._array,e._array,r),t._dirty=!0,t},Ii.scale=function(t,e,r){return Di.scale(t._array,e._array,r._array),t._dirty=!0,t},Ii.transpose=function(t,e){return Di.transpose(t._array,e._array),t._dirty=!0,t},Ii.translate=function(t,e,r){return Di.translate(t._array,e._array,r._array),t._dirty=!0,t};var Oi=function(){};Oi.prototype.get=function(t){};var ki=function(t){this.get=function(){return t}};ki.prototype=new Oi,ki.prototype.constructor=ki;var Ui=function(t){var e=t.constructor;this.get=function(r){return r||(r=new e),r.copy(t),r}};Ui.prototype=new Oi,Ui.prototype.constructor=Ui;var Fi=function(t,e){var r=e-t;this.get=function(){return Math.random()*r+t}};Fi.prototype=new Oi,Fi.prototype.constructor=Fi;var Bi=function(t,e){var r=e.x-t.x,n=e.y-t.y;this.get=function(e){return e||(e=new Gt),Gt.set(e,r*Math.random()+t._array[0],n*Math.random()+t._array[1]),e}};Bi.prototype=new Oi,Bi.prototype.constructor=Bi;var Hi=function(t,e){var r=e.x-t.x,n=e.y-t.y,i=e.z-t.z;this.get=function(e){return e||(e=new ie),ie.set(e,r*Math.random()+t._array[0],n*Math.random()+t._array[1],i*Math.random()+t._array[2]),e}};Hi.prototype=new Oi,Hi.prototype.constructor=Hi,Oi.constant=function(t){return new ki(t)},Oi.vector=function(t){return new Ui(t)},Oi.random1D=function(t,e){return new Fi(t,e)},Oi.random2D=function(t,e){return new Bi(t,e)},Oi.random3D=function(t,e){return new Hi(t,e)};var Gi=Bt.vec4,Wi=function(t,e,r,n){t=t||0,e=e||0,r=r||0,n=n||0,this._array=Gi.fromValues(t,e,r,n),this._dirty=!0};Wi.prototype={constructor:Wi,add:function(t){return Gi.add(this._array,this._array,t._array),this._dirty=!0,this},set:function(t,e,r,n){return this._array[0]=t,this._array[1]=e,this._array[2]=r,this._array[3]=n,this._dirty=!0,this},setArray:function(t){return this._array[0]=t[0],this._array[1]=t[1],this._array[2]=t[2],this._array[3]=t[3],this._dirty=!0,this},clone:function(){return new Wi(this.x,this.y,this.z,this.w)},copy:function(t){return Gi.copy(this._array,t._array),this._dirty=!0,this},dist:function(t){return Gi.dist(this._array,t._array)},distance:function(t){return Gi.distance(this._array,t._array)},div:function(t){return Gi.div(this._array,this._array,t._array),this._dirty=!0,this},divide:function(t){return Gi.divide(this._array,this._array,t._array),this._dirty=!0,this},dot:function(t){return Gi.dot(this._array,t._array)},len:function(){return Gi.len(this._array)},length:function(){return Gi.length(this._array)},lerp:function(t,e,r){return Gi.lerp(this._array,t._array,e._array,r),this._dirty=!0,this},min:function(t){return Gi.min(this._array,this._array,t._array),this._dirty=!0,this},max:function(t){return Gi.max(this._array,this._array,t._array),this._dirty=!0,this},mul:function(t){return Gi.mul(this._array,this._array,t._array),this._dirty=!0,this},multiply:function(t){return Gi.multiply(this._array,this._array,t._array),this._dirty=!0,this},negate:function(){return Gi.negate(this._array,this._array),this._dirty=!0,this},normalize:function(){return Gi.normalize(this._array,this._array),this._dirty=!0,this},random:function(t){return Gi.random(this._array,t),this._dirty=!0,this},scale:function(t){return Gi.scale(this._array,this._array,t),this._dirty=!0,this},scaleAndAdd:function(t,e){return Gi.scaleAndAdd(this._array,this._array,t._array,e),this._dirty=!0,this},sqrDist:function(t){return Gi.sqrDist(this._array,t._array)},squaredDistance:function(t){return Gi.squaredDistance(this._array,t._array)},sqrLen:function(){return Gi.sqrLen(this._array)},squaredLength:function(){return Gi.squaredLength(this._array)},sub:function(t){return Gi.sub(this._array,this._array,t._array),this._dirty=!0,this},subtract:function(t){return Gi.subtract(this._array,this._array,t._array),this._dirty=!0,this},transformMat4:function(t){return Gi.transformMat4(this._array,this._array,t._array),this._dirty=!0,this},transformQuat:function(t){return Gi.transformQuat(this._array,this._array,t._array),this._dirty=!0,this},toString:function(){return"["+Array.prototype.join.call(this._array,",")+"]"},toArray:function(){return Array.prototype.slice.call(this._array)}};var Vi=Object.defineProperty;if(Vi){var qi=Wi.prototype;Vi(qi,"x",{get:function(){return this._array[0]},set:function(t){this._array[0]=t,this._dirty=!0}}),Vi(qi,"y",{get:function(){return this._array[1]},set:function(t){this._array[1]=t,this._dirty=!0}}),Vi(qi,"z",{get:function(){return this._array[2]},set:function(t){this._array[2]=t,this._dirty=!0}}),Vi(qi,"w",{get:function(){return this._array[3]},set:function(t){this._array[3]=t,this._dirty=!0}})}Wi.add=function(t,e,r){return Gi.add(t._array,e._array,r._array),t._dirty=!0,t},Wi.set=function(t,e,r,n,i){Gi.set(t._array,e,r,n,i),t._dirty=!0},Wi.copy=function(t,e){return Gi.copy(t._array,e._array),t._dirty=!0,t},Wi.dist=function(t,e){return Gi.distance(t._array,e._array)},Wi.distance=Wi.dist,Wi.div=function(t,e,r){return Gi.divide(t._array,e._array,r._array),t._dirty=!0,t},Wi.divide=Wi.div,Wi.dot=function(t,e){return Gi.dot(t._array,e._array)},Wi.len=function(t){return Gi.length(t._array)},Wi.lerp=function(t,e,r,n){return Gi.lerp(t._array,e._array,r._array,n),t._dirty=!0,t},Wi.min=function(t,e,r){return Gi.min(t._array,e._array,r._array),t._dirty=!0,t},Wi.max=function(t,e,r){return Gi.max(t._array,e._array,r._array),t._dirty=!0,t},Wi.mul=function(t,e,r){return Gi.multiply(t._array,e._array,r._array),t._dirty=!0,t},Wi.multiply=Wi.mul,Wi.negate=function(t,e){return Gi.negate(t._array,e._array),t._dirty=!0,t},Wi.normalize=function(t,e){return Gi.normalize(t._array,e._array),t._dirty=!0,t},Wi.random=function(t,e){return Gi.random(t._array,e),t._dirty=!0,t},Wi.scale=function(t,e,r){return Gi.scale(t._array,e._array,r),t._dirty=!0,t},Wi.scaleAndAdd=function(t,e,r,n){return Gi.scaleAndAdd(t._array,e._array,r._array,n),t._dirty=!0,t},Wi.sqrDist=function(t,e){return Gi.sqrDist(t._array,e._array)},Wi.squaredDistance=Wi.sqrDist,Wi.sqrLen=function(t){return Gi.sqrLen(t._array)},Wi.squaredLength=Wi.sqrLen,Wi.sub=function(t,e,r){return Gi.subtract(t._array,e._array,r._array),t._dirty=!0,t},Wi.subtract=Wi.sub,Wi.transformMat4=function(t,e,r){return Gi.transformMat4(t._array,e._array,r._array),t._dirty=!0,t},Wi.transformQuat=function(t,e,r){return Gi.transformQuat(t._array,e._array,r._array),t._dirty=!0,t};var zi=Bt.vec3,Xi=function(){this.position=new ie,this.rotation=new ie,this.velocity=null,this.angularVelocity=null,this.life=1,this.age=0,this.spriteSize=1,this.weight=1,this.emitter=null};Xi.prototype.update=function(t){this.velocity&&zi.scaleAndAdd(this.position._array,this.position._array,this.velocity._array,t),this.angularVelocity&&zi.scaleAndAdd(this.rotation._array,this.rotation._array,this.angularVelocity._array,t)};var ji=Rt.extend({max:1e3,amount:20,life:null,position:null,rotation:null,velocity:null,angularVelocity:null,spriteSize:null,weight:null,_particlePool:null},function(){this._particlePool=[];for(var t=0;t<this.max;t++){var e=new Xi;e.emitter=this,this._particlePool.push(e),this.velocity&&(e.velocity=new ie),this.angularVelocity&&(e.angularVelocity=new ie)}},{emit:function(t){for(var e,r=Math.min(this._particlePool.length,this.amount),n=0;n<r;n++)e=this._particlePool.pop(),this.position&&this.position.get(e.position),this.rotation&&this.rotation.get(e.rotation),this.velocity&&this.velocity.get(e.velocity),this.angularVelocity&&this.angularVelocity.get(e.angularVelocity),this.life&&(e.life=this.life.get()),this.spriteSize&&(e.spriteSize=this.spriteSize.get()),this.weight&&(e.weight=this.weight.get()),e.age=0,t.push(e)},kill:function(t){this._particlePool.push(t)}});ji.constant=Oi.constant,ji.vector=Oi.vector,ji.random1D=Oi.random1D,ji.random2D=Oi.random2D,ji.random3D=Oi.random3D;var Yi=Rt.extend({},{applyTo:function(t,e,r,n){}}),Ki=Bt.vec3,Qi=Yi.extend(function(){return{force:new ie}},{applyTo:function(t,e,r,n){r>0&&Ki.scaleAndAdd(t._array,t._array,this.force._array,n/r)}});Wr.import("@export qtek.particle.vertex\nuniform mat4 worldView : WORLDVIEW;\nuniform mat4 projection : PROJECTION;\nattribute vec3 position : POSITION;\nattribute vec3 normal : NORMAL;\n#ifdef UV_ANIMATION\nattribute vec2 texcoord0 : TEXCOORD_0;\nattribute vec2 texcoord1 : TEXCOORD_1;\nvarying vec2 v_Uv0;\nvarying vec2 v_Uv1;\n#endif\nvarying float v_Age;\nvoid main() {\n    v_Age = normal.x;\n    float rotation = normal.y;\n    vec4 worldViewPosition = worldView * vec4(position, 1.0);\n    gl_Position = projection * worldViewPosition;\n    float w = gl_Position.w;\n    gl_PointSize = normal.z * projection[0].x / w;\n    #ifdef UV_ANIMATION\n        v_Uv0 = texcoord0;\n        v_Uv1 = texcoord1;\n    #endif\n}\n@end\n@export qtek.particle.fragment\nuniform sampler2D sprite;\nuniform sampler2D gradient;\nuniform vec3 color : [1.0, 1.0, 1.0];\nuniform float alpha : 1.0;\nvarying float v_Age;\n#ifdef UV_ANIMATION\nvarying vec2 v_Uv0;\nvarying vec2 v_Uv1;\n#endif\nvoid main() {\n    vec4 color = vec4(color, alpha);\n    #ifdef SPRITE_ENABLED\n        #ifdef UV_ANIMATION\n            color *= texture2D(sprite, mix(v_Uv0, v_Uv1, gl_PointCoord));\n        #else\n            color *= texture2D(sprite, gl_PointCoord);\n        #endif\n    #endif\n    #ifdef GRADIENT_ENABLED\n        color *= texture2D(gradient, vec2(v_Age, 0.5));\n    #endif\n    gl_FragColor = color;\n}\n@end");var Zi=new Wr({vertex:Wr.source("qtek.particle.vertex"),fragment:Wr.source("qtek.particle.fragment")});Zi.enableTexture("sprite");var Ji=Zr.extend({loop:!0,oneshot:!1,duration:1,spriteAnimationTileX:1,spriteAnimationTileY:1,spriteAnimationRepeat:0,mode:Zr.POINTS,ignorePicking:!0,_elapsedTime:0,_emitting:!0},function(){this.geometry=new Mr({dynamic:!0}),this.material||(this.material=new Xr({shader:Zi,transparent:!0,depthMask:!1})),this._particles=[],this._fields=[],this._emitters=[]},{culling:!1,frustumCulling:!1,castShadow:!1,receiveShadow:!1,addEmitter:function(t){this._emitters.push(t)},removeEmitter:function(t){this._emitters.splice(this._emitters.indexOf(t),1)},addField:function(t){this._fields.push(t)},removeField:function(t){this._fields.splice(this._fields.indexOf(t),1)},reset:function(){for(var t=0;t<this._particles.length;t++){var e=this._particles[t];e.emitter.kill(e)}this._particles.length=0,this._elapsedTime=0,this._emitting=!0},updateParticles:function(t){t/=1e3,this._elapsedTime+=t;var e=this._particles;if(this._emitting){for(var r=0;r<this._emitters.length;r++)this._emitters[r].emit(e);this.oneshot&&(this._emitting=!1)}for(var n=e.length,r=0;r<n;){var i=e[r];i.age+=t,i.age>=i.life?(i.emitter.kill(i),e[r]=e[n-1],e.pop(),n--):r++}for(var r=0;r<n;r++){var i=e[r];if(this._fields.length>0)for(var a=0;a<this._fields.length;a++)this._fields[a].applyTo(i.velocity,i.position,i.weight,t);i.update(t)}this._updateVertices()},_updateVertices:function(){var t=this.geometry,e=this.spriteAnimationTileX,r=this.spriteAnimationTileY,n=this.spriteAnimationRepeat,i=r*e*n,a=i>1,o=t.attributes.position.value,s=t.attributes.normal.value,u=t.attributes.texcoord0.value,l=t.attributes.texcoord1.value,h=this._particles.length;o&&o.length===3*h||(o=t.attributes.position.value=new Float32Array(3*h),s=t.attributes.normal.value=new Float32Array(3*h),a&&(u=t.attributes.texcoord0.value=new Float32Array(2*h),l=t.attributes.texcoord1.value=new Float32Array(2*h)));for(var c=1/e,f=0;f<h;f++){for(var d=this._particles[f],_=3*f,m=0;m<3;m++)o[_+m]=d.position._array[m],s[_]=d.age/d.life,s[_+1]=0,s[_+2]=d.spriteSize;var p=2*f;if(a){var v=d.age/d.life,g=Math.round(v*(i-1))*n,y=Math.floor(g*c),x=g-y*e;u[p]=x/e,u[p+1]=1-y/r,l[p]=(x+1)/e,l[p+1]=1-(y+1)/r}}t.dirty()},isFinished:function(){return this._elapsedTime>this.duration&&!this.loop},dispose:function(t){for(var e=0;e<this._particles.length;e++){var r=this._particles[e];r.emitter.kill(r)}this.geometry.dispose(t)},clone:function(){var t=new Ji({material:this.material});t.loop=this.loop,t.duration=this.duration,t.oneshot=this.oneshot,t.spriteAnimationRepeat=this.spriteAnimationRepeat,t.spriteAnimationTileY=this.spriteAnimationTileY,t.spriteAnimationTileX=this.spriteAnimationTileX,t.position.copy(this.position),t.rotation.copy(this.rotation),t.scale.copy(this.scale);for(var e=0;e<this._children.length;e++)t.add(this._children[e].clone());return t}});Wr.import("@export qtek.picking.color.vertex\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\nattribute vec3 position : POSITION;\n@import qtek.chunk.skinning_header\nvoid main(){\n    vec3 skinnedPosition = position;\n    #ifdef SKINNING\n        @import qtek.chunk.skin_matrix\n        skinnedPosition = (skinMatrixWS * vec4(position, 1.0)).xyz;\n    #endif\n    gl_Position = worldViewProjection * vec4(skinnedPosition, 1.0);\n}\n@end\n@end\n@export qtek.picking.color.fragment\nuniform vec4 color : [1.0, 1.0, 1.0, 1.0];\nvoid main() {\n    gl_FragColor = color;\n}\n@end");var $i=Rt.extend(function(){return{renderer:null,downSampleRatio:1,width:100,height:100,lookupOffset:1,_frameBuffer:null,_texture:null,_shader:null,_idMaterials:[],_lookupTable:[],_meshMaterials:[],_idOffset:0}},function(){this.renderer&&(this.width=this.renderer.getWidth(),this.height=this.renderer.getHeight()),this._init()},{_init:function(){this._texture=new or({width:this.width*this.downSampleRatio,height:this.height*this.downSampleRatio}),this._frameBuffer=new vr,this._shader=new Wr({vertex:Wr.source("qtek.picking.color.vertex"),fragment:Wr.source("qtek.picking.color.fragment")})},setPrecision:function(t){this._texture.width=this.width*t,this._texture.height=this.height*t,this.downSampleRatio=t},resize:function(t,e){this._texture.width=t*this.downSampleRatio,this._texture.height=e*this.downSampleRatio,this.width=t,this.height=e,this._texture.dirty()},update:function(t,e){var r=this.renderer;r.getWidth()===this.width&&r.getHeight()===this.height||this.resize(r.width,r.height),this._frameBuffer.attach(this._texture),this._frameBuffer.bind(r),this._idOffset=this.lookupOffset,this._setMaterial(t),r.render(t,e),this._restoreMaterial(),this._frameBuffer.unbind(r)},_setMaterial:function(t){for(var e=0;e<t._children.length;e++){var r=t._children[e];if(r.geometry&&r.material&&r.material.shader){var n=this._idOffset++,i=n-this.lookupOffset,a=this._idMaterials[i];if(!a){a=new Xr({shader:this._shader});var o=mt(n);o[0]/=255,o[1]/=255,o[2]/=255,o[3]=1,a.set("color",o),this._idMaterials[i]=a}this._meshMaterials[i]=r.material,this._lookupTable[i]=r,r.material=a}r._children.length&&this._setMaterial(r)}},pick:function(t,e){var r=this.renderer,n=this.downSampleRatio;t=Math.ceil(n*t),e=Math.ceil(n*(this.height-e)),this._frameBuffer.bind(r);var i=new Uint8Array(4),a=r.gl;if(a.readPixels(t,e,1,1,a.RGBA,a.UNSIGNED_BYTE,i),this._frameBuffer.unbind(r),255===i[3]){var o=pt(i[0],i[1],i[2]);if(o){return this._lookupTable[o-this.lookupOffset]}}},_restoreMaterial:function(){for(var t=0;t<this._lookupTable.length;t++)this._lookupTable[t].material=this._meshMaterials[t]},dispose:function(t){this._frameBuffer.dispose(t),this._shader.dispose(t)}}),ta=Bt.vec3,ea=Rt.extend({scene:null,camera:null,renderer:null},function(){this._ray=new He,this._ndc=new Gt},{pick:function(t,e,r){return this.pickAll(t,e,[],r)[0]||null},pickAll:function(t,e,r,n){return this.renderer.screenToNDC(t,e,this._ndc),this.camera.castRay(this._ndc,this._ray),r=r||[],this._intersectNode(this.scene,r,n||!1),r.sort(this._intersectionCompareFunc),r},_intersectNode:function(t,e,r){t instanceof Zr&&t.isRenderable()&&(t.ignorePicking&&!r||!(t.mode===je.TRIANGLES&&t.geometry.isUseIndices()||t.geometry.pickByRay||t.geometry.pick)||this._intersectRenderable(t,e));for(var n=0;n<t._children.length;n++)this._intersectNode(t._children[n],e,r)},_intersectRenderable:function(){var t=new ie,e=new ie,r=new ie,n=new He,i=new ge;return function(a,o){var s=a.isSkinnedMesh();n.copy(this._ray),ge.invert(i,a.worldTransform),s||n.applyTransform(i);var u=a.geometry;if(s||!u.boundingBox||n.intersectBoundingBox(u.boundingBox)){if(u.pick)return void u.pick(this._ndc.x,this._ndc.y,this.renderer,this.camera,a,o);if(u.pickByRay)return void u.pickByRay(n,a,o);var l,h,c=a.cullFace===je.BACK&&a.frontFace===je.CCW||a.cullFace===je.FRONT&&a.frontFace===je.CW,f=u.indices,d=u.attributes.position,_=u.attributes.weight,m=u.attributes.joint,p=[];if(d&&d.value&&f){if(s){h=a.skeleton.getSubSkinMatrices(a.__GUID__,a.joints);for(var v=0;v<a.joints.length;v++){p[v]=p[v]||[];for(var g=0;g<16;g++)p[v][g]=h[16*v+g]}var y=[],x=[],T=[],E=[],b=[],S=u.attributes.skinnedPosition;S&&S.value||(u.createAttribute("skinnedPosition","f",3),S=u.attributes.skinnedPosition,S.init(u.vertexCount));for(var v=0;v<u.vertexCount;v++){d.get(v,y),_.get(v,x),m.get(v,T),x[3]=1-x[0]-x[1]-x[2],ta.set(E,0,0,0);for(var g=0;g<4;g++)T[g]>=0&&x[g]>1e-4&&(ta.transformMat4(b,y,p[T[g]]),ta.scaleAndAdd(E,E,b,x[g]));S.set(v,E)}}for(var v=0;v<f.length;v+=3){var A=f[v],N=f[v+1],M=f[v+2],w=s?u.attributes.skinnedPosition:d;if(w.get(A,t._array),w.get(N,e._array),w.get(M,r._array),l=c?n.intersectTriangle(t,e,r,a.culling):n.intersectTriangle(t,r,e,a.culling)){var R=new ie;s?ie.copy(R,l):ie.transformMat4(R,l,a.worldTransform),o.push(new ea.Intersection(l,R,a,[A,N,M],v/3,ie.dist(R,this._ray.origin)))}}}}}}(),_intersectionCompareFunc:function(t,e){return t.distance-e.distance}});ea.Intersection=function(t,e,r,n,i,a){this.point=t,this.pointWorld=e,this.target=r,this.triangle=n,this.triangleIndex=i,this.distance=a};var ra=Rt.extend(function(){return{target:null,domElement:null,sensitivity:1,speed:.4,up:new ie(0,1,0),verticalMoveLock:!1,animation:null,_moveForward:!1,_moveBackward:!1,_moveLeft:!1,_moveRight:!1,_offsetPitch:0,_offsetRoll:0}},function(){this._lockChange=this._lockChange.bind(this),this._keyDown=this._keyDown.bind(this),this._keyUp=this._keyUp.bind(this),this._mouseMove=this._mouseMove.bind(this),this.domElement&&this.enable()},{enable:function(){this.domElement.addEventListener("click",this._requestPointerLock),document.addEventListener("pointerlockchange",this._lockChange),document.addEventListener("mozpointerlockchange",this._lockChange),document.addEventListener("webkitpointerlockchange",this._lockChange),document.addEventListener("keydown",this._keyDown),document.addEventListener("keyup",this._keyUp),this.animation&&this.animation.on("frame",this._detectMovementChange,this)},disable:function(){this.target.off("beforeupdate",this._beforeUpdateCamera);var t=this.domElement;t.exitPointerLock=t.exitPointerLock||t.mozExitPointerLock||t.webkitExitPointerLock,t.exitPointerLock&&t.exitPointerLock(),this.domElement.removeEventListener("click",this._requestPointerLock),document.removeEventListener("pointerlockchange",this._lockChange),document.removeEventListener("mozpointerlockchange",this._lockChange),document.removeEventListener("webkitpointerlockchange",this._lockChange),document.removeEventListener("keydown",this._keyDown),document.removeEventListener("keyup",this._keyUp),this.animation&&this.animation.off("frame",this._detectMovementChange)},_requestPointerLock:function(){var t=this;t.requestPointerLock=t.requestPointerLock||t.mozRequestPointerLock||t.webkitRequestPointerLock,t.requestPointerLock()},update:function(t){
var e=this.target,r=this.target.position,n=e.localTransform.x.normalize(),i=e.localTransform.z.normalize();this.verticalMoveLock&&(i.y=0,i.normalize());var a=this.speed*t/20;this._moveForward&&r.scaleAndAdd(i,-a),this._moveBackward&&r.scaleAndAdd(i,a),this._moveLeft&&r.scaleAndAdd(n,-a/2),this._moveRight&&r.scaleAndAdd(n,a/2),e.rotateAround(e.position,this.up,-this._offsetPitch*t*Math.PI/360);var n=e.localTransform.x;e.rotateAround(e.position,n,-this._offsetRoll*t*Math.PI/360),this._offsetRoll=this._offsetPitch=0},_lockChange:function(){document.pointerLockElement===this.domElement||document.mozPointerLockElement===this.domElement||document.webkitPointerLockElement===this.domElement?document.addEventListener("mousemove",this._mouseMove,!1):document.removeEventListener("mousemove",this._mouseMove)},_mouseMove:function(t){var e=t.movementX||t.mozMovementX||t.webkitMovementX||0,r=t.movementY||t.mozMovementY||t.webkitMovementY||0;this._offsetPitch+=e*this.sensitivity/200,this._offsetRoll+=r*this.sensitivity/200,this.trigger("change")},_detectMovementChange:function(){(this._moveForward||this._moveBackward||this._moveLeft||this._moveRight)&&this.trigger("change")},_keyDown:function(t){switch(t.keyCode){case 87:case 37:this._moveForward=!0;break;case 83:case 40:this._moveBackward=!0;break;case 65:case 37:this._moveLeft=!0;break;case 68:case 39:this._moveRight=!0}this.trigger("change")},_keyUp:function(t){switch(t.keyCode){case 87:case 37:this._moveForward=!1;break;case 83:case 40:this._moveBackward=!1;break;case 65:case 37:this._moveLeft=!1;break;case 68:case 39:this._moveRight=!1}}}),na=function(){this._track=[]};na.prototype={constructor:na,recognize:function(t,e,r){return this._doTrack(t,e,r),this._recognize(t)},clear:function(){return this._track.length=0,this},_doTrack:function(t,e,r){var n=t.targetTouches;if(n){for(var i={points:[],touches:[],target:e,event:t},a=0,o=n.length;a<o;a++){var s=n[a];i.points.push([s.clientX,s.clientY]),i.touches.push(s)}this._track.push(i)}},_recognize:function(t){for(var e in ia)if(ia.hasOwnProperty(e)){var r=ia[e](this._track,t);if(r)return r}}};var ia={pinch:function(t,e){var r=t.length;if(r){var n=(t[r-1]||{}).points,i=(t[r-2]||{}).points||n;if(i&&i.length>1&&n&&n.length>1){var a=vt(n)/vt(i);!isFinite(a)&&(a=1),e.pinchScale=a;var o=gt(n);return e.pinchX=o[0],e.pinchY=o[1],{type:"pinch",target:t[0].target,event:e}}}}},aa=[[0,0],[0,1],[1,1],[1,0]],oa=[0,1,2,2,3,0],sa=Jr.extend({camera:null,plane:null,maxGrid:0,frustumCulling:!1},function(){var t=this.geometry=new Mr({dynamic:!0});t.attributes.position.init(6),t.attributes.normal.init(6),t.attributes.texcoord0.init(6),t.indices=new Uint16Array(6),this.plane=new Le},{updateGeometry:function(){var t=this._unProjectGrid();if(t){for(var e=this.geometry.attributes.position,r=this.geometry.attributes.normal,n=this.geometry.attributes.texcoord0,i=this.geometry.indices,a=0;a<6;a++){var o=oa[a];e.set(a,t[o]._array),r.set(a,this.plane.normal._array),n.set(a,aa[o]),i[a]=a}this.geometry.dirty()}},_unProjectGrid:function(){for(var t=new Le,e=[0,1,0,2,1,3,2,3,4,5,4,6,5,7,6,7,0,4,1,5,2,6,3,7],r=new ie,n=new ie,i=[],a=[],o=0;o<4;o++)a[o]=new ie(0,0);var s=new He;return function(){t.copy(this.plane),t.applyTransform(this.camera.viewMatrix);for(var o=this.camera.frustum.vertices,u=0,l=0;l<12;l++){r._array=o[e[2*l]],n._array=o[e[2*l+1]];var h=t.intersectLine(r,n,i[u]);h&&(i[u]||(i[u]=h),u++)}if(0!==u){for(var l=0;l<u;l++)i[l].applyProjection(this.camera.projectionMatrix);for(var c=i[0]._array[0],f=i[0]._array[1],d=i[0]._array[0],_=i[0]._array[1],l=1;l<u;l++)d=Math.max(d,i[l]._array[0]),_=Math.max(_,i[l]._array[1]),c=Math.min(c,i[l]._array[0]),f=Math.min(f,i[l]._array[1]);if(c!=d&&f!=_){a[0]._array[0]=c,a[0]._array[1]=f,a[1]._array[0]=c,a[1]._array[1]=_,a[2]._array[0]=d,a[2]._array[1]=_,a[3]._array[0]=d,a[3]._array[1]=f;for(var l=0;l<4;l++)this.camera.castRay(a[l],s),s.intersectPlane(this.plane,a[l]);return a}}}}()}),ua=Rt.extend(function(){return{animation:null,domElement:null,target:null,_center:new ie,minDistance:.1,maxDistance:1e3,minAlpha:-90,maxAlpha:90,minBeta:-1/0,maxBeta:1/0,autoRotateAfterStill:0,autoRotateDirection:"cw",autoRotateSpeed:60,_mode:"rotate",damping:.8,rotateSensitivity:1,zoomSensitivity:1,panSensitivity:1,_needsUpdate:!1,_rotating:!1,_phi:0,_theta:0,_mouseX:0,_mouseY:0,_rotateVelocity:new Gt,_panVelocity:new Gt,_distance:20,_zoomSpeed:0,_stillTimeout:0,_animators:[],_gestureMgr:new na}},function(){this._mouseDownHandler=this._mouseDownHandler.bind(this),this._mouseWheelHandler=this._mouseWheelHandler.bind(this),this._mouseMoveHandler=this._mouseMoveHandler.bind(this),this._mouseUpHandler=this._mouseUpHandler.bind(this),this._pinchHandler=this._pinchHandler.bind(this),this.update=this.update.bind(this),this.init()},{init:function(){var t=this.domElement;t.addEventListener("touchstart",this._mouseDownHandler),t.addEventListener("mousedown",this._mouseDownHandler),t.addEventListener("mousewheel",this._mouseWheelHandler),this.animation&&this.animation.on("frame",this.update)},dispose:function(){var t=this.domElement;t.removeEventListener("touchstart",this._mouseDownHandler),t.removeEventListener("touchmove",this._mouseMoveHandler),t.removeEventListener("touchend",this._mouseUpHandler),t.removeEventListener("mousedown",this._mouseDownHandler),t.removeEventListener("mousemove",this._mouseMoveHandler),t.removeEventListener("mouseup",this._mouseUpHandler),t.removeEventListener("mousewheel",this._mouseWheelHandler),this.animation&&this.animation.off("frame",this.update),this.stopAllAnimation()},getDistance:function(){return this._distance},setDistance:function(t){this._distance=t,this._needsUpdate=!0},getAlpha:function(){return this._theta/Math.PI*180},getBeta:function(){return-this._phi/Math.PI*180},getCenter:function(){return this._center.toArray()},setAlpha:function(t){t=Math.max(Math.min(this.maxAlpha,t),this.minAlpha),this._theta=t/180*Math.PI,this._needsUpdate=!0},setBeta:function(t){t=Math.max(Math.min(this.maxBeta,t),this.minBeta),this._phi=-t/180*Math.PI,this._needsUpdate=!0},setCenter:function(t){this._center.setArray(t)},setOption:function(t){t=t||{},["autoRotate","autoRotateAfterStill","autoRotateDirection","autoRotateSpeed","damping","minDistance","maxDistance","minAlpha","maxAlpha","minBeta","maxBeta","rotateSensitivity","zoomSensitivity","panSensitivity"].forEach(function(e){null!=t[e]&&(this[e]=t[e])},this),null!=t.distance&&this.setDistance(t.distance),null!=t.alpha&&this.setAlpha(t.alpha),null!=t.beta&&this.setBeta(t.beta),t.center&&this.setCenter(t.center)},animateTo:function(t){var e=this,r={},n={},i=this.animation;if(i)return null!=t.distance&&(r.distance=this.getDistance(),n.distance=t.distance),null!=t.alpha&&(r.alpha=this.getAlpha(),n.alpha=t.alpha),null!=t.beta&&(r.beta=this.getBeta(),n.beta=t.beta),null!=t.center&&(r.center=this.getCenter(),n.center=t.center),this._addAnimator(i.animate(r).when(t.duration||1e3,n).during(function(){null!=r.alpha&&e.setAlpha(r.alpha),null!=r.beta&&e.setBeta(r.beta),null!=r.distance&&e.setDistance(r.distance),null!=r.center&&e.setCenter(r.center),e._needsUpdate=!0}).done(t.done)).start(t.easing||"linear")},stopAllAnimation:function(){for(var t=0;t<this._animators.length;t++)this._animators[t].stop();this._animators.length=0},_isAnimating:function(){return this._animators.length>0},update:function(t){if(t=t||16,this._rotating){var e=("cw"===this.autoRotateDirection?1:-1)*this.autoRotateSpeed/180*Math.PI;this._phi-=e*t/1e3,this._needsUpdate=!0}else this._rotateVelocity.len()>0&&(this._needsUpdate=!0);(Math.abs(this._zoomSpeed)>.01||this._panVelocity.len()>0)&&(this._needsUpdate=!0),this._needsUpdate&&(this._updateDistance(Math.min(t,50)),this._updatePan(Math.min(t,50)),this._updateRotate(Math.min(t,50)),this._updateTransform(),this.target.update(),this.trigger("update"),this._needsUpdate=!1)},_updateRotate:function(t){var e=this._rotateVelocity;this._phi=e.y*t/20+this._phi,this._theta=e.x*t/20+this._theta,this.setAlpha(this.getAlpha()),this.setBeta(this.getBeta()),this._vectorDamping(e,this.damping)},_updateDistance:function(t){this._setDistance(this._distance+this._zoomSpeed*t/20),this._zoomSpeed*=this.damping},_setDistance:function(t){this._distance=Math.max(Math.min(t,this.maxDistance),this.minDistance)},_updatePan:function(t){var e=this._panVelocity,r=this._distance,n=this.target,i=n.worldTransform.y,a=n.worldTransform.x;this._center.scaleAndAdd(a,-e.x*r/200).scaleAndAdd(i,-e.y*r/200),this._vectorDamping(e,0)},_updateTransform:function(){var t=this.target,e=new ie,r=this._theta+Math.PI/2,n=this._phi+Math.PI/2,i=Math.sin(r);e.x=i*Math.cos(n),e.y=-Math.cos(r),e.z=i*Math.sin(n),t.position.copy(this._center).scaleAndAdd(e,this._distance),t.rotation.identity().rotateY(-this._phi).rotateX(-this._theta)},_startCountingStill:function(){clearTimeout(this._stillTimeout);var t=this.autoRotateAfterStill,e=this;!isNaN(t)&&t>0&&(this._stillTimeout=setTimeout(function(){e._rotating=!0},1e3*t))},_vectorDamping:function(t,e){var r=t.len();r*=e,r<1e-4&&(r=0),t.normalize().scale(r)},decomposeTransform:function(){if(this.target){var t=new ie;t.eulerFromQuat(this.target.rotation.normalize(),"ZYX"),this._theta=-t.x,this._phi=-t.y,this.setBeta(this.getBeta()),this.setAlpha(this.getAlpha()),this._setDistance(this.target.position.dist(this._center))}},_mouseDownHandler:function(t){if(!this._isAnimating()){var e=t.clientX,r=t.clientY;if(t.targetTouches){var n=t.targetTouches[0];e=n.clientX,r=n.clientY,this._mode="rotate",this._processGesture(t,"start")}var i=this.domElement;i.addEventListener("touchmove",this._mouseMoveHandler),i.addEventListener("touchend",this._mouseUpHandler),i.addEventListener("mousemove",this._mouseMoveHandler),i.addEventListener("mouseup",this._mouseUpHandler),0===t.button?this._mode="rotate":1===t.button&&(this._mode="pan"),this._rotateVelocity.set(0,0),this._rotating=!1,this.autoRotate&&this._startCountingStill(),this._mouseX=e,this._mouseY=r}},_mouseMoveHandler:function(t){if(!this._isAnimating()){var e,r=t.clientX,n=t.clientY;if(t.targetTouches){var i=t.targetTouches[0];r=i.clientX,n=i.clientY,e=this._processGesture(t,"change")}var a=yt(this.panSensitivity),o=yt(this.rotateSensitivity);e||("rotate"===this._mode?(this._rotateVelocity.y=(r-this._mouseX)/this.domElement.clientHeight*2*o[0],this._rotateVelocity.x=(n-this._mouseY)/this.domElement.clientWidth*2*o[1]):"pan"===this._mode&&(this._panVelocity.x=(r-this._mouseX)/this.domElement.clientWidth*a[0]*400,this._panVelocity.y=(-n+this._mouseY)/this.domElement.clientHeight*a[1]*400)),this._mouseX=r,this._mouseY=n,t.preventDefault()}},_mouseWheelHandler:function(t){if(!this._isAnimating()){var e=t.wheelDelta||-t.detail;0!==e&&this._zoomHandler(t,e>0?-1:1)}},_pinchHandler:function(t){this._isAnimating()||this._zoomHandler(t,t.pinchScale>1?-.4:.4)},_zoomHandler:function(t,e){var r=Math.max(Math.min(this._distance-this.minDistance,this.maxDistance-this._distance));this._zoomSpeed=e*Math.max(r/40*this.zoomSensitivity,.2),this._rotating=!1,this.autoRotate&&"rotate"===this._mode&&this._startCountingStill(),t.preventDefault()},_mouseUpHandler:function(t){var e=this.domElement;e.removeEventListener("touchmove",this._mouseMoveHandler),e.removeEventListener("touchend",this._mouseUpHandler),e.removeEventListener("mousemove",this._mouseMoveHandler),e.removeEventListener("mouseup",this._mouseUpHandler),this._processGesture(t,"end")},_addAnimator:function(t){var e=this._animators;return e.push(t),t.done(function(){var r=e.indexOf(t);r>=0&&e.splice(r,1)}),t},_processGesture:function(t,e){var r=this._gestureMgr;"start"===e&&r.clear();var n=r.recognize(t,null,this.domElement);if("end"===e&&r.clear(),n){var i=n.type;t.gestureEvent=i,this._pinchHandler(n.event)}return n}});Object.defineProperty(ua.prototype,"autoRotate",{get:function(){return this._autoRotate},set:function(t){this._autoRotate=t,this._rotating=t}}),Object.defineProperty(ua.prototype,"target",{get:function(){return this._target},set:function(t){t&&t.target&&this.setCenter(t.target.toArray()),this._target=t,this.decomposeTransform()}});var la=Rt.extend(function(){console.warn("TODO")},{render:function(t,e,r){}}),ha=Bt.mat4,ca=["px","nx","py","ny","pz","nz"];Wr.import("@export qtek.sm.depth.vertex\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\nattribute vec3 position : POSITION;\n#ifdef SHADOW_TRANSPARENT\nattribute vec2 texcoord : TEXCOORD_0;\n#endif\n@import qtek.chunk.skinning_header\nvarying vec4 v_ViewPosition;\n#ifdef SHADOW_TRANSPARENT\nvarying vec2 v_Texcoord;\n#endif\nvoid main(){\n    vec3 skinnedPosition = position;\n#ifdef SKINNING\n    @import qtek.chunk.skin_matrix\n    skinnedPosition = (skinMatrixWS * vec4(position, 1.0)).xyz;\n#endif\n    v_ViewPosition = worldViewProjection * vec4(skinnedPosition, 1.0);\n    gl_Position = v_ViewPosition;\n#ifdef SHADOW_TRANSPARENT\n    v_Texcoord = texcoord;\n#endif\n}\n@end\n@export qtek.sm.depth.fragment\nvarying vec4 v_ViewPosition;\n#ifdef SHADOW_TRANSPARENT\nvarying vec2 v_Texcoord;\n#endif\nuniform float bias : 0.001;\nuniform float slopeScale : 1.0;\n#ifdef SHADOW_TRANSPARENT\nuniform sampler2D transparentMap;\n#endif\n@import qtek.util.encode_float\nvoid main(){\n    float depth = v_ViewPosition.z / v_ViewPosition.w;\n#ifdef USE_VSM\n    depth = depth * 0.5 + 0.5;\n    float moment1 = depth;\n    float moment2 = depth * depth;\n    float dx = dFdx(depth);\n    float dy = dFdy(depth);\n    moment2 += 0.25*(dx*dx+dy*dy);\n    gl_FragColor = vec4(moment1, moment2, 0.0, 1.0);\n#else\n    float dx = dFdx(depth);\n    float dy = dFdy(depth);\n    depth += sqrt(dx*dx + dy*dy) * slopeScale + bias;\n#ifdef SHADOW_TRANSPARENT\n    if (texture2D(transparentMap, v_Texcoord).a <= 0.1) {\n        gl_FragColor = encodeFloat(0.9999);\n        return;\n    }\n#endif\n    gl_FragColor = encodeFloat(depth * 0.5 + 0.5);\n#endif\n}\n@end\n@export qtek.sm.debug_depth\nuniform sampler2D depthMap;\nvarying vec2 v_Texcoord;\n@import qtek.util.decode_float\nvoid main() {\n    vec4 tex = texture2D(depthMap, v_Texcoord);\n#ifdef USE_VSM\n    gl_FragColor = vec4(tex.rgb, 1.0);\n#else\n    float depth = decodeFloat(tex);\n    gl_FragColor = vec4(depth, depth, depth, 1.0);\n#endif\n}\n@end\n@export qtek.sm.distance.vertex\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\nuniform mat4 world : WORLD;\nattribute vec3 position : POSITION;\n@import qtek.chunk.skinning_header\nvarying vec3 v_WorldPosition;\nvoid main (){\n    vec3 skinnedPosition = position;\n#ifdef SKINNING\n    @import qtek.chunk.skin_matrix\n    skinnedPosition = (skinMatrixWS * vec4(position, 1.0)).xyz;\n#endif\n    gl_Position = worldViewProjection * vec4(skinnedPosition , 1.0);\n    v_WorldPosition = (world * vec4(skinnedPosition, 1.0)).xyz;\n}\n@end\n@export qtek.sm.distance.fragment\nuniform vec3 lightPosition;\nuniform float range : 100;\nvarying vec3 v_WorldPosition;\n@import qtek.util.encode_float\nvoid main(){\n    float dist = distance(lightPosition, v_WorldPosition);\n#ifdef USE_VSM\n    gl_FragColor = vec4(dist, dist * dist, 0.0, 0.0);\n#else\n    dist = dist / range;\n    gl_FragColor = encodeFloat(dist);\n#endif\n}\n@end\n@export qtek.plugin.shadow_map_common\n@import qtek.util.decode_float\nfloat tapShadowMap(sampler2D map, vec2 uv, float z){\n    vec4 tex = texture2D(map, uv);\n    return step(z, decodeFloat(tex) * 2.0 - 1.0);\n}\nfloat pcf(sampler2D map, vec2 uv, float z, float textureSize, vec2 scale) {\n    float shadowContrib = tapShadowMap(map, uv, z);\n    vec2 offset = vec2(1.0 / textureSize) * scale;\n#ifdef PCF_KERNEL_SIZE\n    for (int _idx_ = 0; _idx_ < PCF_KERNEL_SIZE; _idx_++) {{\n        shadowContrib += tapShadowMap(map, uv + offset * pcfKernel[_idx_], z);\n    }}\n    return shadowContrib / float(PCF_KERNEL_SIZE + 1);\n#else\n    shadowContrib += tapShadowMap(map, uv+vec2(offset.x, 0.0), z);\n    shadowContrib += tapShadowMap(map, uv+vec2(offset.x, offset.y), z);\n    shadowContrib += tapShadowMap(map, uv+vec2(-offset.x, offset.y), z);\n    shadowContrib += tapShadowMap(map, uv+vec2(0.0, offset.y), z);\n    shadowContrib += tapShadowMap(map, uv+vec2(-offset.x, 0.0), z);\n    shadowContrib += tapShadowMap(map, uv+vec2(-offset.x, -offset.y), z);\n    shadowContrib += tapShadowMap(map, uv+vec2(offset.x, -offset.y), z);\n    shadowContrib += tapShadowMap(map, uv+vec2(0.0, -offset.y), z);\n    return shadowContrib / 9.0;\n#endif\n}\nfloat pcf(sampler2D map, vec2 uv, float z, float textureSize) {\n    return pcf(map, uv, z, textureSize, vec2(1.0));\n}\nfloat chebyshevUpperBound(vec2 moments, float z){\n    float p = 0.0;\n    z = z * 0.5 + 0.5;\n    if (z <= moments.x) {\n        p = 1.0;\n    }\n    float variance = moments.y - moments.x * moments.x;\n    variance = max(variance, 0.0000001);\n    float mD = moments.x - z;\n    float pMax = variance / (variance + mD * mD);\n    pMax = clamp((pMax-0.4)/(1.0-0.4), 0.0, 1.0);\n    return max(p, pMax);\n}\nfloat computeShadowContrib(\n    sampler2D map, mat4 lightVPM, vec3 position, float textureSize, vec2 scale, vec2 offset\n) {\n    vec4 posInLightSpace = lightVPM * vec4(position, 1.0);\n    posInLightSpace.xyz /= posInLightSpace.w;\n    float z = posInLightSpace.z;\n    if(all(greaterThan(posInLightSpace.xyz, vec3(-0.99, -0.99, -1.0))) &&\n        all(lessThan(posInLightSpace.xyz, vec3(0.99, 0.99, 1.0)))){\n        vec2 uv = (posInLightSpace.xy+1.0) / 2.0;\n        #ifdef USE_VSM\n            vec2 moments = texture2D(map, uv * scale + offset).xy;\n            return chebyshevUpperBound(moments, z);\n        #else\n            return pcf(map, uv * scale + offset, z, textureSize, scale);\n        #endif\n    }\n    return 1.0;\n}\nfloat computeShadowContrib(sampler2D map, mat4 lightVPM, vec3 position, float textureSize) {\n    return computeShadowContrib(map, lightVPM, position, textureSize, vec2(1.0), vec2(0.0));\n}\nfloat computeShadowContribOmni(samplerCube map, vec3 direction, float range)\n{\n    float dist = length(direction);\n    vec4 shadowTex = textureCube(map, direction);\n#ifdef USE_VSM\n    vec2 moments = shadowTex.xy;\n    float variance = moments.y - moments.x * moments.x;\n    float mD = moments.x - dist;\n    float p = variance / (variance + mD * mD);\n    if(moments.x + 0.001 < dist){\n        return clamp(p, 0.0, 1.0);\n    }else{\n        return 1.0;\n    }\n#else\n    return step(dist, (decodeFloat(shadowTex) + 0.0002) * range);\n#endif\n}\n@end\n@export qtek.plugin.compute_shadow_map\n#if defined(SPOT_LIGHT_SHADOWMAP_COUNT) || defined(DIRECTIONAL_LIGHT_SHADOWMAP_COUNT) || defined(POINT_LIGHT_SHADOWMAP_COUNT)\n#ifdef SPOT_LIGHT_SHADOWMAP_COUNT\nuniform sampler2D spotLightShadowMaps[SPOT_LIGHT_SHADOWMAP_COUNT];\nuniform mat4 spotLightMatrices[SPOT_LIGHT_SHADOWMAP_COUNT];\nuniform float spotLightShadowMapSizes[SPOT_LIGHT_SHADOWMAP_COUNT];\n#endif\n#ifdef DIRECTIONAL_LIGHT_SHADOWMAP_COUNT\n#if defined(SHADOW_CASCADE)\nuniform sampler2D directionalLightShadowMaps[1];\nuniform mat4 directionalLightMatrices[SHADOW_CASCADE];\nuniform float directionalLightShadowMapSizes[1];\nuniform float shadowCascadeClipsNear[SHADOW_CASCADE];\nuniform float shadowCascadeClipsFar[SHADOW_CASCADE];\n#else\nuniform sampler2D directionalLightShadowMaps[DIRECTIONAL_LIGHT_SHADOWMAP_COUNT];\nuniform mat4 directionalLightMatrices[DIRECTIONAL_LIGHT_SHADOWMAP_COUNT];\nuniform float directionalLightShadowMapSizes[DIRECTIONAL_LIGHT_SHADOWMAP_COUNT];\n#endif\n#endif\n#ifdef POINT_LIGHT_SHADOWMAP_COUNT\nuniform samplerCube pointLightShadowMaps[POINT_LIGHT_SHADOWMAP_COUNT];\nuniform float pointLightShadowMapSizes[POINT_LIGHT_SHADOWMAP_COUNT];\n#endif\nuniform bool shadowEnabled : true;\n#ifdef PCF_KERNEL_SIZE\nuniform vec2 pcfKernel[PCF_KERNEL_SIZE];\n#endif\n@import qtek.plugin.shadow_map_common\n#if defined(SPOT_LIGHT_SHADOWMAP_COUNT)\nvoid computeShadowOfSpotLights(vec3 position, inout float shadowContribs[SPOT_LIGHT_COUNT] ) {\n    float shadowContrib;\n    for(int _idx_ = 0; _idx_ < SPOT_LIGHT_SHADOWMAP_COUNT; _idx_++) {{\n        shadowContrib = computeShadowContrib(\n            spotLightShadowMaps[_idx_], spotLightMatrices[_idx_], position,\n            spotLightShadowMapSizes[_idx_]\n        );\n        shadowContribs[_idx_] = shadowContrib;\n    }}\n    for(int _idx_ = SPOT_LIGHT_SHADOWMAP_COUNT; _idx_ < SPOT_LIGHT_COUNT; _idx_++){{\n        shadowContribs[_idx_] = 1.0;\n    }}\n}\n#endif\n#if defined(DIRECTIONAL_LIGHT_SHADOWMAP_COUNT)\n#ifdef SHADOW_CASCADE\nvoid computeShadowOfDirectionalLights(vec3 position, inout float shadowContribs[DIRECTIONAL_LIGHT_COUNT]){\n    float depth = (2.0 * gl_FragCoord.z - gl_DepthRange.near - gl_DepthRange.far)\n                    / (gl_DepthRange.far - gl_DepthRange.near);\n    float shadowContrib;\n    shadowContribs[0] = 1.0;\n    for (int _idx_ = 0; _idx_ < SHADOW_CASCADE; _idx_++) {{\n        if (\n            depth >= shadowCascadeClipsNear[_idx_] &&\n            depth <= shadowCascadeClipsFar[_idx_]\n        ) {\n            shadowContrib = computeShadowContrib(\n                directionalLightShadowMaps[0], directionalLightMatrices[_idx_], position,\n                directionalLightShadowMapSizes[0],\n                vec2(1.0 / float(SHADOW_CASCADE), 1.0),\n                vec2(float(_idx_) / float(SHADOW_CASCADE), 0.0)\n            );\n            shadowContribs[0] = shadowContrib;\n        }\n    }}\n    for(int _idx_ = DIRECTIONAL_LIGHT_SHADOWMAP_COUNT; _idx_ < DIRECTIONAL_LIGHT_COUNT; _idx_++) {{\n        shadowContribs[_idx_] = 1.0;\n    }}\n}\n#else\nvoid computeShadowOfDirectionalLights(vec3 position, inout float shadowContribs[DIRECTIONAL_LIGHT_COUNT]){\n    float shadowContrib;\n    for(int _idx_ = 0; _idx_ < DIRECTIONAL_LIGHT_SHADOWMAP_COUNT; _idx_++) {{\n        shadowContrib = computeShadowContrib(\n            directionalLightShadowMaps[_idx_], directionalLightMatrices[_idx_], position,\n            directionalLightShadowMapSizes[_idx_]\n        );\n        shadowContribs[_idx_] = shadowContrib;\n    }}\n    for(int _idx_ = DIRECTIONAL_LIGHT_SHADOWMAP_COUNT; _idx_ < DIRECTIONAL_LIGHT_COUNT; _idx_++) {{\n        shadowContribs[_idx_] = 1.0;\n    }}\n}\n#endif\n#endif\n#if defined(POINT_LIGHT_SHADOWMAP_COUNT)\nvoid computeShadowOfPointLights(vec3 position, inout float shadowContribs[POINT_LIGHT_COUNT] ){\n    vec3 lightPosition;\n    vec3 direction;\n    for(int _idx_ = 0; _idx_ < POINT_LIGHT_SHADOWMAP_COUNT; _idx_++) {{\n        lightPosition = pointLightPosition[_idx_];\n        direction = position - lightPosition;\n        shadowContribs[_idx_] = computeShadowContribOmni(pointLightShadowMaps[_idx_], direction, pointLightRange[_idx_]);\n    }}\n    for(int _idx_ = POINT_LIGHT_SHADOWMAP_COUNT; _idx_ < POINT_LIGHT_COUNT; _idx_++) {{\n        shadowContribs[_idx_] = 1.0;\n    }}\n}\n#endif\n#endif\n@end");var fa=Rt.extend(function(){return{softShadow:fa.PCF,shadowBlur:1,lightFrustumBias:"auto",kernelPCF:new Float32Array([1,0,1,1,-1,1,0,1,-1,0,-1,-1,1,-1,0,-1]),precision:"mediump",_lastRenderNotCastShadow:!1,_frameBuffer:new vr,_textures:{},_shadowMapNumber:{POINT_LIGHT:0,DIRECTIONAL_LIGHT:0,SPOT_LIGHT:0},_meshMaterials:{},_depthMaterials:{},_depthShaders:{},_distanceMaterials:{},_opaqueCasters:[],_receivers:[],_lightsCastShadow:[],_lightCameras:{},_texturePool:new sr}},function(){this._gaussianPassH=new rn({fragment:Wr.source("qtek.compositor.gaussian_blur")}),this._gaussianPassV=new rn({fragment:Wr.source("qtek.compositor.gaussian_blur")}),this._gaussianPassH.setUniform("blurSize",this.shadowBlur),this._gaussianPassH.setUniform("blurDir",0),this._gaussianPassV.setUniform("blurSize",this.shadowBlur),this._gaussianPassV.setUniform("blurDir",1),this._outputDepthPass=new rn({fragment:Wr.source("qtek.sm.debug_depth")})},{render:function(t,e,r,n){this.trigger("beforerender",this,t,e,r),this._renderShadowPass(t,e,r,n),this.trigger("afterrender",this,t,e,r)},renderDebug:function(t,e){t.saveClear();var r=t.viewport,n=0,i=e||r.width/4,a=i;this.softShadow===fa.VSM?this._outputDepthPass.material.shader.define("fragment","USE_VSM"):this._outputDepthPass.material.shader.undefine("fragment","USE_VSM");for(var o in this._textures){var s=this._textures[o];t.setViewport(n,0,i*s.width/s.height,a),this._outputDepthPass.setUniform("depthMap",s),this._outputDepthPass.render(t),n+=i*s.width/s.height}t.setViewport(r),t.restoreClear()},_bindDepthMaterial:function(t,e,r){for(var n=0;n<t.length;n++){var i,a,o=t[n],s=o.material.shadowTransparentMap instanceof or,u=o.material.shadowTransparentMap,l=o.joints&&o.joints.length;s?(i=l+"-"+u.__GUID__,a=l+"-t"):(i=l,a=l),o.useSkinMatricesTexture&&(i+="-s",a+="-s");var h=o.shadowDepthMaterial||this._depthMaterials[i],c=o.shadowDepthMaterial?o.shadowDepthMaterial.shader:this._depthShaders[a];o.material!==h&&(c||(c=new Wr({vertex:Wr.source("qtek.sm.depth.vertex"),fragment:Wr.source("qtek.sm.depth.fragment"),precision:this.precision}),l>0&&(c.define("vertex","SKINNING"),c.define("vertex","JOINT_COUNT",l)),s&&c.define("both","SHADOW_TRANSPARENT"),o.useSkinMatricesTexture&&c.define("vertex","USE_SKIN_MATRICES_TEXTURE"),this._depthShaders[a]=c),h||(h=new Xr({shader:c}),this._depthMaterials[i]=h),o.material=h,this.softShadow===fa.VSM?c.define("fragment","USE_VSM"):c.undefine("fragment","USE_VSM"),h.setUniform("bias",e),h.setUniform("slopeScale",r),s&&h.set("shadowTransparentMap",u))}},_bindDistanceMaterial:function(t,e){for(var r=e.getWorldPosition()._array,n=0;n<t.length;n++){var i=t[n],a=i.joints&&i.joints.length,o=this._distanceMaterials[a];i.material!==o&&(o||(o=new Xr({shader:new Wr({vertex:Wr.source("qtek.sm.distance.vertex"),fragment:Wr.source("qtek.sm.distance.fragment"),precision:this.precision})}),a>0&&(o.shader.define("vertex","SKINNING"),o.shader.define("vertex","JOINT_COUNT",a)),this._distanceMaterials[a]=o),i.material=o,this.softShadow===fa.VSM?o.shader.define("fragment","USE_VSM"):o.shader.undefine("fragment","USE_VSM")),o.set("lightPosition",r),o.set("range",e.range)}},saveMaterial:function(t){for(var e=0;e<t.length;e++){var r=t[e];this._meshMaterials[r.__GUID__]=r.material}},restoreMaterial:function(t){for(var e=0;e<t.length;e++){var r=t[e],n=this._meshMaterials[r.__GUID__];n&&(r.material=n)}},_updateCasterAndReceiver:function(t,e){e.castShadow&&this._opaqueCasters.push(e),e.receiveShadow?(this._receivers.push(e),e.material.set("shadowEnabled",1),e.material.set("pcfKernel",this.kernelPCF)):e.material.set("shadowEnabled",0),!e.material.shader&&e.material.updateShader&&e.material.updateShader(t);var r=e.material.shader;if(this.softShadow===fa.VSM)r.define("fragment","USE_VSM"),r.undefine("fragment","PCF_KERNEL_SIZE");else{r.undefine("fragment","USE_VSM");var n=this.kernelPCF;n&&n.length?r.define("fragment","PCF_KERNEL_SIZE",n.length/2):r.undefine("fragment","PCF_KERNEL_SIZE")}},_update:function(t,e){for(var r=0;r<e.opaqueQueue.length;r++)this._updateCasterAndReceiver(t,e.opaqueQueue[r]);for(var r=0;r<e.transparentQueue.length;r++)this._updateCasterAndReceiver(t,e.transparentQueue[r]);for(var r=0;r<e.lights.length;r++){var n=e.lights[r];n.castShadow&&this._lightsCastShadow.push(n)}},_renderShadowPass:function(t,e,r,n){function i(t){return t.height}for(var a in this._shadowMapNumber)this._shadowMapNumber[a]=0;this._lightsCastShadow.length=0,this._opaqueCasters.length=0,this._receivers.length=0;var o=t.gl;if(n||e.update(),r&&r.update(),this._update(t,e),this._lightsCastShadow.length||!this._lastRenderNotCastShadow){this._lastRenderNotCastShadow=0===this._lightsCastShadow,o.enable(o.DEPTH_TEST),o.depthMask(!0),o.disable(o.BLEND),o.clearColor(1,1,1,1);var s=[],u=[],l=[],h=[],c=[],f=[];this.saveMaterial(this._opaqueCasters);for(var d,_=0;_<this._lightsCastShadow.length;_++){var m=this._lightsCastShadow[_];if(m instanceof ni){if(d){console.warn("Only one dire light supported with shadow cascade");continue}if(m.shadowCascade>1&&(d=m,m.shadowCascade>4)){console.warn("Support at most 4 cascade");continue}this.renderDirectionalLightShadow(t,e,r,m,this._opaqueCasters,c,h,l)}else m instanceof oi?this.renderSpotLightShadow(t,m,this._opaqueCasters,u,s):m instanceof ii&&this.renderPointLightShadow(t,m,this._opaqueCasters,f);this._shadowMapNumber[m.type]++}this.restoreMaterial(this._opaqueCasters);var p=c.slice(),v=c.slice();p.pop(),v.shift(),p.reverse(),v.reverse(),h.reverse();for(var g=s.map(i),y=l.map(i),x={},_=0;_<this._receivers.length;_++){var T=this._receivers[_],E=T.material,b=E.shader;if(!x[b.__GUID__]){var S=!1;for(var A in this._shadowMapNumber){var N=this._shadowMapNumber[A],M=A+"_SHADOWMAP_COUNT";b.fragmentDefines[M]!==N&&(N>0?(b.fragmentDefines[M]=N,S=!0):b.isDefined("fragment",M)&&(b.undefine("fragment",M),S=!0))}S&&b.dirty(),d?b.define("fragment","SHADOW_CASCADE",d.shadowCascade):b.undefine("fragment","SHADOW_CASCADE"),x[b.__GUID__]=!0}s.length>0&&(E.setUniform("spotLightShadowMaps",s),E.setUniform("spotLightMatrices",u),E.setUniform("spotLightShadowMapSizes",g)),l.length>0&&(E.setUniform("directionalLightShadowMaps",l),d&&(E.setUniform("shadowCascadeClipsNear",p),E.setUniform("shadowCascadeClipsFar",v)),E.setUniform("directionalLightMatrices",h),E.setUniform("directionalLightShadowMapSizes",y)),f.length>0&&E.setUniform("pointLightShadowMaps",f)}}},renderDirectionalLightShadow:function(){var t=new Fe,e=new ge,r=new Se,n=new ge,i=new ge,a=new ge,o=new ge;return function(s,u,l,h,c,f,d,_){var m=h.shadowBias;if(this._bindDepthMaterial(c,m,h.shadowSlopeScale),c.sort(Tn.opaqueSortFunc),!u.viewBoundingBoxLastFrame.isFinite()){var p=u.getBoundingBox();u.viewBoundingBoxLastFrame.copy(p).applyTransform(l.viewMatrix)}var v=Math.min(-u.viewBoundingBoxLastFrame.min.z,l.far),g=Math.max(-u.viewBoundingBoxLastFrame.max.z,l.near),y=this._getDirectionalLightCamera(h,u,l),x=a._array;o.copy(y.projectionMatrix),ha.invert(i._array,y.worldTransform._array),ha.multiply(i._array,i._array,l.worldTransform._array),ha.multiply(x,o._array,i._array);for(var T=[],E=l instanceof ze,b=(l.near+l.far)/(l.near-l.far),S=2*l.near*l.far/(l.near-l.far),A=0;A<=h.shadowCascade;A++){var N=g*Math.pow(v/g,A/h.shadowCascade),M=g+(v-g)*A/h.shadowCascade,w=N*h.cascadeSplitLogFactor+M*(1-h.cascadeSplitLogFactor);T.push(w),f.push(-(-w*b+S)/-w)}var R=this._getTexture(h,h.shadowCascade);_.push(R);var C=s.viewport,L=s.gl;this._frameBuffer.attach(R),this._frameBuffer.bind(s),L.clear(L.COLOR_BUFFER_BIT|L.DEPTH_BUFFER_BIT);for(var A=0;A<h.shadowCascade;A++){var P=T[A],D=T[A+1];E?ha.perspective(e._array,l.fov/180*Math.PI,l.aspect,P,D):ha.ortho(e._array,l.left,l.right,l.bottom,l.top,P,D),t.setFromProjection(e),t.getTransformedBoundingBox(r,i),r.applyProjection(o);var I=r.min._array,O=r.max._array;I[0]=Math.max(I[0],-1),I[1]=Math.max(I[1],-1),O[0]=Math.min(O[0],1),O[1]=Math.min(O[1],1),n.ortho(I[0],O[0],I[1],O[1],1,-1),y.projectionMatrix.multiplyLeft(n);var k=h.shadowResolution||512;s.setViewport((h.shadowCascade-A-1)*k,0,k,k,1);for(var U in this._depthMaterials)this._depthMaterials[U].set("shadowBias",m);s.renderQueue(c,y),this.softShadow===fa.VSM&&this._gaussianFilter(s,R,R.width);var F=new ge;F.copy(y.viewMatrix).multiplyLeft(y.projectionMatrix),d.push(F._array),y.projectionMatrix.copy(o)}this._frameBuffer.unbind(s),s.setViewport(C)}}(),renderSpotLightShadow:function(t,e,r,n,i){this._bindDepthMaterial(r,e.shadowBias,e.shadowSlopeScale),r.sort(Tn.opaqueSortFunc);var a=this._getTexture(e),o=this._getSpotLightCamera(e),s=t.gl;this._frameBuffer.attach(a),this._frameBuffer.bind(t),s.clear(s.COLOR_BUFFER_BIT|s.DEPTH_BUFFER_BIT),t.renderQueue(r,o),this._frameBuffer.unbind(t),this.softShadow===fa.VSM&&this._gaussianFilter(t,a,a.width);var u=new ge;u.copy(o.worldTransform).invert().multiplyLeft(o.projectionMatrix),i.push(a),n.push(u._array)},renderPointLightShadow:function(t,e,r,n){var i=this._getTexture(e),a=t.gl;n.push(i),this._bindDistanceMaterial(r,e);for(var o=0;o<6;o++){var s=ca[o],u=this._getPointLightCamera(e,s);this._frameBuffer.attach(i,a.COLOR_ATTACHMENT0,a.TEXTURE_CUBE_MAP_POSITIVE_X+o),this._frameBuffer.bind(t),
a.clear(a.COLOR_BUFFER_BIT|a.DEPTH_BUFFER_BIT),t.renderQueue(r,u)}this._frameBuffer.unbind(t)},_gaussianFilter:function(t,e,r){var n={width:r,height:r,type:nr.FLOAT},i=this._texturePool.get(n);this._frameBuffer.attach(i),this._frameBuffer.bind(t),this._gaussianPassH.setUniform("texture",e),this._gaussianPassH.setUniform("textureWidth",r),this._gaussianPassH.render(t),this._frameBuffer.attach(e),this._gaussianPassV.setUniform("texture",i),this._gaussianPassV.setUniform("textureHeight",r),this._gaussianPassV.render(t),this._frameBuffer.unbind(t),this._texturePool.put(i)},_getTexture:function(t,e){var r=t.__GUID__,n=this._textures[r],i=t.shadowResolution||512;return e=e||1,n||(n=t instanceof ii?new fr:new or,n.width=i*e,n.height=i,this.softShadow===fa.VSM?(n.type=nr.FLOAT,n.anisotropic=4):(n.minFilter=je.NEAREST,n.magFilter=je.NEAREST,n.useMipmap=!1),this._textures[r]=n),n},_getPointLightCamera:function(t,e){this._lightCameras.point||(this._lightCameras.point={px:new ze,nx:new ze,py:new ze,ny:new ze,pz:new ze,nz:new ze});var r=this._lightCameras.point[e];switch(r.far=t.range,r.fov=90,r.position.set(0,0,0),e){case"px":r.lookAt(ie.POSITIVE_X,ie.NEGATIVE_Y);break;case"nx":r.lookAt(ie.NEGATIVE_X,ie.NEGATIVE_Y);break;case"py":r.lookAt(ie.POSITIVE_Y,ie.POSITIVE_Z);break;case"ny":r.lookAt(ie.NEGATIVE_Y,ie.NEGATIVE_Z);break;case"pz":r.lookAt(ie.POSITIVE_Z,ie.NEGATIVE_Y);break;case"nz":r.lookAt(ie.NEGATIVE_Z,ie.NEGATIVE_Y)}return t.getWorldPosition(r.position),r.update(),r},_getDirectionalLightCamera:function(){var t=new ge,e=new Se,r=new Se;return function(n,i,a){this._lightCameras.directional||(this._lightCameras.directional=new qe);var o=this._lightCameras.directional;e.copy(i.viewBoundingBoxLastFrame),e.intersection(a.frustum.boundingBox),o.position.copy(e.min).add(e.max).scale(.5).transformMat4(a.worldTransform),o.rotation.copy(n.rotation),o.scale.copy(n.scale),o.updateWorldTransform(),ge.invert(t,o.worldTransform),ge.multiply(t,t,a.worldTransform),r.copy(e).applyTransform(t);var s=r.min._array,u=r.max._array;return o.position.set((s[0]+u[0])/2,(s[1]+u[1])/2,u[2]).transformMat4(o.worldTransform),o.near=0,o.far=-s[2]+u[2],isNaN(this.lightFrustumBias)?o.far*=4:o.far+=this.lightFrustumBias,o.left=s[0],o.right=u[0],o.top=u[1],o.bottom=s[1],o.update(!0),o}}(),_getSpotLightCamera:function(t){this._lightCameras.spot||(this._lightCameras.spot=new ze);var e=this._lightCameras.spot;return e.fov=2*t.penumbraAngle,e.far=t.range,e.worldTransform.copy(t.worldTransform),e.updateProjectionMatrix(),ha.invert(e.viewMatrix._array,e.worldTransform._array),e},dispose:function(t){var e=t.gl||t;for(var r in this._depthMaterials){var n=this._depthMaterials[r];n.dispose(e)}for(var r in this._distanceMaterials){var n=this._distanceMaterials[r];n.dispose(e)}this._frameBuffer&&this._frameBuffer.dispose(e);for(var i in this._textures)this._textures[i].dispose(e);this._texturePool.clear(t.gl),this._depthMaterials={},this._distanceMaterials={},this._textures={},this._lightCameras={},this._shadowMapNumber={POINT_LIGHT:0,DIRECTIONAL_LIGHT:0,SPOT_LIGHT:0},this._meshMaterials={};for(var a=0;a<this._receivers.length;a++){var o=this._receivers[a];if(o.material&&o.material.shader){var s=o.material,u=s.shader;u.undefine("fragment","POINT_LIGHT_SHADOW_COUNT"),u.undefine("fragment","DIRECTIONAL_LIGHT_SHADOW_COUNT"),u.undefine("fragment","AMBIENT_LIGHT_SHADOW_COUNT"),s.set("shadowEnabled",0)}}this._opaqueCasters=[],this._receivers=[],this._lightsCastShadow=[]}});fa.VSM=1,fa.PCF=2;var da=Mr.extend({dynamic:!1}),_a=Bt.mat4,ma=Bt.vec3,pa={merge:function(t,e){if(t.length){var r=t[0],n=r.geometry,i=r.material,a=new Mr({dynamic:!1});a.boundingBox=new Se;for(var o=n.getEnabledAttributes(),s=0;s<o.length;s++){var u=o[s],l=n.attributes[u];a.attributes[u]||(a.attributes[u]=l.clone(!1))}for(var h=_a.create(),c=0,f=0,d=0;d<t.length;d++){var _=t[d].geometry;_.boundingBox&&(_.boundingBox.applyTransform(e?t[d].worldTransform:t[d].localTransform),a.boundingBox.union(_.boundingBox)),c+=_.vertexCount,f+=_.triangleCount}for(var m=0;m<o.length;m++){var u=o[m];a.attributes[u].init(c)}a.indices=c>=65535?new Uint32Array(3*f):new Uint16Array(3*f);for(var p=0,v=0,g=n.isUseIndices(),y=0;y<t.length;y++){var x=t[y],_=x.geometry,c=_.vertexCount,T=e?x.worldTransform._array:x.localTransform._array;_a.invert(h,T),_a.transpose(h,h);for(var E=0;E<o.length;E++){var u=o[E],b=_.attributes[u],S=a.attributes[u];if(b.value.length){for(var A=b.value.length,N=b.size,M=p*N,w=A/N,s=0;s<A;s++)S.value[M+s]=b.value[s];"position"===u?ma.forEach(S.value,N,M,w,ma.transformMat4,T):"normal"!==u&&"tangent"!==u||ma.forEach(S.value,N,M,w,ma.transformMat4,h)}}if(g){for(var A=_.indices.length,s=0;s<A;s++)a.indices[s+v]=_.indices[s]+p;v+=A}p+=c}return new Jr({material:i,geometry:a})}},splitByJoints:function(t,e,r,n,i){var a=t.geometry,o=t.skeleton,s=t.material,u=s.shader,l=t.joints;if(a&&o&&l.length){if(l.length<e)return t;for(var h={},c=a.indices,f=a.triangleCount,d=f,_=[],m=a.attributes.joint.value,p=0;p<f;p++)_[p]=!1;for(var v=[],g=[],y=function(t){return l[t]};d>0;){for(var x=[],T=[],E=[],b=0,p=0;p<l.length;p++)T[p]=-1;for(var S=0;S<f;S++)if(!_[S]){for(var A=!0,N=0,p=0;p<3;p++)for(var M=c[3*S+p],w=0;w<4;w++){var R=m[4*M+w];R>=0&&-1===T[R]&&(b<e?(T[R]=b,E[b++]=R,v[N++]=R):A=!1)}if(A)x.push(c.subarray(3*S,3*(S+1))),_[S]=!0,d--;else for(var p=0;p<N;p++)T[v[p]]=-1,E.pop(),b--}g.push({triangles:x,joints:E.map(y),jointReverseMap:T})}var C=new Me({name:t.name}),L=a.getEnabledAttributes();L.splice(L.indexOf("joint"),1);for(var P=[],D=0;D<g.length;D++){var I=g[D],O=I.jointReverseMap,b=I.joints.length,k=s.clone();if(s instanceof xi)k.jointCount=b;else{var U;if(n&&i){var F={};for(var B in u.vertexDefines)F[B]=u.vertexDefines[B];F.JOINT_COUNT=b,U=n.get(i,{textures:u.getEnabledTextures(),vertexDefines:F,fragmentDefines:u.fragmentDefines,precision:u.precision})}else(U=h[b])||(U=u.clone(),U.define("vertex","JOINT_COUNT",b),h[b]=U);k.attachShader(U,!0)}k.name=[s.name,D].join("-");for(var H=new Mr,G=new Jr({name:[t.name,p].join("-"),material:k,geometry:H,skeleton:o,joints:I.joints.slice()}),W=0,V=a.vertexCount,p=0;p<V;p++)P[p]=-1;for(var S=0;S<I.triangles.length;S++)for(var q=I.triangles[S],p=0;p<3;p++){var M=q[p];-1===P[M]&&(P[M]=W,W++)}for(var z=0;z<L.length;z++){var X=L[z],j=H.attributes[X];j.init(W)}H.attributes.joint.value=new Float32Array(4*W),H.indices=W>65535?new Uint32Array(3*I.triangles.length):new Uint16Array(3*I.triangles.length);var Y=0;W=0;for(var p=0;p<V;p++)P[p]=-1;for(var S=0;S<I.triangles.length;S++)for(var K=I.triangles[S],p=0;p<3;p++){var M=K[p];if(-1===P[M]){P[M]=W;for(var z=0;z<L.length;z++)for(var X=L[z],Q=a.attributes[X],j=H.attributes[X],Z=Q.size,w=0;w<Z;w++)j.value[W*Z+w]=Q.value[M*Z+w];for(var w=0;w<4;w++){var R=a.attributes.joint.value[4*M+w],J=4*W+w;H.attributes.joint.value[J]=R>=0?O[R]:-1}W++}H.indices[Y++]=P[M]}H.updateBoundingBox(),C.add(G)}for(var $=t.children(),p=0;p<$.length;p++)C.add($[p]);if(C.position.copy(t.position),C.rotation.copy(t.rotation),C.scale.copy(t.scale),r&&t.getParent()){var tt=t.getParent();tt.remove(t),tt.add(C)}return C}}},va=Bt.vec3,ga={},ya=["px","nx","py","ny","pz","nz"],xa={px:[2,1,0,-1,-1,1],nx:[2,1,0,1,-1,-1],py:[0,2,1,1,-1,-1],ny:[0,2,1,1,1,1],pz:[0,1,2,-1,-1,-1],nz:[0,1,2,1,-1,1]};ga.projectEnvironmentMap=function(t,e,r){r=r||{},r.lod=r.lod||0;var n,i=new Bn,a=64;e instanceof or?n=new Vn({scene:i,environmentMap:e}):(a=e.image&&e.image.px?e.image.px.width:e.width,n=new Fn({scene:i,environmentMap:e}));var o=Math.ceil(a/Math.pow(2,r.lod)),s=Math.ceil(a/Math.pow(2,r.lod)),u=new or({width:o,height:s}),l=new vr;n.material.shader.define("fragment","RGBM_ENCODE"),r.decodeRGBM&&n.material.shader.define("fragment","RGBM_DECODE"),n.material.set("lod",r.lod);for(var h=new Gn({texture:u}),c={},f=0;f<ya.length;f++){c[ya[f]]=new Uint8Array(o*s*4);var d=h.getCamera(ya[f]);d.fov=90,l.attach(u),l.bind(t),t.render(i,d),t.gl.readPixels(0,0,o,s,nr.RGBA,nr.UNSIGNED_BYTE,c[ya[f]]),l.unbind(t)}return n.dispose(t),l.dispose(t),u.dispose(t),Tt(t,c,o,s)};Wr.import("@export qtek.vr.disorter.output.vertex\nattribute vec2 texcoord: TEXCOORD_0;\nattribute vec3 position: POSITION;\nvarying vec2 v_Texcoord;\nvoid main()\n{\n    v_Texcoord = texcoord;\n    gl_Position = vec4(position.xy, 0.5, 1.0);\n}\n@end\n@export qtek.vr.disorter.output.fragment\nuniform sampler2D texture;\nvarying vec2 v_Texcoord;\nvoid main()\n{\n    gl_FragColor = texture2D(texture, v_Texcoord);\n}\n@end");var Ta=Rt.extend(function(){return{clearColor:[0,0,0,1],_mesh:new Jr({geometry:new Mr({dynamic:!0}),culling:!1,material:new Xr({depthTest:!1,shader:new Wr({vertex:Wr.source("qtek.vr.disorter.output.vertex"),fragment:Wr.source("qtek.vr.disorter.output.fragment")})})}),_fakeCamera:new ze}},{render:function(t,e){var r=this.clearColor,n=t.gl;n.clearColor(r[0],r[1],r[2],r[3]),n.clear(n.COLOR_BUFFER_BIT),n.disable(n.BLEND),this._mesh.material.set("texture",e),t.saveViewport(),t.setViewport(0,0,t.getWidth(),t.getHeight()),t.renderQueue([this._mesh],this._fakeCamera),t.restoreViewport()},updateFromVRDisplay:function(t){t.deviceInfo_?this._updateMesh(20,20,t.deviceInfo_):console.warn("Cant get vrDisplay.deviceInfo_, seems code changed")},_updateMesh:function(t,e,r){var n=this._mesh.geometry.attributes.position,i=this._mesh.geometry.attributes.texcoord0;n.init(2*t*e),i.init(2*t*e);for(var a=r.getLeftEyeVisibleTanAngles(),o=r.getLeftEyeNoLensTanAngles(),s=r.getLeftEyeVisibleScreenRect(o),u=0,l=[],h=[],c=0;c<2;c++){for(var f=0;f<e;f++)for(var d=0;d<t;d++,u++){var _=d/(t-1),m=f/(e-1),p=_,v=m,g=Et(a[0],a[2],_),y=Et(a[3],a[1],m),x=Math.sqrt(g*g+y*y),T=r.distortion.distortInverse(x),E=g*T/x,b=y*T/x;_=(E-o[0])/(o[2]-o[0]),m=(b-o[3])/(o[1]-o[3]),_=2*(s.x+_*s.width-.5),m=2*(s.y+m*s.height-.5),l[0]=_,l[1]=m,l[2]=0,h[0]=.5*p+.5*c,h[1]=v,n.set(u,l),i.set(u,h)}var S=a[2]-a[0];a[0]=-(S+a[0]),a[2]=S-a[2],S=o[2]-o[0],o[0]=-(S+o[0]),o[2]=S-o[2],s.x=1-(s.x+s.width)}for(var A=new Uint16Array(2*(t-1)*(e-1)*6),N=t/2,M=e/2,u=0,w=0,c=0;c<2;c++)for(var f=0;f<e;f++)for(var d=0;d<t;d++,u++)0!==d&&0!==f&&(d<=N==f<=M?(A[w++]=u,A[w++]=u-t-1,A[w++]=u-t,A[w++]=u-t-1,A[w++]=u,A[w++]=u-1):(A[w++]=u-1,A[w++]=u-t,A[w++]=u,A[w++]=u-t,A[w++]=u-1,A[w++]=u-t-1));this._mesh.geometry.indices=A,this._mesh.geometry.dirty()}}),Ea=new ge,ba=Me.extend(function(){return{aspect:.5,_leftCamera:new ze,_rightCamera:new ze,_eyeLeft:new ge,_eyeRight:new ge,_frameData:null}},{updateFromCamera:function(t,e,r,n){t.transformNeedsUpdate()&&console.warn("Node transform is not updated"),e=null==e?10:e,r=null==r?1:r,n=null==n?.064:n;var i=t.fov,a=t.aspect*this.aspect,o=t.near;Ea.copy(t.projectionMatrix);var s,u,n=n/2,l=n*o/e,h=o*Math.tan(Math.PI/180*i*.5)/r;this._eyeLeft._array[12]=-n,this._eyeRight._array[12]=n,s=-h*a+l,u=h*a+l,Ea._array[0]=2*o/(u-s),Ea._array[8]=(u+s)/(u-s),this._leftCamera.projectionMatrix.copy(Ea),s=-h*a-l,u=h*a-l,Ea._array[0]=2*o/(u-s),Ea._array[8]=(u+s)/(u-s),this._rightCamera.projectionMatrix.copy(Ea),this._leftCamera.worldTransform.copy(t.worldTransform).multiply(this._eyeLeft),this._rightCamera.worldTransform.copy(t.worldTransform).multiply(this._eyeRight),this._leftCamera.decomposeWorldTransform(),this._leftCamera.decomposeProjectionMatrix(),this._rightCamera.decomposeWorldTransform(),this._rightCamera.decomposeProjectionMatrix()},updateFromVRDisplay:function(t,e){if("undefined"!=typeof VRFrameData){var r=this._frameData||(this._frameData=new VRFrameData);t.getFrameData(r);var n=this._leftCamera,i=this._rightCamera;n.projectionMatrix.setArray(r.leftProjectionMatrix),n.decomposeProjectionMatrix(),n.viewMatrix.setArray(r.leftViewMatrix),n.setViewMatrix(n.viewMatrix),i.projectionMatrix.setArray(r.rightProjectionMatrix),i.decomposeProjectionMatrix(),i.viewMatrix.setArray(r.rightViewMatrix),i.setViewMatrix(i.viewMatrix),e&&e.worldTransform&&(e.transformNeedsUpdate()&&console.warn("Node transform is not updated"),n.worldTransform.multiplyLeft(e.worldTransform),n.decomposeWorldTransform(),i.worldTransform.multiplyLeft(e.worldTransform),i.decomposeWorldTransform())}},getLeftCamera:function(){return this._leftCamera},getRightCamera:function(){return this._rightCamera}}),Sa={Animation:It,Animator:v,Blend1DClip:kt,Blend2DClip:Vt,Clip:Lt,easing:Ct,SamplerTrack:Kt,TrackClip:Jt,TransformTrack:Xt},Aa={Task:te,TaskGroup:ee},Na={Orthographic:qe,Perspective:ze},Ma={Material:Xe,Renderer:$e},wa={Compositor:gr,FilterNode:nn,Graph:er,Node:tr,Pass:rn,SceneNode:an,TextureNode:on,TexturePool:sr},Ra={Base:Rt,Cache:rr,glenum:je,GLInfo:j,LinkedList:ln,LRU:hn,mixin:{extend:bt,notifier:St},request:$t,util:wt,vendor:Tr},Ca={GBuffer:bn,Renderer:Ln},La={glmatrix:Bt},Pa={Cone:Mn,Cube:Dn,Cylinder:wn,Plane:wr,Sphere:Sn},Da={Ambient:kn,AmbientCubemap:ei,AmbientSH:ri,Directional:ni,Point:ii,Sphere:ai,Spot:oi,Tube:si},Ia={FX:hi,GLTF:wi},Oa={BoundingBox:Se,Frustum:Fe,Matrix2:Ci,Matrix2d:Pi,Matrix3:Ii,Matrix4:ge,Plane:Le,Quaternion:ce,Ray:He,util:ir,Value:Oi,Vector2:Gt,Vector3:ie,Vector4:Wi},ka={Emitter:ji,Field:Yi,ForceField:Qi,Particle:Xi,ParticleRenderable:Ji},Ua={PixelPicking:$i,RayPicking:ea},Fa={FirstPersonControl:ra,GestureMgr:na,InfinitePlane:sa,OrbitControl:ua,Skybox:Fn,Skydome:Vn},Ba={EnvironmentMap:Gn,Reflection:la,ShadowMap:fa},Ha={library:dn,source:{header:{light:mn}}},Ga={cubemap:$n,dds:jn,delaunay:Ft,hdr:Zn,mesh:pa,sh:ga,texture:Jn},Wa={CardboardDistorter:Ta,StereoCamera:ba};t.animation=Sa,t.async=Aa,t.Camera=Ve,t.camera=Na,t.canvas=Ma,t.compositor=wa,t.core=Ra,t.deferred=Ca,t.dep=La,t.FrameBuffer=vr,t.Geometry=Mr,t.geometry=Pa,t.Joint=In,t.Light=On,t.light=Da,t.loader=Ia,t.Material=Xr,t.math=Oa,t.Mesh=Jr,t.Node=Me,t.particle=ka,t.picking=Ua,t.plugin=Fa,t.prePass=Ba,t.Renderable=Zr,t.Renderer=Tn,t.Scene=Bn,t.Shader=Wr,t.shader=Ha,t.Skeleton=Si,t.StandardMaterial=xi,t.StaticGeometry=da,t.Texture=nr,t.Texture2D=or,t.TextureCube=fr,t.util=Ga,t.version="0.6.1",t.vr=Wa,Object.defineProperty(t,"__esModule",{value:!0})});
